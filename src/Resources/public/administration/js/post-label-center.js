(function(){var e={601:function(){},37:function(){},292:function(){},68:function(){},834:function(){},708:function(){},66:function(){},640:function(){},803:function(){},652:function(){},450:function(){},361:function(){},286:function(){},738:function(){},589:function(){},102:function(){},290:function(){let{Component:e}=Shopware,{Criteria:t}=Shopware.Data;e.extend("config-delivery-state","sw-custom-field-type-entity",{props:{criteria:{type:Object,required:!1,default(){let e=new t(1,100);return e.addFilter(t.equals("stateMachine.technicalName","order_delivery.state")),e}},currentCustomField:{type:Object,required:!1},set:{type:Object,required:!1}}})},197:function(){let{Component:e}=Shopware,{Criteria:t}=Shopware.Data;e.override("sw-custom-field-type-entity",{computed:{entityTypes(){let e=this.$super("entityTypes");return e.push({label:this.$tc("plc.custom-field.entity.shipping-services"),value:"plc_shipping_services",config:{labelProperty:["displayName"]}}),e}}})},226:function(){let{Component:e}=Shopware;e.override("sw-system-config",{methods:{hasMapInheritanceSupport(e){return!!["config-delivery-state"].includes(e.config?e.config.componentName:void 0)||this.$super("hasMapInheritanceSupport",e)}}})},604:function(){let{Component:e,Mixin:t,Filter:a}=Shopware,{Criteria:n}=Shopware.Data;t.register("plc-helper",{computed:{dateFilter(){return a.getByName("date")},assetFilter(){return Shopware.Filter.getByName("asset")}},methods:{formatDate(e,t=!1){return!0===t?this.dateFilter(e,{month:"2-digit",day:"2-digit",year:"numeric",hour:void 0,minute:void 0,second:void 0}).replaceAll(".","-"):this.dateFilter(e,{hour:"2-digit",minute:"2-digit",second:"2-digit"})},isValidIban(e){if(!e)return!0;let t=String(e).toUpperCase().replace(/[^A-Z0-9]/g,""),a=t.match(/^([A-Z]{2})(\d{2})([A-Z\d]+)$/),n;return!!a&&t.length===({AD:24,AE:23,AT:20,AZ:28,AL:28,BA:20,BE:16,BG:22,BH:22,BR:29,BY:28,CH:21,CR:21,CY:28,CZ:24,DE:22,DK:18,DO:28,EE:20,ES:24,EG:29,FI:18,FO:18,FR:27,GB:22,GI:23,GL:18,GR:27,GT:28,GE:22,HR:21,HU:28,IE:22,IL:23,IS:26,IT:27,JO:30,KW:30,KZ:20,LB:28,LI:21,LT:20,LU:20,LV:21,LC:32,MC:27,MD:24,ME:22,MK:19,MR:27,MT:31,MU:30,NL:18,NO:15,PK:24,PL:28,PS:29,PT:25,QA:29,RO:24,RS:22,SA:24,SE:24,SI:19,SK:24,SM:27,SC:31,ST:25,SV:28,TN:24,TR:26,IQ:23,TL:23,UA:29,VA:22,VG:24,XK:20})[a[1]]&&(n=(a[3]+a[1]+a[2]).replace(/[A-Z]/g,function(e){return e.charCodeAt(0)-55}),this.mod97(n))},mod97(e){let t=e.slice(0,2);for(let a=2;a<e.length;a+=7)t=parseInt(String(t)+e.substring(a,a+7),10)%97;return t},jsonDecode(e,t){let a=JSON.parse(e);if(Array.isArray(a)){let e="";return a.forEach(a=>{""!==e&&(e+=", "),e+=a[t]}),e}return a[t]}}})},753:function(e,t,a){var n=a(601);n.__esModule&&(n=n.default),"string"==typeof n&&(n=[[e.id,n,""]]),n.locals&&(e.exports=n.locals),a(346).Z("0bd7e4d2",n,!0,{})},662:function(e,t,a){var n=a(37);n.__esModule&&(n=n.default),"string"==typeof n&&(n=[[e.id,n,""]]),n.locals&&(e.exports=n.locals),a(346).Z("519dac54",n,!0,{})},631:function(e,t,a){var n=a(292);n.__esModule&&(n=n.default),"string"==typeof n&&(n=[[e.id,n,""]]),n.locals&&(e.exports=n.locals),a(346).Z("89188eb6",n,!0,{})},300:function(e,t,a){var n=a(68);n.__esModule&&(n=n.default),"string"==typeof n&&(n=[[e.id,n,""]]),n.locals&&(e.exports=n.locals),a(346).Z("41c6e088",n,!0,{})},348:function(e,t,a){var n=a(834);n.__esModule&&(n=n.default),"string"==typeof n&&(n=[[e.id,n,""]]),n.locals&&(e.exports=n.locals),a(346).Z("592da9a1",n,!0,{})},707:function(e,t,a){var n=a(708);n.__esModule&&(n=n.default),"string"==typeof n&&(n=[[e.id,n,""]]),n.locals&&(e.exports=n.locals),a(346).Z("eefea2f6",n,!0,{})},769:function(e,t,a){var n=a(66);n.__esModule&&(n=n.default),"string"==typeof n&&(n=[[e.id,n,""]]),n.locals&&(e.exports=n.locals),a(346).Z("1658a6a8",n,!0,{})},494:function(e,t,a){var n=a(640);n.__esModule&&(n=n.default),"string"==typeof n&&(n=[[e.id,n,""]]),n.locals&&(e.exports=n.locals),a(346).Z("0f350a72",n,!0,{})},381:function(e,t,a){var n=a(803);n.__esModule&&(n=n.default),"string"==typeof n&&(n=[[e.id,n,""]]),n.locals&&(e.exports=n.locals),a(346).Z("79be100b",n,!0,{})},279:function(e,t,a){var n=a(652);n.__esModule&&(n=n.default),"string"==typeof n&&(n=[[e.id,n,""]]),n.locals&&(e.exports=n.locals),a(346).Z("4cc775e2",n,!0,{})},994:function(e,t,a){var n=a(450);n.__esModule&&(n=n.default),"string"==typeof n&&(n=[[e.id,n,""]]),n.locals&&(e.exports=n.locals),a(346).Z("640bf04a",n,!0,{})},731:function(e,t,a){var n=a(361);n.__esModule&&(n=n.default),"string"==typeof n&&(n=[[e.id,n,""]]),n.locals&&(e.exports=n.locals),a(346).Z("55fa78ca",n,!0,{})},713:function(e,t,a){var n=a(286);n.__esModule&&(n=n.default),"string"==typeof n&&(n=[[e.id,n,""]]),n.locals&&(e.exports=n.locals),a(346).Z("0fcfb5fa",n,!0,{})},265:function(e,t,a){var n=a(738);n.__esModule&&(n=n.default),"string"==typeof n&&(n=[[e.id,n,""]]),n.locals&&(e.exports=n.locals),a(346).Z("1b8e6b81",n,!0,{})},446:function(e,t,a){var n=a(589);n.__esModule&&(n=n.default),"string"==typeof n&&(n=[[e.id,n,""]]),n.locals&&(e.exports=n.locals),a(346).Z("3ebf6dd0",n,!0,{})},329:function(e,t,a){var n=a(102);n.__esModule&&(n=n.default),"string"==typeof n&&(n=[[e.id,n,""]]),n.locals&&(e.exports=n.locals),a(346).Z("49b1b1a8",n,!0,{})},346:function(e,t,a){"use strict";function n(e,t){for(var a=[],n={},s=0;s<t.length;s++){var l=t[s],i=l[0],r={id:e+":"+s,css:l[1],media:l[2],sourceMap:l[3]};n[i]?n[i].parts.push(r):a.push(n[i]={id:i,parts:[r]})}return a}a.d(t,{Z:function(){return h}});var s="undefined"!=typeof document;if("undefined"!=typeof DEBUG&&DEBUG&&!s)throw Error("vue-style-loader cannot be used in a non-browser environment. Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.");var l={},i=s&&(document.head||document.getElementsByTagName("head")[0]),r=null,o=0,d=!1,c=function(){},p=null,m="data-vue-ssr-id",u="undefined"!=typeof navigator&&/msie [6-9]\b/.test(navigator.userAgent.toLowerCase());function h(e,t,a,s){d=a,p=s||{};var i=n(e,t);return b(i),function(t){for(var a=[],s=0;s<i.length;s++){var r=l[i[s].id];r.refs--,a.push(r)}t?b(i=n(e,t)):i=[];for(var s=0;s<a.length;s++){var r=a[s];if(0===r.refs){for(var o=0;o<r.parts.length;o++)r.parts[o]();delete l[r.id]}}}}function b(e){for(var t=0;t<e.length;t++){var a=e[t],n=l[a.id];if(n){n.refs++;for(var s=0;s<n.parts.length;s++)n.parts[s](a.parts[s]);for(;s<a.parts.length;s++)n.parts.push(v(a.parts[s]));n.parts.length>a.parts.length&&(n.parts.length=a.parts.length)}else{for(var i=[],s=0;s<a.parts.length;s++)i.push(v(a.parts[s]));l[a.id]={id:a.id,refs:1,parts:i}}}}function g(){var e=document.createElement("style");return e.type="text/css",i.appendChild(e),e}function v(e){var t,a,n=document.querySelector("style["+m+'~="'+e.id+'"]');if(n){if(d)return c;n.parentNode.removeChild(n)}if(u){var s=o++;t=f.bind(null,n=r||(r=g()),s,!1),a=f.bind(null,n,s,!0)}else t=_.bind(null,n=g()),a=function(){n.parentNode.removeChild(n)};return t(e),function(n){n?(n.css!==e.css||n.media!==e.media||n.sourceMap!==e.sourceMap)&&t(e=n):a()}}var y=function(){var e=[];return function(t,a){return e[t]=a,e.filter(Boolean).join("\n")}}();function f(e,t,a,n){var s=a?"":n.css;if(e.styleSheet)e.styleSheet.cssText=y(t,s);else{var l=document.createTextNode(s),i=e.childNodes;i[t]&&e.removeChild(i[t]),i.length?e.insertBefore(l,i[t]):e.appendChild(l)}}function _(e,t){var a=t.css,n=t.media,s=t.sourceMap;if(n&&e.setAttribute("media",n),p.ssrId&&e.setAttribute(m,t.id),s&&(a+="\n/*# sourceURL="+s.sources[0]+" */\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(s))))+" */"),e.styleSheet)e.styleSheet.cssText=a;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(a))}}}},t={};function a(n){var s=t[n];if(void 0!==s)return s.exports;var l=t[n]={id:n,exports:{}};return e[n](l,l.exports,a),l.exports}a.d=function(e,t){for(var n in t)a.o(t,n)&&!a.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},a.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},a.p="bundles/postlabelcenter/",window?.__sw__?.assetPath&&(a.p=window.__sw__.assetPath+"/bundles/postlabelcenter/"),function(){"use strict";a(604);var e=JSON.parse('{"plc":{"menu":{"plc":"Post-Labelcenter","returnReason":"R\xfcckgabegr\xfcnde","addressData":"Adressen","bankData":"Bankdaten","dailyStatement":"Tagesabschluss","shippingService":"Versandservices"},"general":{"titleSidebarItemRefresh":"Aktualisieren","context-menu":{"show":"Anzeigen","edit":"Bearbeiten","delete":"L\xf6schen"}},"custom-field":{"entity":{"shipping-services":"Post - Versandservices"}},"modal":{"editTitle":"Bearbeiten: ","save":"Speichern","generate":"Erstellen","download":"Herunterladen","buttonCancel":"Abbrechen","buttonDelete":"L\xf6schen","createLabel":"Versandlabel erstellen","pdfLabelStartingSoon":"Ihr Download startet in K\xfcrze","returnReason":{"textDeleteConfirm":"Bist Du sicher, dass Du den R\xfcckgabegrund \\"{name}\\" l\xf6schen m\xf6chtest?"},"addressData":{"textDeleteConfirm":"Bist Du sicher, dass Du die Adresse \\"{name}\\" l\xf6schen m\xf6chtest?"},"bankData":{"textDeleteConfirm":"Bist Du sicher, dass Du die Bankdaten \\"{name}\\" l\xf6schen m\xf6chtest?"},"shippingServices":{"textDeleteConfirm":"Bist Du sicher, dass Du den Versandservice \\"{name}\\" l\xf6schen m\xf6chtest?"},"dailyStatement":{"textDeleteConfirm":"Bist Du sicher, dass Du den Tagesabschluss l\xf6schen m\xf6chtest?"},"noChangesDetected":"Keine \xc4nderungen erkannt.","saveSuccess":"Erfolgreich gespeichert.","saveError":"Fehler beim Speichern.","cancelLabelSuccessful":"Label erfolgreich gel\xf6scht","errorDeletingLabel":"Das Label konnte nicht gel\xf6scht werden.","generateAndDownload":"Erstellen & Herunterladen"},"returnReasons":{"list":{"title":"R\xfcckgabegr\xfcnde","technicalName":"Technische Bezeichnung","name":"Name","create":"Erstellen","show":"Anzeigen"},"singleReason":"R\xfcckgabegrund","placeholder":{"name":"z.B. Zu klein","technicalName":"z.B. small"},"label":{"name":"Name","technicalName":"Technischer Name"},"createTitle":"R\xfcckgabegrund erstellen","editTitle":"R\xfcckgabegrund bearbeiten","messages":{"missingValues":"Ein oder mehrere Werte fehlen.","invalidValues":"Ein oder mehrere Werte fehlerhaft.","success":"Erfolgreich gespeichert.","error":"Speichern fehlgeschlagen."}},"shippingServices":{"list":{"title":"Versandservices","displayName":"Name","salesChannel":"Verkaufskanal","shippingProduct":"Versandprodukt","featureList":"Zusatzoptionen","create":"Erstellen","show":"Anzeigen","country":"Land","countries":"L\xe4nder","countryCodes":"L\xe4ndercodes"},"createTitle":"Versandservice erstellen","editTitle":"Versandservice bearbeiten","placeholder":{"displayName":"Anzeigename eingeben...","salesChannel":"Verkaufskanal ausw\xe4hlen...","country":"Land ausw\xe4hlen.","countries":"L\xe4nder ausw\xe4hlen.","service":"Produkt ausw\xe4hlen...","features":"Ein oder mehrere Features ausw\xe4hlen..."},"label":{"displayName":"Anzeigename","salesChannel":"Verkaufskanal","country":"Land","service":"Produkt","features":"Features","countries":"L\xe4nder","countryCodes":"L\xe4ndercodes"},"messages":{"noServicesFound":"Keine Services gefunden. Bitte ausgew\xe4hlte L\xe4nder pr\xfcfen.","listCompatible":"Liste kompatibel. Erfolgreich gespeichert.","listIncompatible":"Liste nicht kompatibel.","missingValues":"Notwendige Parameter fehlen","servicesSaved":"Versandservice erfolgreich gespeichert.","errorSavingService":"Fehler beim Speichern des Versandservices."},"shippingMethod":{"headline":"Post-Versandservices erstellen","link":"Zu den Post-Versandservices","backLink":"Shopware-Versandmethoden"}},"bankData":{"list":{"title":"Bankdaten","displayName":"Anzeigename","accountHolder":"Kontoinhaber","bic":"BIC","iban":"IBAN","create":"Erstellen","show":"Anzeigen"},"placeholder":{"displayName":"z.B. Hauptbank","accountHolder":"z.B. Max Mustermann","bic":"z.B. SPBAATWWXXX","iban":"z.B. ATXX XXXX XXXX XXXX XXXX"},"label":{"displayName":"Anzeigename","accountHolder":"Kontoinhaber","bic":"BIC","iban":"IBAN"},"createTitle":"Bankdaten erstellen","editTitle":"Bankdaten bearbeiten","messages":{"missingValues":"Ein oder mehrere Werte fehlen.","invalidValues":"Ein oder mehrere Werte fehlerhaft.","success":"Erfolgreich gespeichert.","error":"Speichern fehlgeschlagen."}},"addressData":{"options":{"shipping":"Versandadresse","return":"R\xfccksendeadresse","returnAndShipping":"Versand- & R\xfccksendeadresse"},"list":{"email":"E-Mail","title":"Adressen","displayName":"Anzeigename","defaultAddress":"Standard-Adresse","eoriNumber":"EORI-Nummer","salutation":"Anrede","company":"Firma","department":"Abteilung","firstName":"Vorname","lastName":"Nachname","street":"Stra\xdfe","country":"Land","city":"Stadt","zipcode":"PLZ","phoneNumber":"Telefon","addressType":"Adresstyp","bankData":"Bankdaten","salesChannel":"Verkaufskanal","create":"Erstellen","show":"Anzeigen"},"placeholder":{"displayName":"z.B. Firma Hauptadresse","eoriNumber":"z.B. AT123456789012345","salutation":"Anrede ausw\xe4hlen...","company":"z.B. Musterfirma","department":"z.B. Musterabteilung","firstName":"z.B. Max","lastName":"z.B. Mustermann","street":"z.B. Musterstra\xdfe 15","city":"z.B Musterstadt","country":"Land","zipcode":"z.B. 1111","phoneNumber":"z.B. 0800/1234567","addressType":"Adresstyp ausw\xe4hlen...","bankData":"Bankdaten ausw\xe4hlen...","salesChannel":"Verkaufskanal ausw\xe4hlen...","email":"E-Mail eingeben..."},"label":{"email":"E-Mail","displayName":"Anzeigename","eoriNumber":"EORI-Nummer","salutation":"Anrede","defaultAddress":"Standard-Adresse","company":"Firma","department":"Abteilung","firstName":"Vorname","lastName":"Nachname","street":"Stra\xdfe","city":"Stadt","country":"Land","zipcode":"PLZ","phoneNumber":"Telefon","addressType":"Adresstyp","bankData":"Bankdaten","salesChannel":"Verkaufskanal"},"createTitle":"Adresse erstellen","editTitle":"Adresse bearbeiten","messages":{"missingValues":"Ein oder mehrere Werte fehlen.","invalidValues":"Ein oder mehrere Werte fehlerhaft.","success":"Erfolgreich gespeichert.","error":"Speichern fehlgeschlagen."}},"order":{"tab":{"trackingTitle":"Versandtracking","documentsTitle":"Post Labels","returnData":"Post Retouren"},"page":{"documentListTitle":"Erstellte Post Labels","returnDataTitle":"Erstellte Kundenretouren"},"labels":{"fileName":"Dateiname","createdAt":"Erstellungsdatum","shippingDocuments":"Dokumente","trackingAT":"Trackingnummer (AT)","trackingINT":"Trackingnummer (international)","downloaded":"Heruntergeladen?","delete":"Stornieren?","bulkLabel":"Postlabels (Mehrfach-Erstellung)","mergedLabel":"Bestehende Labels herunterladen"},"download":{"shippingLabel":"SHIPPING_LABEL-","returnLabel":"RETURN_LABEL-","shippingDocuments":"DOKUMENTE-"},"postLabels":{"modal":{"creatingLabel":"Label wird erstellt","createLabelSuccess":"Label erfolgreich erstellt","errorCreatingLabel":"Fehler beim Erstellen des Labels"},"shippingLabel":"Versandlabel","returnLabel":"Retourenlabel","shippingDocuments":"Zolldokumente","fileName":"Dateiname","fileType":"Dateityp","createdAt":"Erstellungsdatum","download":"Herunterladen","generateAdditionalDocuments":"Post-Labels generieren","helpText":{"phone":"Bei Next-Day und Post-Express International Sendungen ist dieses Feld verpflichtend","customsDataLineItems":"F\xfcr Auslandssendungen bitte Zolltarif-Nummer, Ursprungsland, Zolloptionen und Einheit ausf\xfcllen","shippingServicesInfo":"Eine \xc4nderungen der Versandmethode f\xfcr normale Sendungen ist bei Labelerstellung m\xf6glich.\\nAnpassung der Lieferadresse f\xfcr/auf Wunschabholstation/-filiale ist derzeit leider nicht vorgesehen."},"label":{"recipientData":"Empf\xe4ngerdaten","senderAddress":"Absenderadresse","shippingData":"Sendungsdaten","senderData":"Absenderdaten","customsData":"Zolldaten","orderData":"Bestelldaten","packageData":"Paketdaten","packageNumber":"Paketnummer","duplicate":"Duplizieren","documentType":"Dokumentenart","documentNumber":"Dokumentennummer","quantity":"Menge","phone":"Telefon","shipperAddress":"Versandadresse","returnAddress":"R\xfccksendeadresse","labelType":"Label-Typ","title":"Adressen","displayName":"Anzeigename","defaultAddress":"Standard-Adresse","eoriNumber":"EORI-Nummer","salutation":"Anrede","company":"Firma","department":"Abteilung","firstName":"Vorname","lastName":"Nachname","street":"Stra\xdfe","city":"Stadt","zipcode":"PLZ","phoneNumber":"Telefon","addressType":"Adresstyp","bankData":"Bankdaten","salesChannel":"Verkaufskanal","additionalAddressLine1":"Addresszusatz 1","additionalAddressLine2":"Addresszusatz 2","create":"Erstellen","show":"Anzeigen","email":"E-Mail","currency":"W\xe4hrung","amountTotal":"Bestellsumme","shippingService":"Versandprodukt","country":"Land","countryId":"Land","accountHolder":"Kontoinhaber","bic":"BIC","iban":"IBAN","customsDescription":"Zollbeschreibung","returnOptions":"R\xfccksendeoption","returnWays":"R\xfccksendeweg"},"placeholder":{"shipperAddress":"Versandadresse ausw\xe4hlen...","returnAddress":"R\xfccksendeadresse ausw\xe4hlen...","email":"eine E-Mail eingeben...","labelType":"einen Labeltyp ausw\xe4hlen...","displayName":"z.B. Firma Hauptadresse","eoriNumber":"z.B. AT123456789012345","salutation":"Anrede ausw\xe4hlen...","company":"z.B. Musterfirma","department":"z.B. Musterabteilung","firstName":"z.B. Max","lastName":"z.B. Mustermann","street":"z.B. Musterstra\xdfe 15","city":"z.B Musterstadt","phone":"Telefonnummer eingeben...","country":"Land ausw\xe4hlen...","countryId":"Land ausw\xe4hlen...","zipcode":"z.B. 1111","phoneNumber":"z.B. 0800/1234567","addressType":"einen Adresstyp ausw\xe4hlen...","bankData":"Bankdaten ausw\xe4hlen...","salesChannel":"Verkaufskanal ausw\xe4hlen...","additionalAddressLine1":"Adresszusatz 1 eingeben...","additionalAddressLine2":"Adresszusatz 2 eingeben...","currency":"eine W\xe4hrung ausw\xe4hlen...","amountTotal":"Bestellsumme eingeben...","shippingService":"Versandprodukt ausw\xe4hlen...","accountHolder":"Kontoinhaber eingeben...","bic":"BIC eingeben...","iban":"IBAN eingeben...","customsDescription":"Zollbeschreibung eingeben...","returnOptions":"R\xfcckesendeoption ausw\xe4hlen...","returnWays":"R\xfccksendeweg ausw\xe4hlen..."},"createTitle":"Versanddokumente erstellen","messages":{"errorCreatingLabel":"Fehler beim Erstellen des Labels","creatingLabel":"Label wird erstellt","successCreatingLabel":"Label erfolgreich erstellt.","errorFetchingBulkOrder":"Bestelldaten konnten nicht geladen werden."},"error":{"noShippingServiceLanguage":"Bitte ein Versandprodukt in der ausgew\xe4hlten Sprache bei der Versandart hinterlegen."}},"returnData":{"returnNote":"Retoureninfo","returnReason":"Retourengrund","noReturnsFound":"Keine Retouren gefunden.","columns":{"productNumber":"Produktnummer","name":"Produktname","quantity":"Retourenmenge","unitPrice":"Einzelpreis (zum Bestelldatum)"}}},"dailyStatement":{"createTitle":"Tagesabschluss herunterladen","list":{"plcDateAdded":"Hinzugef\xfcgt am","plcCreatedOn":"Erstellt am","salesChannel":"Verkaufskanal","pdfData":"Tagesabschluss","create":"Erstellen","title":"Tagesabschluss"},"messages":{"errorCreatingStatement":"Fehler beim Erstellen des Tagesabschlusses","successCreating":"Tagesabschluss erstellt, Download startet in K\xfcrze","successNoData":"Keine Daten f\xfcr den aktuellen Tag vorhanden","missingValues":"Bitte alle Felder ausf\xfcllen"},"modal":{"placeholder":{"statementDate":"z.B. 12.12.2022","salesChannel":"Verkaufskanal ausw\xe4hlen..."},"label":{"statementDate":"Datum","salesChannel":"Verkaufskanal"},"helpText":{"statementDate":"Wird kein Datum ausgef\xfcllt, wird ein neuer Tagesabschluss f\xfcr heute erstellt","info":"Hinweis","creationInfo":"Bitte beachten Sie, dass der Tagesabschlusses nur einmal t\xe4glich ausgel\xf6st werden kann. Der Tagesabschluss beinhaltet alle erstellen PLC-Labels, die ab dem Zeitpunkt der Erstellung des letzten Tagesabschlusses bis zum Zeitpunkt der Erstellung des aktuellen Tagesabschlusses generiert wurden."}}},"bulkLabel":{"modalTitle":"Massen-Labelerstellung","columns":{"orderNumber":"Bestellnummer","targetCountry":"Zielland","deliveryState":"Aktueller Versandstatus","customsInformation":"Zollinformationen eingegeben","savedLabel":"Label gespeichert"},"context-menu":{"createLabel":"Label erstellen/bearbeiten"},"label":{"deliveryState":"Neuer Versandstatus (optional)","saveLabel":"Speichern","notCreatedLabels":"Nicht erstellte/fehlerhafte Labels","createdLabels":"Erstellte Labels"},"placeholder":{"deliveryState":"Bitte einen Versandstatus ausw\xe4hlen..."},"messages":{"missingFields":"Bitte alle Felder ausf\xfcllen.","noLabelsGenerated":"Bitte mindestens ein Label generieren...","creatingLabel":"Label werden erstellt...","downloadStartingSoon":"Download startet in K\xfcrze","errorDownloading":"Fehler beim Downloaden der Labels","failedTransitions":"F\xfcr folgende Bestellungen war eine Status\xe4nderung nicht m\xf6glich: {orderNumbers}","failedOrders":"Bestellnummer #{orderNumber}: {message}"}},"mergedLabel":{"label":{"chosenOrders":"Ausgew\xe4hlte Bestellungen","generatedLabels":"Labels zu folgenden Bestellungen exportiert"},"list":{"orderNumber":"Bestellnummer","orderDateTime":"Bestellzeitpunkt","targetCountry":"Zielland","labelTypes":"Labeltypen"},"messages":{"downloadStartingSoon":"Download startet in K\xfcrze","errorDownloading":"Fehler beim Downloaden der Labels","noLabelsFound":"Keine Labels gefunden..."},"modalTitle":"Bestehende Labels herunterladen"}}}'),t=JSON.parse('{"plc":{"menu":{"plc":"Post label center","returnReason":"Return reasons","addressData":"Addresses","bankData":"Bank details","dailyStatement":"End of the day","shippingService":"Shipping Services"},"general":{"titleSidebarItemRefresh":"To update","context-menu":{"show":"Show","edit":"Edit","delete":"Delete"}},"custom-field":{"entity":{"shipping-services":"Post - shipping services"}},"modal":{"editTitle":"Edit: ","save":"Save","generate":"Create","download":"Download","buttonCancel":"Cancel","buttonDelete":"Delete","createLabel":"Create shipping label","pdfLabelStartingSoon":"Your download will start shortly","returnReason":{"textDeleteConfirm":"Are you sure you want to delete the return reason \\"{name}\\"?"},"addressData":{"textDeleteConfirm":"Are you sure you want to delete the address \\"{name}\\"?"},"bankData":{"textDeleteConfirm":"Are you sure you want to delete the bank details \\"{name}\\"?"},"shippingServices":{"textDeleteConfirm":"Are you sure you want to delete the shipping service \\"{name}\\"?"},"dailyStatement":{"textDeleteConfirm":"Are you sure you want to delete the daily closing?"},"noChangesDetected":"No changes detected.","saveSuccess":"Saved successfully.","saveError":"Error while saving.","cancelLabelSuccessful":"Label deleted successfully","errorDeletingLabel":"The label could not be deleted.","generateAndDownload":"Create & Download"},"returnReasons":{"list":{"title":"Return reasons","technicalName":"Technical name","name":"Surname","create":"Create","show":"Show"},"singleReason":"Reason for return","placeholder":{"name":"e.g. Too small","technicalName":"e.g. small"},"label":{"name":"Surname","technicalName":"Technical name"},"createTitle":"Create return reason","editTitle":"Edit return reason","messages":{"missingValues":"One or more values are missing.","invalidValues":"One or more values are incorrect.","success":"Saved successfully.","error":"Saving failed."}},"shippingServices":{"list":{"title":"Shipping Services","displayName":"Surname","salesChannel":"Sales channel","shippingProduct":"Shipping product","featureList":"Additional options","create":"Create","show":"Show","country":"country","countries":"Countries","countryCodes":"Country codes"},"createTitle":"Create shipping service","editTitle":"Edit shipping service","placeholder":{"displayName":"Enter display name...","salesChannel":"Select sales channel...","country":"Choose country.","countries":"Select countries.","service":"Select product...","features":"Select one or more features..."},"label":{"displayName":"display name","salesChannel":"Sales channel","country":"country","service":"product","features":"Features","countries":"Countries","countryCodes":"Country codes"},"messages":{"noServicesFound":"No services found. ","listCompatible":"List compatible. ","listIncompatible":"List not compatible.","missingValues":"Necessary parameters are missing","servicesSaved":"Shipping service saved successfully.","errorSavingService":"Error saving shipping service"},"shippingMethod":{"headline":"Create postal shipping services","link":"To the postal shipping services","backLink":"Shopware shipping methods"}},"bankData":{"list":{"title":"Bank details","displayName":"display name","accountHolder":"account owner","bic":"BIC","iban":"IBAN","create":"Create","show":"Show"},"placeholder":{"displayName":"e.g. main bank","accountHolder":"e.g. John Doe","bic":"e.g. SPBAATWWXXX","iban":"e.g. ATXX XXXX XXXX XXXX XXXX"},"label":{"displayName":"display name","accountHolder":"account owner","bic":"BIC","iban":"IBAN"},"createTitle":"Create bank details","editTitle":"Edit bank details","messages":{"missingValues":"One or more values are missing.","invalidValues":"One or more values are incorrect.","success":"Saved successfully.","error":"Saving failed."}},"addressData":{"options":{"shipping":"delivery address","return":"return address","returnAndShipping":"Shipping & Return Address"},"list":{"email":"e-mail","title":"Addresses","displayName":"display name","defaultAddress":"Default address","eoriNumber":"Eori number","salutation":"Salutation","company":"company","department":"Department","firstName":"First name","lastName":"Last name","street":"Street","country":"country","city":"City","zipcode":"Postcode","phoneNumber":"phone","addressType":"Address type","bankData":"Bank details","salesChannel":"Sales channel","create":"Create","show":"Show"},"placeholder":{"displayName":"e.g. company main address","eoriNumber":"e.g. AT123456789012345","salutation":"Select salutation...","company":"e.g. model company","department":"e.g. sample department","firstName":"e.g. Max","lastName":"e.g. Mustermann","street":"e.g. Musterstrasse 15","city":"e.g. model city","country":"country","zipcode":"e.g. 1111","phoneNumber":"e.g. 0800/1234567","addressType":"Select address type...","bankData":"Select bank details...","salesChannel":"Select sales channel...","email":"Enter email..."},"label":{"email":"e-mail","displayName":"display name","eoriNumber":"Eori number","salutation":"Salutation","defaultAddress":"Default address","company":"company","department":"Department","firstName":"First name","lastName":"Last name","street":"Street","city":"City","country":"country","zipcode":"Postcode","phoneNumber":"phone","addressType":"Address type","bankData":"Bank details","salesChannel":"Sales channel"},"createTitle":"Create address","editTitle":"Edit address","messages":{"missingValues":"One or more values are missing.","invalidValues":"One or more values are incorrect.","success":"Saved successfully.","error":"Saving failed."}},"order":{"tab":{"trackingTitle":"Shipping tracking","documentsTitle":"Post labels","returnData":"Post returns"},"page":{"documentListTitle":"Created post labels","returnDataTitle":"Created customer returns"},"labels":{"fileName":"filename","createdAt":"Creation Date","shippingDocuments":"Documents","trackingAT":"Tracking number (AT)","trackingINT":"Tracking number (international)","downloaded":"Downloaded?","delete":"Cancel?","bulkLabel":"Create post label","mergedLabel":"Download existing labels"},"download":{"shippingLabel":"SHIPPING_LABEL-","returnLabel":"RETURN_LABEL -","shippingDocuments":"DOCUMENTS-"},"postLabels":{"modal":{"creatingLabel":"Label is created","createLabelSuccess":"Label created successfully","errorCreatingLabel":"Error creating label"},"shippingLabel":"Shipping label","returnLabel":"Return label","shippingDocuments":"Customs documents","fileName":"filename","fileType":"File type","createdAt":"Creation Date","download":"Download","generateAdditionalDocuments":"Generate Post-Labels","helpText":{"phone":"This field is mandatory for Next-Day and Post-Express International shipments","customsDataLineItems":"For international shipments, please fill in the customs tariff number, country of origin, customs options and unit","shippingServicesInfo":"It is possible to change the shipping method for normal shipments when creating the label.\\n"},"label":{"recipientData":"Recipient data","senderAddress":"Return address","shippingData":"Shipment data","senderData":"Sender details","customsData":"Customs data","orderData":"Order details","packageData":"Package data","packageNumber":"Parcel number","duplicate":"Duplicate","documentType":"Document Type","documentNumber":"Document number","quantity":"Crowd","phone":"phone","shipperAddress":"delivery address","returnAddress":"return address","labelType":"Label type","title":"Addresses","displayName":"display name","defaultAddress":"Default address","eoriNumber":"Eori number","salutation":"Salutation","company":"company","department":"Department","firstName":"First name","lastName":"Last name","street":"Street","city":"City","zipcode":"Postcode","phoneNumber":"phone","addressType":"Address type","bankData":"Bank details","salesChannel":"Sales channel","additionalAddressLine1":"Address addition 1","additionalAddressLine2":"Address addition 2","create":"Create","show":"Show","email":"e-mail","currency":"currency","amountTotal":"Order total","shippingService":"Shipping product","country":"country","countryId":"country","accountHolder":"account owner","bic":"BIC","iban":"IBAN","customsDescription":"Customs description","returnOptions":"Return option","returnWays":"Return method"},"placeholder":{"shipperAddress":"Select shipping address...","returnAddress":"Select return address...","email":"enter an email...","labelType":"select a label type...","displayName":"e.g. company main address","eoriNumber":"e.g. AT123456789012345","salutation":"Select salutation...","company":"e.g. model company","department":"e.g. sample department","firstName":"e.g. Max","lastName":"e.g. Mustermann","street":"e.g. Musterstrasse 15","city":"e.g. model city","phone":"Enter phone number...","country":"Choose country...","countryId":"Choose country...","zipcode":"e.g. 1111","phoneNumber":"e.g. 0800/1234567","addressType":"select an address type...","bankData":"Select bank details...","salesChannel":"Select sales channel...","additionalAddressLine1":"Enter additional address 1...","additionalAddressLine2":"Enter additional address 2...","currency":"select a currency...","amountTotal":"Enter order total...","shippingService":"Select shipping product...","accountHolder":"Enter account holder...","bic":"Enter BIC...","iban":"Enter IBAN...","customsDescription":"Enter customs description...","returnOptions":"Select return option...","returnWays":"Select return method..."},"createTitle":"Create shipping documents","messages":{"errorCreatingLabel":"Error creating label","creatingLabel":"Label is created","successCreatingLabel":"Label created successfully.","errorFetchingBulkOrder":"Order data could not be loaded."},"error":{"noShippingServiceLanguage":"Please enter a shipping product in the selected language in the shipping method."}},"returnData":{"returnNote":"Returns info","returnReason":"Reason for return","noReturnsFound":"No returns found.","columns":{"productNumber":"Product number","name":"Product name","quantity":"Return quantity","unitPrice":"Unit price (as of order date)"}}},"dailyStatement":{"createTitle":"Download daily closing","list":{"plcDateAdded":"Added on","plcCreatedOn":"Created on","salesChannel":"Sales channel","pdfData":"End of the day","create":"Create","title":"End of the day"},"messages":{"errorCreatingStatement":"Error creating the daily closing","successCreating":"Daily closing created, download will start shortly","successNoData":"No data available for the current day","missingValues":"Please fill out all fields"},"modal":{"placeholder":{"statementDate":"e.g. December 12, 2022","salesChannel":"Select sales channel..."},"label":{"statementDate":"Date","salesChannel":"Sales channel"},"helpText":{"statementDate":"If no date is filled in, a new daily closing will be created for today","info":"Notice","creationInfo":"Please note that the daily closing can only be triggered once per day. "}}},"bulkLabel":{"modalTitle":"Bulk label creation","columns":{"orderNumber":"Order number","targetCountry":"Destination Country","deliveryState":"Current shipping status","customsInformation":"Customs information entered","savedLabel":"Label saved"},"context-menu":{"createLabel":"Create/edit label"},"label":{"deliveryState":"New shipping status (optional)","saveLabel":"Save","notCreatedLabels":"Uncreated/incorrect labels","createdLabels":"Created labels"},"placeholder":{"deliveryState":"Please select a shipping status..."},"messages":{"missingFields":"Please fill out all fields.","noLabelsGenerated":"Please generate at least one label...","creatingLabel":"Labels are created...","downloadStartingSoon":"Download will start soon","errorDownloading":"Error downloading labels","failedTransitions":"A status change was not possible for the following orders: {orderNumbers}"}},"mergedLabel":{"label":{"chosenOrders":"Selected orders","generatedLabels":"Labels exported to following orders"},"list":{"orderNumber":"Order number","orderDateTime":"Order time","targetCountry":"Destination Country","labelTypes":"Label types"},"messages":{"downloadStartingSoon":"Download will start soon","errorDownloading":"Error downloading labels","noLabelsFound":"No labels found..."},"modalTitle":"Download existing labels"}}}');a(707);let{Component:n,Mixin:s}=Shopware,{Criteria:l}=Shopware.Data;n.register("daily-statement-list",{template:'{% block plc_daily_statement_list %}\n    <sw-page class="plc-daily-statement-list">\n\n        {% block plc_daily_statement_list_smart_bar_header %}\n            <template #smart-bar-header>\n                {% block plc_daily_statement_list_smart_bar_header_title %}\n                    <h2>\n                        {% block plc_daily_statement_list_smart_bar_header_title_text %}\n                            {{ $tc(\'sw-settings.index.title\') }}\n                            <mt-icon v-if="feature.isActive(\'v6.6.0.0\')"\n                                     name="regular-chevron-right-xs"\n                                     small\n                            />\n                            <sw-icon v-else\n                                     name="regular-chevron-right-xs"\n                                     small\n                            />\n                            {{ $tc(\'plc.dailyStatement.list.title\') }}\n                        {% endblock %}\n                    </h2>\n                {% endblock %}\n            </template>\n        {% endblock %}\n\n        \n        {% block plc_daily_statement_language_switch %}\n            <template #language-switch>\n                <sw-language-switch @on-change="onChangeLanguage"/>\n            </template>\n        {% endblock %}\n\n        {% block plc_daily_statement_list_actions_save %}\n            <template #smart-bar-actions>\n                <sw-button\n                        @click="openDailyStatementModal()"\n                        variant="primary">\n                    {{ $tc(\'plc.dailyStatement.list.create\') }}\n                </sw-button>\n\n                <daily-statement-modal\n                        class="plc-daily-statement-modal"\n                        :daily-statement-entity="dailyStatementModal"\n                        v-if="dailyStatementModal"\n                        @modal-save="saveDailyStatementModal"\n                        @modal-close="closeDailyStatementModal">\n                </daily-statement-modal>\n            </template>\n        {% endblock %}\n\n        {% block plc_daily_statement_list_content %}\n            <template #content>\n                {% block plc_daily_statement_list_content_listing %}\n                    <sw-entity-listing\n                            :columns="dailyStatementColumns"\n                            :full-page="true"\n                            :items="dailyStatementEntries"\n                            :show-settings="true"\n                            :show-selection="false"\n                            :show-actions="true"\n                            :sort-by="sortBy"\n                            :sort-direction="sortDirection"\n                            :is-loading="isLoading"\n                            :allow-column-edit="true"\n                            :disable-data-fetching="true"\n                            :repository="dailyStatementRepository"\n                            :page="page"\n                            @page-change="onPageChange"\n                            @update-records="updateTotal">\n\n                        {% block plc_daily_statement_list_column_pdf %}\n                            <template #column-pdfData="{ item }">\n                                <a @click="getLabelPdf(item.pdfData)" target="_blank">\n                                    Herunterladen\n                                </a>\n                            </template>\n                        {% endblock %}\n\n                        {% block plc_daily_statement_list_column_plcDateAdded %}\n                            <template #column-plcDateAdded="{ item }">\n                                {{ formatDate(item.plcDateAdded) }}\n                            </template>\n                        {% endblock %}\n\n                        {% block plc_daily_statement_list_column_plcCreatedOn %}\n                            <template #column-plcCreatedOn="{ item }">\n                                {{ formatDate(item.plcCreatedOn) }}\n                            </template>\n                        {% endblock %}\n\n                        {% block plc_daily_statement_list_column_salesChannel %}\n                            <template #column-salesChannel="{ item }">\n                                {{ item.salesChannel.translated ? item.salesChannel.translated.name : item.salesChannel.name }}\n                            </template>\n                        {% endblock %}\n\n                        {% block plc_daily_statement_list_context_menu %}\n                            <template #actions="{ item }">\n                                <sw-context-menu-item\n                                        variant="danger"\n                                        class="plc-daily-statement-list__context-menu-edit-delete"\n                                        @click="onDelete(item.id)"\n                                >\n                                    {{ $tc(\'plc.general.context-menu.delete\') }}\n                                </sw-context-menu-item>\n                            </template>\n                        {% endblock %}\n\n                        {% block plc_daily_statement_list_modal %}\n                            <template #action-modals="{ item }">\n                                <sw-modal\n                                        v-if="showDeleteModal === item.id"\n                                        :title="$tc(\'global.default.warning\')"\n                                        variant="small"\n                                        @modal-close="onCloseDeleteModal"\n                                >\n                                    \n                                    {% block sw_settings_number_range_list_delete_modal_confirm_delete_text %}\n                                        <p class="sw-settings-number-range-list__confirm-delete-text">\n                                            {{ $tc(\'plc.modal.dailyStatement.textDeleteConfirm\', 0, { name: item.displayName }) }}\n                                        </p>\n                                    {% endblock %}\n\n                                    \n                                    {% block sw_settings_number_range_list_delete_modal_footer %}\n                                        <template #modal-footer>\n                                            \n                                            {% block sw_settings_number_range_list_delete_modal_cancel %}\n                                                <sw-button\n                                                        size="small"\n                                                        @click="onCloseDeleteModal"\n                                                >\n                                                    {{ $tc(\'plc.modal.buttonCancel\') }}\n                                                </sw-button>\n                                            {% endblock %}\n\n                                            \n                                            {% block sw_settings_number_range_list_delete_modal_confirm %}\n                                                <sw-button\n                                                        variant="danger"\n                                                        size="small"\n                                                        @click="onConfirmDelete(item.id)"\n                                                >\n                                                    {{ $tc(\'plc.modal.buttonDelete\') }}\n                                                </sw-button>\n                                            {% endblock %}\n                                        </template>\n                                    {% endblock %}\n                                </sw-modal>\n                            </template>\n                        {% endblock %}\n                    </sw-entity-listing>\n                {% endblock %}\n            </template>\n        {% endblock %}\n\n        {% block plc_daily_statement_list_sidebar %}\n            <template #sidebar>\n                <sw-sidebar class="plc-daily-statement-list__sidebar">\n                    {% block plc_daily_statement_list_sidebar_refresh %}\n                        <sw-sidebar-item\n                                icon="regular-undo"\n                                :title="$tc(\'plc.general.titleSidebarItemRefresh\')"\n                                @click="onRefresh"\n                        />\n                    {% endblock %}\n                </sw-sidebar>\n            </template>\n        {% endblock %}\n    </sw-page>\n{% endblock %}\n',snippets:{"de-DE":e,"en-GB":t},mixins:[s.getByName("notification"),s.getByName("listing"),s.getByName("plc-helper")],inject:["repositoryFactory","acl","numberRangeService"],data(){return{sortBy:"createdAt",sortDirection:"DESC",isLoading:!1,dailyStatementEntries:null,limit:25,dailyStatementModal:!1,total:0,showDeleteModal:!1,page:1}},metaInfo(){return{title:this.$tc("plc.menu.dailyStatement")}},computed:{dailyStatementRepository(){return this.repositoryFactory.create("plc_daily_statements")},dailyStatementColumns(){return this.getColumns()},showDailyStatementModal(){return!!this.dailyStatementModal}},beforeRouteLeave(e,t,a){this.dailyStatementModal&&this.closeDailyStatementModal(),this.$nextTick(()=>{a()})},methods:{async getList(){this.isLoading=!0;let e=new l(this.page,this.limit);e.setTerm(this.term),e.addAssociation("salesChannel");try{let t=await Promise.all([this.dailyStatementRepository.search(e)]);this.total=t[0].total,this.dailyStatementEntries=t[0],this.isLoading=!1}catch{this.isLoading=!1}},getColumns(){return[{property:"pdfData",label:this.$tc("plc.dailyStatement.list.pdfData"),allowResize:!0},{property:"plcDateAdded",primary:!0,label:this.$tc("plc.dailyStatement.list.plcDateAdded"),allowResize:!0},{property:"plcCreatedOn",label:this.$tc("plc.dailyStatement.list.plcCreatedOn"),allowResize:!0},{property:"salesChannel",label:this.$tc("plc.dailyStatement.list.salesChannel"),allowResize:!0}]},onDelete(e){this.showDeleteModal=e},onChangeLanguage(e){Shopware.State.commit("context/setApiLanguageId",e),this.getList()},onConfirmDelete(e){return this.showDeleteModal=!1,this.dailyStatementRepository.delete(e).then(()=>{this.getList()})},onCloseDeleteModal(){this.showDeleteModal=!1},updateTotal({total:e}){this.total=e},updateCriteria(e){this.page=1,this.filterCriteria=e},openDailyStatementModal(){this.dailyStatementModal=!0},closeDailyStatementModal(){this.dailyStatementModal=!1},saveDailyStatementModal(){this.dailyStatementModal=!1,this.getList()},async getLabelPdf(e){let t=`data:application/pdf;base64,${JSON.parse(e)}`,a=document.createElement("a");a.href=t,a.download="Tagesabschluss.pdf",a.click()}}}),a(769);let{Mixin:i}=Shopware,{Criteria:r}=Shopware.Data;Shopware.Component.register("daily-statement-modal",{template:'\n\n{% block plc_daily_statement__modal %}\n    <sw-modal\n            class="plc-daily-statement-modal"\n            :title="modalTitle"\n            variant="large"\n            @modal-close="$emit(\'modal-close\')"\n    >\n        {% block plc_daily_statement__modal_body %}\n            <mt-loader v-if="isLoading && feature.isActive(\'v6.6.0.0\')"/>\n            <sw-loader v-if="isLoading && !feature.isActive(\'v6.6.0.0\')"/>\n            <template v-else>\n                <sw-entity-single-select\n                        v-model:value="salesChannelId"\n                        class="shipping-service__sales-channel-select"\n                        entity="sales_channel"\n                        name="shipping-service-salutation"\n                        :label="$tc(\'plc.dailyStatement.modal.label.salesChannel\')"\n                        :placeholder="$tc(\'plc.dailyStatement.modal.placeholder.salesChannel\')"\n                        :criteria="salesChannelCriteria"\n                        label-property="name"\n                        validation="required"\n                        required\n                />\n\n                <sw-datepicker\n                        v-model:value="statementDate"\n                        type="date"\n                        :config="datePickerConfig"\n                        name="statementDate"\n                        :helpText="$tc(\'plc.dailyStatement.modal.helpText.statementDate\')"\n                        :label="$tc(\'plc.dailyStatement.modal.label.statementDate\')"\n                        :placeholderText="$tc(\'plc.dailyStatement.modal.placeholder.statementDate\')"\n                />\n                <sw-text class="help-text">\n                    <p class="alert-warning bold">{{ $tc(\'plc.dailyStatement.modal.helpText.info\') }}</p>\n                    <p class="alert-warning">{{ $tc(\'plc.dailyStatement.modal.helpText.creationInfo\') }}</p>\n                </sw-text>\n            </template>\n        {% endblock %}\n\n        \n        {% block plc_daily_statement__modal_footer %}\n            <template #modal-footer>\n                {% block plc_daily_statement__modal_footer_close_button %}\n                    <sw-button\n                            size="small"\n                            @click="closeModal"\n                    >\n                        {{ $tc(\'global.sw-modal.labelClose\') }}\n                    </sw-button>\n                {% endblock %}\n\n                {% block plc_daily_statement__modal_footer_create_button %}\n                    <sw-button\n                            variant="primary"\n                            size="small"\n                            :disabled="isLoading"\n                            @click="sendRequest"\n                    >\n                        <span v-if="statementDate">{{ $tc(\'plc.modal.download\') }}</span>\n                        <span v-else>{{ $tc(\'plc.modal.generate\') }}</span>\n                    </sw-button>\n                {% endblock %}\n            </template>\n        {% endblock %}\n    </sw-modal>\n{% endblock %}\n',snippets:{"de-DE":e,"en-GB":t},mixins:[i.getByName("notification")],inject:["repositoryFactory","acl","feature"],data(){return{isLoading:!1,syncService:null,httpClient:null,salesChannelId:null,statementDate:null,datePickerConfig:{altFormat:"d.m.Y"}}},created(){this.createdComponent()},computed:{modalTitle(){return this.$tc("plc.dailyStatement.createTitle")},salesChannelCriteria(){let e=new r(1,25);return e.addFilter(r.equals("active",!0)),e.addFilter(r.equalsAny("type.iconName",["regular-storefront","regular-shopping-basket"])),e.addSorting(r.sort("shortName","ASC")),e}},methods:{createdComponent(){this.syncService=Shopware.Service("syncService"),this.httpClient=this.syncService.httpClient},closeModal(){this._isDestroyed=!0},sendRequest(){if(null!==this.salesChannelId)return this.isLoading=!0,this.httpClient.post("/plc/daily-statement",{salesChannelId:this.salesChannelId,statementDate:this.statementDate},{headers:this.syncService.getBasicHeaders()}).then(e=>{200===e.status?(!1!==e.data.data?(this.createNotificationSuccess({message:this.$tc(e.data.message)}),!0!==e.data.data&&this.downloadPDF(e.data.data)):this.createNotificationError({message:this.$tc(e.data.message)}),this.isLoading=!1,this.$emit("modal-save"),this.$emit("modal-close")):this.createNotificationError({message:this.$tc("plc.modal.saveError")}),this.isLoading=!1})},downloadPDF(e){let t=`data:application/pdf;base64,${e}`,a=document.createElement("a");a.href=t,a.download="Tagesabschluss.pdf",a.click()}}});let{Module:o}=Shopware;o.register("plc-daily-statement",{type:"plugin",name:"plc-daily-statement",title:"plc.menu.dailyStatement",description:"plc.menu.descriptionTextModule",color:"#ff3d58",position:990,snippets:{"de-DE":e,"en-GB":t},routes:{list:{component:"daily-statement-list",path:"list",meta:{parentPath:"sw.settings.index.plugins"}}},settingsItem:{group:"plugins",to:"plc.daily.statement.list",iconComponent:"post-logo-icon",backgroundEnabled:!0}}),a(753);let{Component:d,Mixin:c}=Shopware,{Criteria:p}=Shopware.Data;d.register("address-data-list",{template:'{% block plc_address_data_list %}\n    <sw-page class="plc-address-data-list">\n\n        {% block plc_address_data_list_smart_bar_header %}\n            <template #smart-bar-header>\n                {% block plc_address_data_list_smart_bar_header_title %}\n                    <h2>\n                        {% block plc_address_data_list_smart_bar_header_title_text %}\n                            {{ $tc(\'sw-settings.index.title\') }}\n                            <mt-icon v-if="feature.isActive(\'v6.6.0.0\')"\n                                     name="regular-chevron-right-xs"\n                                     small\n                            />\n                            <sw-icon v-else\n                                     name="regular-chevron-right-xs"\n                                     small\n                            />\n                            {{ $tc(\'plc.addressData.list.title\') }}\n                        {% endblock %}\n                    </h2>\n                {% endblock %}\n            </template>\n        {% endblock %}\n\n        \n        {% block plc_address_data_language_switch %}\n            <template #language-switch>\n                <sw-language-switch @on-change="onChangeLanguage"/>\n            </template>\n        {% endblock %}\n\n        {% block plc_address_data_list_actions_save %}\n            <template #smart-bar-actions>\n                <sw-button\n                        @click="openAddressDataModal(true)"\n                        variant="primary">\n                    {{ $tc(\'plc.addressData.list.create\') }}\n                </sw-button>\n\n                <address-data-modal\n                        class="plc-address-data-modal"\n                        :address-data-entity="addressDataModal"\n                        v-if="addressDataModal"\n                        @modal-save="saveAddressDataModal"\n                        @modal-close="closeAddressDataModal">\n                </address-data-modal>\n            </template>\n        {% endblock %}\n\n        {% block plc_address_data_list_content %}\n            <template #content>\n                {% block plc_address_data_list_content_listing %}\n                    <sw-entity-listing\n                            :columns="addressDataColumns"\n                            :full-page="true"\n                            :items="addressDataEntries"\n                            :show-settings="true"\n                            :show-selection="false"\n                            :show-actions="true"\n                            :sort-by="sortBy"\n                            :sort-direction="sortDirection"\n                            :is-loading="isLoading"\n                            :allow-column-edit="true"\n                            :disable-data-fetching="true"\n                            :repository="addressDataRepository"\n                            :page="page"\n                            @page-change="onPageChange"\n                            @update-records="updateTotal">\n\n                        {% block plc_address_data_list_column_display_name %}\n                            <template #column-displayName="{ item }">\n                                <sw-context-menu-item\n                                        @click="openAddressDataModal(item)"\n                                >\n                                    {{ item.translated ? item.translated.displayName : item.displayName }}\n                                </sw-context-menu-item>\n                            </template>\n                        {% endblock %}\n\n                        {% block plc_address_data_list_column_default_address %}\n                            <template #column-defaultAddress="{ item }">\n                                <sw-checkbox-field\n                                        type="checkbox"\n                                        disabled\n                                        v-model:value="item.defaultAddress"\n                                />\n                            </template>\n                        {% endblock %}\n\n                        {% block plc_return_reasons_list_column_sales_channel %}\n                            <template #column-salesChannel="{ item }">\n                                {{ item.salesChannel.translated.name }}\n                            </template>\n                        {% endblock %}\n\n                        {% block plc_address_data_list_column_addressType %}\n                            <template #column-addressType="{ item }">\n                                {{ getAddressTypeLabel(item.addressType) }}\n                            </template>\n                        {% endblock %}\n\n\n                        {% block plc_return_reasons_list_column_country %}\n                            <template #column-country="{ item, inlineEdit }">\n                                {{ item.country.name }}\n                            </template>\n                        {% endblock %}\n\n                        {% block plc_return_reasons_list_column_bank_data %}\n                            <template #column-bankData="{ item, inlineEdit }">\n                                {{ item.bankData ? item.bankData.displayName : "" }}\n                            </template>\n                        {% endblock %}\n\n                        {% block plc_address_data_list_context_menu %}\n                            <template #actions="{ item }">\n                                <sw-context-menu-item\n                                        class="plc-address-data-list__context-menu-edit-action"\n                                        @click="openAddressDataModal(item)"\n                                >\n                                    {{ $tc(\'plc.general.context-menu.edit\') }}\n                                </sw-context-menu-item>\n\n                                <sw-context-menu-item\n                                        variant="danger"\n                                        class="plc-address-data-list__context-menu-edit-delete"\n                                        @click="onDelete(item.id)"\n                                >\n                                    {{ $tc(\'plc.general.context-menu.delete\') }}\n                                </sw-context-menu-item>\n                            </template>\n                        {% endblock %}\n\n                        {% block plc_address_data_list_modal %}\n                            <template #action-modals="{ item }">\n                                <sw-modal\n                                        v-if="showDeleteModal === item.id"\n                                        :title="$tc(\'global.default.warning\')"\n                                        variant="small"\n                                        @modal-close="onCloseDeleteModal"\n                                >\n                                    \n                                    {% block sw_settings_number_range_list_delete_modal_confirm_delete_text %}\n                                        <p class="sw-settings-number-range-list__confirm-delete-text">\n                                            {{ $tc(\'plc.modal.addressData.textDeleteConfirm\', 0, { name: item.displayName }) }}\n                                        </p>\n                                    {% endblock %}\n\n                                    \n                                    {% block sw_settings_number_range_list_delete_modal_footer %}\n                                        <template #modal-footer>\n                                            \n                                            {% block sw_settings_number_range_list_delete_modal_cancel %}\n                                                <sw-button\n                                                        size="small"\n                                                        @click="onCloseDeleteModal"\n                                                >\n                                                    {{ $tc(\'plc.modal.buttonCancel\') }}\n                                                </sw-button>\n                                            {% endblock %}\n\n                                            \n                                            {% block sw_settings_number_range_list_delete_modal_confirm %}\n                                                <sw-button\n                                                        variant="danger"\n                                                        size="small"\n                                                        @click="onConfirmDelete(item.id)"\n                                                >\n                                                    {{ $tc(\'plc.modal.buttonDelete\') }}\n                                                </sw-button>\n                                            {% endblock %}\n                                        </template>\n                                    {% endblock %}\n                                </sw-modal>\n                            </template>\n                        {% endblock %}\n                    </sw-entity-listing>\n                {% endblock %}\n            </template>\n        {% endblock %}\n\n        {% block plc_address_data_list_sidebar %}\n            <template #sidebar>\n                <sw-sidebar class="plc-address-data-list__sidebar">\n                    {% block plc_address_data_list_sidebar_refresh %}\n                        <sw-sidebar-item\n                                icon="regular-undo"\n                                :title="$tc(\'plc.general.titleSidebarItemRefresh\')"\n                                @click="onRefresh"\n                        />\n                    {% endblock %}\n                </sw-sidebar>\n            </template>\n        {% endblock %}\n    </sw-page>\n{% endblock %}\n',snippets:{"de-DE":e,"en-GB":t},mixins:[c.getByName("notification"),c.getByName("listing")],inject:["repositoryFactory","acl","numberRangeService"],data(){return{sortBy:"createdAt",sortDirection:"DESC",isLoading:!1,addressDataEntries:null,limit:25,addressDataModal:!1,total:0,showDeleteModal:!1}},metaInfo(){return{title:this.$tc("plc.menu.addressData")}},computed:{addressDataRepository(){return this.repositoryFactory.create("plc_address_data")},addressDataColumns(){return this.getColumns()},showAddressDataModal(){return!!this.addressDataModal},showCreationModal(){return!!this.createModal}},beforeRouteLeave(e,t,a){this.addressDataModal&&this.closeAddressDataModal(),this.$nextTick(()=>{a()})},methods:{async getList(){this.isLoading=!0;let e=new p(this.page,this.limit);e.setTerm(this.term),e.addAssociation("country"),e.addAssociation("salutation"),e.addAssociation("bankData"),e.addAssociation("salesChannel");try{let t=(await Promise.all([this.addressDataRepository.search(e)]))[0];this.total=t.total,this.addressDataEntries=t,this.isLoading=!1}catch{this.isLoading=!1}},getAddressTypeLabel(e){return({shipping:this.$tc("plc.addressData.options.shipping"),return:this.$tc("plc.addressData.options.return"),returnAndShipping:this.$tc("plc.addressData.options.returnAndShipping")})[e]},getColumns(){return[{property:"displayName",primary:!0,label:this.$tc("plc.addressData.list.displayName"),allowResize:!0},{property:"defaultAddress",label:this.$tc("plc.addressData.list.defaultAddress"),allowResize:!0},{property:"salesChannel",label:this.$tc("plc.addressData.list.salesChannel"),allowResize:!0},{property:"addressType",allowResize:!0,label:this.$tc("plc.addressData.list.addressType")},{property:"email",label:this.$tc("plc.addressData.list.email"),allowResize:!0},{property:"company",label:this.$tc("plc.addressData.list.company"),allowResize:!0},{property:"department",label:this.$tc("plc.addressData.list.department"),allowResize:!0,visible:!1},{property:"firstName",label:this.$tc("plc.addressData.list.firstName"),allowResize:!0},{property:"lastName",label:this.$tc("plc.addressData.list.lastName"),allowResize:!0},{property:"street",label:this.$tc("plc.addressData.list.street"),allowResize:!0},{property:"city",label:this.$tc("plc.addressData.list.city"),allowResize:!0},{property:"zipcode",label:this.$tc("plc.addressData.list.zipcode"),allowResize:!0},{property:"country",label:this.$tc("plc.addressData.list.country"),allowResize:!0},{property:"bankData",label:this.$tc("plc.addressData.list.bankData"),allowResize:!0}]},onDelete(e){this.showDeleteModal=e},onConfirmDelete(e){return this.showDeleteModal=!1,this.addressDataRepository.delete(e).then(()=>{this.getList()})},openAddressDataModal(e){this.addressDataModal=e},closeAddressDataModal(){this.addressDataModal=!1},saveAddressDataModal(){this.addressDataModal=!1,this.getList()},updateTotal({total:e}){this.total=e},updateCriteria(e){this.page=1,this.filterCriteria=e},onChangeLanguage(e){Shopware.State.commit("context/setApiLanguageId",e),this.getList()},onCloseDeleteModal(){this.showDeleteModal=!1}}}),a(662);let{Defaults:m,Component:u,Mixin:h}=Shopware,{Criteria:b}=Shopware.Data;u.register("address-data-modal",{template:'{% block plc_return_reason__modal %}\n    <sw-modal\n            class="plc-return-reasons-modal"\n            :title="modalTitle"\n            variant="large"\n            @modal-close="$emit(\'modal-close\')"\n    >\n        {% block plc_return_reason__modal_body %}\n            <mt-loader v-if="isLoading && feature.isActive(\'v6.6.0.0\')"/>\n            <sw-loader v-if="isLoading && !feature.isActive(\'v6.6.0.0\')"/>\n            <template v-else>\n                <sw-checkbox-field\n                        class="plc-address-data-modal_defaultAddress"\n                        :label="$tc(\'plc.addressData.label.defaultAddress\')"\n                        v-model:value="addressObject.defaultAddress"\n                        type="checkbox"\n                        validation="required"\n                />\n                <div class="row">\n                    <sw-text-field\n                            class="plc-address-data-modal_displayName"\n                            size="small"\n                            v-model:value="addressObject.displayName"\n                            name="address-data-displayName"\n                            :label="$tc(\'plc.addressData.label.displayName\')"\n                            :placeholder="$tc(\'plc.addressData.placeholder.displayName\')"\n                            validation="required"\n                            required\n                    />\n\n\n                    <sw-single-select\n                            v-model:value="addressObject.addressType"\n                            class="sw-bulk-edit-change-type__selection"\n                            :options="createOptions"\n                            name="address-data-addressType"\n                            :label="$tc(\'plc.addressData.label.addressType\')"\n                            :placeholder="$tc(\'plc.addressData.placeholder.addressType\')"\n                            validation="required"\n                            required\n                            size="small"\n                    />\n                </div>\n\n                <div class="row">\n                    <sw-entity-single-select\n                            v-model:value="addressObject.salesChannelId"\n                            class="address-data__sales-channel-select"\n                            entity="sales_channel"\n                            name="address-data-salutation"\n                            :label="$tc(\'plc.addressData.label.salesChannel\')"\n                            :placeholder="$tc(\'plc.addressData.placeholder.salesChannel\')"\n                            :criteria="salesChannelCriteria"\n                            label-property="name"\n                            show-clearable-button\n                            validation="required"\n                            required\n                            size="small"\n                    />\n\n                    <sw-entity-single-select\n                            v-model:value="addressObject.bankDataId"\n                            class="sw-customer-address-form__addresData-select"\n                            entity="plc_bank_data"\n                            name="address-data-bankData"\n                            :label="$tc(\'plc.addressData.label.bankData\')"\n                            :placeholder="$tc(\'plc.addressData.placeholder.bankData\')"\n                            :criteria="bankDataCriteria"\n                            label-property="displayName"\n                            show-clearable-button\n                            size="small"\n                    />\n                </div>\n\n                <div class="row">\n                    <sw-text-field\n                            class="plc-address-data-modal_eoriNumber"\n                            size="small"\n                            v-model:value="addressObject.eoriNumber"\n                            name="address-data-eoriNumber"\n                            :label="$tc(\'plc.addressData.label.eoriNumber\')"\n                            :placeholder="$tc(\'plc.addressData.placeholder.eoriNumber\')"\n                    />\n\n                    <sw-text-field\n                            class="plc-address-data-modal_email"\n                            size="small"\n                            type="email"\n                            v-model:value="addressObject.email"\n                            name="address-data-email"\n                            :label="$tc(\'plc.addressData.label.email\')"\n                            :placeholder="$tc(\'plc.addressData.placeholder.email\')"\n                            validation="required"\n                            required\n                    />\n                </div>\n\n                <div class="row">\n                    <sw-text-field\n                            class="plc-address-data-modal_company"\n                            size="small"\n                            v-model:value="addressObject.company"\n                            name="address-data-company"\n                            :label="$tc(\'plc.addressData.label.company\')"\n                            :placeholder="$tc(\'plc.addressData.placeholder.company\')"\n                    />\n\n                    <sw-text-field\n                            class="plc-address-data-modal_department"\n                            size="small"\n                            v-model:value="addressObject.department"\n                            name="address-data-department"\n                            :label="$tc(\'plc.addressData.label.department\')"\n                            :placeholder="$tc(\'plc.addressData.placeholder.department\')"\n                    />\n                </div>\n\n                <div class="row">\n                    <sw-entity-single-select\n                            v-model:value="addressObject.salutationId"\n                            class="sw-customer-address-form__salutation-select"\n                            entity="salutation"\n                            name="address-data-salutation"\n                            :label="$tc(\'plc.addressData.label.salutation\')"\n                            :placeholder="$tc(\'plc.addressData.placeholder.salutation\')"\n                            :criteria="salutationCriteria"\n                            label-property="displayName"\n                            show-clearable-button\n                            validation="required"\n                            required\n                            size="small"\n                    />\n\n                    <sw-text-field\n                            class="plc-address-data-modal_firstName"\n                            size="small"\n                            v-model:value="addressObject.firstName"\n                            name="address-data-firstName"\n                            :label="$tc(\'plc.addressData.label.firstName\')"\n                            :placeholder="$tc(\'plc.addressData.placeholder.firstName\')"\n                            validation="required"\n                            required\n                    />\n                </div>\n\n                <div class="row">\n                    <sw-text-field\n                            class="plc-address-data-modal_lastName"\n                            size="small"\n                            v-model:value="addressObject.lastName"\n                            name="address-data-lastName"\n                            :label="$tc(\'plc.addressData.label.lastName\')"\n                            :placeholder="$tc(\'plc.addressData.placeholder.lastName\')"\n                            validation="required"\n                            required\n                    />\n\n                    <sw-text-field\n                            class="plc-address-data-modal_street"\n                            size="small"\n                            v-model:value="addressObject.street"\n                            name="address-data-street"\n                            :label="$tc(\'plc.addressData.label.street\')"\n                            :placeholder="$tc(\'plc.addressData.placeholder.street\')"\n                            validation="required"\n                            required\n                    />\n                </div>\n\n\n                <div class="row">\n                    <sw-text-field\n                            class="plc-address-data-modal_city"\n                            size="small"\n                            v-model:value="addressObject.city"\n                            name="address-data-city"\n                            :label="$tc(\'plc.addressData.label.city\')"\n                            :placeholder="$tc(\'plc.addressData.placeholder.city\')"\n                            validation="required"\n                            required\n                    />\n\n                    <sw-text-field\n                            class="plc-address-data-modal_zipcode"\n                            size="small"\n                            v-model:value="addressObject.zipcode"\n                            name="address-data-zipcode"\n                            :label="$tc(\'plc.addressData.label.zipcode\')"\n                            :placeholder="$tc(\'plc.addressData.placeholder.zipcode\')"\n                            validation="required"\n                            required\n                    />\n                </div>\n                <div class="row">\n                    <sw-entity-single-select\n                            v-model:value="addressObject.countryId"\n                            class="sw-customer-address-form__country-select"\n                            entity="country"\n                            name="address-data-country"\n                            :label="$tc(\'plc.addressData.label.country\')"\n                            :placeholder="$tc(\'plc.addressData.placeholder.country\')"\n                            :criteria="countryCriteria"\n                            label-property="name"\n                            show-clearable-button\n                            validation="required"\n                            required\n                            size="small"\n                    />\n\n                    <sw-text-field\n                            class="plc-address-data-modal_phoneNumber"\n                            size="small"\n                            v-model:value="addressObject.phoneNumber"\n                            name="address-data-phoneNumber"\n                            :label="$tc(\'plc.addressData.label.phoneNumber\')"\n                            :placeholder="$tc(\'plc.addressData.placeholder.phoneNumber\')"\n                            validation="required"\n                            required\n                    />\n                </div>\n            </template>\n        {% endblock %}\n\n        \n        {% block plc_return_reason__modal_footer %}\n            <template #modal-footer>\n                {% block plc_return_reason__modal_footer_close_button %}\n                    <sw-button\n                            size="small"\n                            @click="$emit(\'modal-close\')"\n                    >\n                        {{ $tc(\'global.sw-modal.labelClose\') }}\n                    </sw-button>\n                {% endblock %}\n\n                {% block plc_return_reason__modal_footer_save_button %}\n                    <sw-button\n                            variant="primary"\n                            size="small"\n                            :disabled="isLoading"\n                            @click="saveAddressData"\n                    >\n                        {{ $tc(\'plc.modal.save\') }}\n                    </sw-button>\n                {% endblock %}\n            </template>\n        {% endblock %}\n    </sw-modal>\n{% endblock %}\n',snippets:{"de-DE":e,"en-GB":t},mixins:[h.getByName("notification")],inject:["repositoryFactory","acl","feature"],data(){return{isLoading:!1,addressTypeOptions:null,addressObject:{defaultAddress:null,salesChannelId:null,displayName:null,email:null,eoriNumber:null,salutationId:null,company:null,department:null,firstName:null,lastName:null,street:null,city:null,zipcode:null,countryId:null,phoneNumber:null,addressType:null,bankDataId:null}}},props:{addressDataEntity:{type:[Object,Boolean],required:!1,default:null}},created(){this.createdComponent()},computed:{addressDataRepository(){return this.repositoryFactory.create("plc_address_data")},modalTitle(){return"object"==typeof this.addressDataEntity?this.$tc("plc.addressData.editTitle"):this.$tc("plc.addressData.createTitle")},salutationCriteria(){let e=new b(1,25);return e.addFilter(b.not("or",[b.equals("id",m.defaultSalutationId)])),e},bankDataCriteria(){let e=new b(1,25);return e.addSorting(b.sort("displayName","ASC")),e},countryCriteria(){let e=new b(1,25);return e.addSorting(b.sort("name","ASC")),e},salesChannelCriteria(){let e=new b(1,25);return e.addFilter(b.equals("active",!0)),e.addFilter(b.equalsAny("type.iconName",["regular-storefront","regular-shopping-basket"])),e.addSorting(b.sort("shortName","ASC")),e},createOptions(){return this.addressTypeOptions=[{value:"shipping",label:this.$tc("plc.addressData.options.shipping")},{value:"return",label:this.$tc("plc.addressData.options.return")},{value:"returnAndShipping",label:this.$tc("plc.addressData.options.returnAndShipping")}],this.addressTypeOptions}},methods:{createdComponent(){this.isLoading=!0,this.syncService=Shopware.Service("syncService"),this.httpClient=this.syncService.httpClient,"object"==typeof this.addressDataEntity&&(this.addressObject={id:this.addressDataEntity.id,displayName:this.addressDataEntity.displayName,defaultAddress:this.addressDataEntity.defaultAddress,eoriNumber:this.addressDataEntity.eoriNumber,email:this.addressDataEntity.email,salutationId:this.addressDataEntity.salutation.id,company:this.addressDataEntity.company,department:this.addressDataEntity.department,firstName:this.addressDataEntity.firstName,lastName:this.addressDataEntity.lastName,street:this.addressDataEntity.street,city:this.addressDataEntity.city,zipcode:this.addressDataEntity.zipcode,countryId:this.addressDataEntity.country.id,phoneNumber:this.addressDataEntity.phoneNumber,addressType:this.addressDataEntity.addressType,bankDataId:void 0!==this.addressDataEntity.bankData?this.addressDataEntity.bankData.id:null,salesChannelId:this.addressDataEntity.salesChannel.id}),this.isLoading=!1},saveAddressData(){return this.isLoading=!0,!0===this.addressDataEntity.defaultAddress&&this.searchCurrentActiveAddress(),this.httpClient.post("/plc/address-data/upsert",this.addressObject,{headers:this.syncService.getBasicHeaders()}).then(e=>{200===e.status?(!0===e.data.data?this.createNotificationSuccess({message:this.$tc(e.data.message)}):this.createNotificationError({message:this.$tc(e.data.message)}),this.isLoading=!1,this.$emit("modal-save"),this.$emit("modal-close")):(this.createNotificationError({message:this.$tc("plc.modal.saveError")}),this.isLoading=!1)})},async searchCurrentActiveAddress(){let e=["returnAndShipping"];"returnAndShipping"===this.addressDataEntity.addressType?(e.push("return"),e.push("shipping")):"return"===this.addressDataEntity.addressType?e.push("return"):"shipping"===this.addressDataEntity.addressType&&e.push("shipping");let t=new b;t.addFilter(b.not("AND",[b.equals("id",this.addressDataEntity.id)])),t.addFilter(b.equals("defaultAddress",!0)),t.addFilter(b.equalsAny("addressType",e));try{let e=(await Promise.all([this.addressDataRepository.search(t)]))[0];return e.total>0&&e.forEach(e=>{e.defaultAddress=!1,this.addressDataRepository.save(e).then(e=>{if(void 0!==e)return this.$emit("modal-save"),!0})}),!1}catch(e){return!1}}}});let{Module:g}=Shopware;g.register("plc-address-data",{type:"plugin",name:"plc-address-data",title:"plc.menu.addressData",color:"#ff3d58",position:989,snippets:{"de-DE":e,"en-GB":t},routes:{list:{component:"address-data-list",path:"list",meta:{parentPath:"sw.settings.index.plugins"}}},settingsItem:{group:"plugins",to:"plc.address.data.list",iconComponent:"post-logo-icon",backgroundEnabled:!0}}),a(381);let{Component:v,Mixin:y}=Shopware,{Criteria:f}=Shopware.Data;v.register("return-reason-list",{template:'{% block plc_return_reasons_list %}\n    <sw-page class="plc-return-reasons-list">\n\n        {% block plc_return_reasons_list_smart_bar_header %}\n            <template #smart-bar-header>\n                {% block plc_return_reasons_list_smart_bar_header_title %}\n                    <h2>\n                        {% block plc_return_reasons_list_smart_bar_header_title_text %}\n                            {{ $tc(\'sw-settings.index.title\') }}\n                            <mt-icon v-if="feature.isActive(\'v6.6.0.0\')"\n                                     name="regular-chevron-right-xs"\n                                     small\n                            />\n                            <sw-icon v-else\n                                     name="regular-chevron-right-xs"\n                                     small\n                            />\n                            {{ $tc(\'plc.returnReasons.list.title\') }}\n                        {% endblock %}\n                    </h2>\n                {% endblock %}\n            </template>\n        {% endblock %}\n\n        \n        {% block plc_return_reasons_language_switch %}\n            <template #language-switch>\n                <sw-language-switch @on-change="onChangeLanguage"/>\n            </template>\n        {% endblock %}\n\n        {% block plc_return_reasons_list_actions_save %}\n            <template #smart-bar-actions>\n                <sw-button\n                        @click="openReturnReasonsModal(true)"\n                        variant="primary">\n                    {{ $tc(\'plc.returnReasons.list.create\') }}\n                </sw-button>\n\n                <return-reason-modal\n                        class="plc-return-reasons-modal"\n                        v-if="returnReasonsModal"\n                        :return-reason-entity="returnReasonsModal"\n                        @modal-save="saveReturnReasonModal"\n                        @modal-close="closeReturnReasonsModal">\n                </return-reason-modal>\n            </template>\n        {% endblock %}\n\n        {% block plc_return_reasons_list_content %}\n            <template #content>\n                {% block plc_return_reasons_list_content_listing %}\n                    <sw-entity-listing\n                            :columns="returnReasonColumns"\n                            :full-page="true"\n                            :items="returnReasonEntries"\n                            :show-settings="true"\n                            :show-selection="false"\n                            :show-actions="true"\n                            :sort-by="sortBy"\n                            :sort-direction="sortDirection"\n                            :is-loading="isLoading"\n                            :allow-column-edit="true"\n                            :disable-data-fetching="true"\n                            :repository="returnReasonsRepository"\n                            :page="page"\n                            @page-change="onPageChange"\n                            @update-records="updateTotal">\n\n                        {% block plc_return_reasons_list_column_name %}\n                            <template #column-name="{ item, inlineEdit }">\n                                <sw-context-menu-item\n                                        @click="openReturnReasonsModal(item)"\n                                >\n                                    {{ item.translated ? item.translated.name : item.name }}\n                                </sw-context-menu-item>\n                            </template>\n                        {% endblock %}\n\n                        {% block plc_return_reasons_list_column_technical_name %}\n                            <template #column-technicalName="{ item }">\n                                {{ item.technicalName }}\n                            </template>\n                        {% endblock %}\n\n\n                        {% block plc_return_reasons_list_context_menu %}\n                            <template #actions="{ item }">\n                                <sw-context-menu-item\n                                        class="plc-return-reasons-list__context-menu-edit-action"\n                                        @click="openReturnReasonsModal(item)"\n                                >\n                                    {{ $tc(\'plc.general.context-menu.edit\') }}\n                                </sw-context-menu-item>\n\n                                <sw-context-menu-item\n                                        variant="danger"\n                                        class="plc-return-reasons-list__context-menu-edit-delete"\n                                        @click="onDelete(item.id)"\n                                >\n                                    {{ $tc(\'plc.general.context-menu.delete\') }}\n                                </sw-context-menu-item>\n                            </template>\n                        {% endblock %}\n\n                        {% block plc_return_reasons_list_modal %}\n                            <template #action-modals="{ item }">\n                                <sw-modal\n                                        v-if="showDeleteModal === item.id"\n                                        :title="$tc(\'global.default.warning\')"\n                                        variant="small"\n                                        @modal-close="onCloseDeleteModal"\n                                >\n                                    \n                                    {% block sw_settings_number_range_list_delete_modal_confirm_delete_text %}\n                                        <p class="sw-settings-number-range-list__confirm-delete-text">\n                                            {{ $tc(\'plc.modal.returnReason.textDeleteConfirm\', 0, { name: item.translated.name }) }}\n                                        </p>\n                                    {% endblock %}\n\n                                    \n                                    {% block sw_settings_number_range_list_delete_modal_footer %}\n                                        <template #modal-footer>\n                                            \n                                            {% block sw_settings_number_range_list_delete_modal_cancel %}\n                                                <sw-button\n                                                        size="small"\n                                                        @click="onCloseDeleteModal"\n                                                >\n                                                    {{ $tc(\'plc.modal.buttonCancel\') }}\n                                                </sw-button>\n                                            {% endblock %}\n\n                                            \n                                            {% block sw_settings_number_range_list_delete_modal_confirm %}\n                                                <sw-button\n                                                        variant="danger"\n                                                        size="small"\n                                                        @click="onConfirmDelete(item.id)"\n                                                >\n                                                    {{ $tc(\'plc.modal.buttonDelete\') }}\n                                                </sw-button>\n                                            {% endblock %}\n                                        </template>\n                                    {% endblock %}\n                                </sw-modal>\n                            </template>\n                        {% endblock %}\n                    </sw-entity-listing>\n                {% endblock %}\n            </template>\n        {% endblock %}\n\n        {% block plc_return_reasons_list_sidebar %}\n            <template #sidebar>\n                <sw-sidebar class="plc-return-reasons-list__sidebar">\n                    {% block plc_return_reasons_list_sidebar_refresh %}\n                        <sw-sidebar-item\n                                icon="regular-undo"\n                                :title="$tc(\'plc.general.titleSidebarItemRefresh\')"\n                                @click="onRefresh"\n                        />\n                    {% endblock %}\n                </sw-sidebar>\n            </template>\n        {% endblock %}\n    </sw-page>\n{% endblock %}\n',snippets:{"de-DE":e,"en-GB":t},mixins:[y.getByName("notification"),y.getByName("listing")],inject:["repositoryFactory","acl","numberRangeService"],data(){return{sortBy:"createdAt",sortDirection:"DESC",isLoading:!1,returnReasonEntries:null,limit:25,returnReasonsModal:!1,total:0,showDeleteModal:!1,createModal:!1}},metaInfo(){return{title:this.$tc("plc.menu.returnReasons")}},computed:{returnReasonsRepository(){return this.repositoryFactory.create("plc_return_reasons")},returnReasonColumns(){return this.getColumns()},showReturnReasonsModal(){return!!this.returnReasonsModal},showCreationModal(){return!!this.createModal}},beforeRouteLeave(e,t,a){this.returnReasonsModal&&this.closeReturnReasonsModal(),this.createModal&&this.closeCreateModal(),this.$nextTick(()=>{a()})},methods:{async getList(){this.isLoading=!0;let e=new f(this.page,this.limit);e.setTerm(this.term),e.addAssociation("translations");try{let t=(await Promise.all([this.returnReasonsRepository.search(e)]))[0];this.total=t.total,this.returnReasonEntries=t,this.isLoading=!1}catch{this.isLoading=!1}},getColumns(){return[{property:"name",primary:!0,label:this.$tc("plc.returnReasons.list.name"),allowResize:!0},{property:"technicalName",label:this.$tc("plc.returnReasons.list.technicalName"),allowResize:!0}]},onDelete(e){this.showDeleteModal=e},onChangeLanguage(e){Shopware.State.commit("context/setApiLanguageId",e),this.getList()},onConfirmDelete(e){return this.showDeleteModal=!1,this.returnReasonsRepository.delete(e).then(()=>{this.getList()})},onCloseDeleteModal(){this.showDeleteModal=!1},updateTotal({total:e}){this.total=e},updateCriteria(e){this.page=1,this.filterCriteria=e},openReturnReasonsModal(e){this.returnReasonsModal=e},closeReturnReasonsModal(){this.returnReasonsModal=!1},saveReturnReasonModal(){this.returnReasonsModal=!1,this.getList()}}}),a(279);let{Component:_,Mixin:w}=Shopware;_.register("return-reason-modal",{template:'{% block plc_return_reason__modal %}\n    <sw-modal\n            class="plc-return-reasons-modal"\n            :title="modalTitle"\n            variant="small"\n            @modal-close="$emit(\'modal-close\')"\n    >\n        {% block plc_return_reason__modal_body %}\n            <mt-loader v-if="isLoading && feature.isActive(\'v6.6.0.0\')"/>\n            <sw-loader v-if="isLoading && !feature.isActive(\'v6.6.0.0\')"/>\n            <template v-else>\n                <sw-text-field\n                        v-model:value="name"\n                        class="plc-return-reasons-modal_name"\n                        size="small"\n                        name="return-reason-name"\n                        :label="$tc(\'plc.returnReasons.label.name\')"\n                        :placeholder="$tc(\'plc.returnReasons.placeholder.name\')"\n                />\n\n                <sw-text-field\n                        v-model:value="technicalName"\n                        class="plc-return-reasons-modal_technicalName"\n                        name="return-reason-technicalName"\n                        :label="$tc(\'plc.returnReasons.label.technicalName\')"\n                        :placeholder="$tc(\'plc.returnReasons.placeholder.technicalName\')"\n                        size="small"\n                />\n            </template>\n        {% endblock %}\n\n        \n        {% block plc_return_reason__modal_footer %}\n            <template #modal-footer>\n                {% block plc_return_reason__modal_footer_close_button %}\n                    <sw-button\n                            size="small"\n                            @click="$emit(\'modal-close\')"\n                    >\n                        {{ $tc(\'global.sw-modal.labelClose\') }}\n                    </sw-button>\n                {% endblock %}\n\n                {% block plc_return_reason__modal_footer_save_button %}\n                    <sw-button\n                            variant="primary"\n                            size="small"\n                            :disabled="isLoading"\n                            @click="saveReason"\n                    >\n                        {{ $tc(\'plc.modal.save\') }}\n                    </sw-button>\n                {% endblock %}\n            </template>\n        {% endblock %}\n    </sw-modal>\n{% endblock %}\n',snippets:{"de-DE":e,"en-GB":t},mixins:[w.getByName("notification")],inject:["repositoryFactory","acl","feature"],data(){return{isLoading:!1,returnReasonObject:null,technicalName:null,name:null}},props:{returnReasonEntity:{type:[Object,Boolean],required:!0}},created(){this.createdComponent()},computed:{modalTitle(){return"object"==typeof this.bankDataEntity?this.$tc("plc.returnReasons.editTitle"):this.$tc("plc.returnReasons.createTitle")},returnReasonsRepository(){return this.repositoryFactory.create("plc_return_reasons")},returnReasonTranslationRepository(){return this.repositoryFactory.create("plc_return_reasons")}},methods:{createdComponent(){this.isLoading=!0,this.returnReasonObject=this.returnReasonsRepository.create(Shopware.Context.api),this.syncService=Shopware.Service("syncService"),this.httpClient=this.syncService.httpClient,"object"==typeof this.returnReasonEntity&&(this.technicalName=this.returnReasonEntity.technicalName,this.name=this.returnReasonEntity.name,this.returnReasonObject={id:this.returnReasonEntity.id}),this.isLoading=!1},saveReason(){return this.isLoading=!0,this.returnReasonObject.technicalName=this.technicalName,this.returnReasonObject.name=this.name,this.httpClient.post("/plc/return-reason/upsert",{returnReason:this.returnReasonObject,translation:{languageId:Shopware.Context.api.language.id,name:this.name}},{headers:this.syncService.getBasicHeaders()}).then(e=>{200===e.status?!0===e.data.data?(this.createNotificationSuccess({message:this.$tc(e.data.message)}),this.$emit("modal-save")):this.createNotificationError({message:this.$tc(e.data.message)}):this.createNotificationError({message:this.$tc("plc.modal.saveError")}),this.isLoading=!1})}}});let{Module:k}=Shopware;k.register("plc-return-reason",{type:"plugin",name:"plc-return-reason",title:"plc.menu.returnReason",description:"plc.menu.descriptionTextModule",color:"#ff3d58",position:990,snippets:{"de-DE":e,"en-GB":t},routes:{list:{component:"return-reason-list",path:"list",meta:{parentPath:"sw.settings.index.plugins"}}},settingsItem:{group:"plugins",to:"plc.return.reason.list",iconComponent:"post-logo-icon",backgroundEnabled:!0}}),a(631);let{Component:D,Mixin:L}=Shopware,{Criteria:S}=Shopware.Data;Shopware.Component.register("bank-data-list",{template:'{% block plc_bank_data_list %}\n    <sw-page class="plc-bank-data-list">\n\n        {% block plc_bank_data_list_smart_bar_header %}\n            <template #smart-bar-header>\n                {% block plc_bank_data_list_smart_bar_header_title %}\n                    <h2>\n                        {% block plc_bank_data_list_smart_bar_header_title_text %}\n                            {{ $tc(\'sw-settings.index.title\') }}\n                            <mt-icon v-if="feature.isActive(\'v6.6.0.0\')"\n                                     name="regular-chevron-right-xs"\n                                     small\n                            />\n                            <sw-icon v-else\n                                     name="regular-chevron-right-xs"\n                                     small\n                            />\n                            {{ $tc(\'plc.bankData.list.title\') }}\n                        {% endblock %}\n                    </h2>\n                {% endblock %}\n            </template>\n        {% endblock %}\n\n        \n        {% block plc_bank_data_language_switch %}\n            <template #language-switch>\n                <sw-language-switch @on-change="onChangeLanguage"/>\n            </template>\n        {% endblock %}\n\n        {% block plc_bank_data_list_actions_save %}\n            <template #smart-bar-actions>\n                <sw-button\n                        @click="openBankDataModal(true)"\n                        variant="primary">\n                    {{ $tc(\'plc.bankData.list.create\') }}\n                </sw-button>\n\n\n                <bank-data-modal\n                        class="plc-bank-data-modal"\n                        v-if="bankDataModal"\n                        :bank-data-entity="bankDataModal"\n                        @modal-save="saveBankDataModal"\n                        @modal-close="closeBankDataModal">\n                </bank-data-modal>\n            </template>\n        {% endblock %}\n\n        {% block plc_bank_data_list_content %}\n            <template #content>\n                {% block plc_bank_data_list_content_listing %}\n                    <sw-entity-listing\n                            :columns="bankDataColumns"\n                            :full-page="true"\n                            :items="bankDataEntries"\n                            :show-settings="true"\n                            :show-selection="false"\n                            :show-actions="true"\n                            :sort-by="sortBy"\n                            :sort-direction="sortDirection"\n                            :is-loading="isLoading"\n                            :allow-column-edit="true"\n                            :disable-data-fetching="true"\n                            :repository="bankDataRepository"\n                            :page="page"\n                            @page-change="onPageChange"\n                            @update-records="updateTotal">\n\n                        {% block plc_bank_data_list_column_display_name %}\n                            <template #column-displayName="{ item }">\n                                <sw-context-menu-item\n                                        @click="openBankDataModal(item)"\n                                >\n                                    {{ item.translated ? item.translated.displayName : item.displayName }}\n                                </sw-context-menu-item>\n                            </template>\n                        {% endblock %}\n\n                        {% block plc_bank_data_list_context_menu %}\n                            <template #actions="{ item }">\n                                <sw-context-menu-item\n                                        class="plc-bank-data-list__context-menu-edit-action"\n                                        @click="openBankDataModal(item)"\n                                >\n                                    {{ $tc(\'plc.general.context-menu.edit\') }}\n                                </sw-context-menu-item>\n\n                                <sw-context-menu-item\n                                        variant="danger"\n                                        class="plc-bank-data-list__context-menu-edit-delete"\n                                        @click="onDelete(item.id)"\n                                >\n                                    {{ $tc(\'plc.general.context-menu.delete\') }}\n                                </sw-context-menu-item>\n                            </template>\n                        {% endblock %}\n\n                        {% block plc_bank_data_list_modal %}\n                            <template #action-modals="{ item }">\n                                <sw-modal\n                                        v-if="showDeleteModal === item.id"\n                                        :title="$tc(\'global.default.warning\')"\n                                        variant="small"\n                                        @modal-close="onCloseDeleteModal"\n                                >\n                                    \n                                    {% block sw_settings_number_range_list_delete_modal_confirm_delete_text %}\n                                        <p class="sw-settings-number-range-list__confirm-delete-text">\n                                            {{ $tc(\'plc.modal.bankData.textDeleteConfirm\', 0, { name: item.displayName }) }}\n                                        </p>\n                                    {% endblock %}\n\n                                    \n                                    {% block sw_settings_number_range_list_delete_modal_footer %}\n                                        <template #modal-footer>\n                                            \n                                            {% block sw_settings_number_range_list_delete_modal_cancel %}\n                                                <sw-button\n                                                        size="small"\n                                                        @click="onCloseDeleteModal"\n                                                >\n                                                    {{ $tc(\'plc.modal.buttonCancel\') }}\n                                                </sw-button>\n                                            {% endblock %}\n\n                                            \n                                            {% block sw_settings_number_range_list_delete_modal_confirm %}\n                                                <sw-button\n                                                        variant="danger"\n                                                        size="small"\n                                                        @click="onConfirmDelete(item.id)"\n                                                >\n                                                    {{ $tc(\'plc.modal.buttonDelete\') }}\n                                                </sw-button>\n                                            {% endblock %}\n                                        </template>\n                                    {% endblock %}\n                                </sw-modal>\n                            </template>\n                        {% endblock %}\n                    </sw-entity-listing>\n                {% endblock %}\n            </template>\n        {% endblock %}\n\n        {% block plc_bank_data_list_sidebar %}\n            <template #sidebar>\n                <sw-sidebar class="plc-bank-data-list__sidebar">\n                    {% block plc_bank_data_list_sidebar_refresh %}\n                        <sw-sidebar-item\n                                icon="regular-undo"\n                                :title="$tc(\'plc.general.titleSidebarItemRefresh\')"\n                                @click="onRefresh"\n                        />\n                    {% endblock %}\n                </sw-sidebar>\n            </template>\n        {% endblock %}\n    </sw-page>\n{% endblock %}\n',snippets:{"de-DE":e,"en-GB":t},mixins:[L.getByName("notification"),L.getByName("listing")],inject:["repositoryFactory","acl","numberRangeService"],data(){return{sortBy:"createdAt",sortDirection:"DESC",isLoading:!1,bankDataEntries:null,limit:25,bankDataModal:!1,total:0,showDeleteModal:!1}},metaInfo(){return{title:this.$tc("plc.menu.bankData")}},computed:{bankDataRepository(){return this.repositoryFactory.create("plc_bank_data")},bankDataColumns(){return this.getColumns()},showBankDataModal(){return!!this.bankDataModal}},beforeRouteLeave(e,t,a){this.bankDataModal&&this.closeBankDataModal(),this.createModal&&this.closeCreateModal(),this.$nextTick(()=>{a()})},methods:{async getList(){this.isLoading=!0;let e=new S(this.page,this.limit);e.setTerm(this.term);try{let t=(await Promise.all([this.bankDataRepository.search(e)]))[0];this.total=t.total,this.bankDataEntries=t,this.isLoading=!1}catch{this.isLoading=!1}},getColumns(){return[{property:"displayName",primary:!0,label:this.$tc("plc.bankData.list.displayName"),allowResize:!0},{property:"accountHolder",label:this.$tc("plc.bankData.list.accountHolder"),allowResize:!0},{property:"bic",label:this.$tc("plc.bankData.list.bic"),allowResize:!0},{property:"iban",label:this.$tc("plc.bankData.list.iban"),allowResize:!0}]},onDelete(e){this.showDeleteModal=e},onChangeLanguage(e){Shopware.State.commit("context/setApiLanguageId",e),this.getList()},onConfirmDelete(e){return this.showDeleteModal=!1,this.bankDataRepository.delete(e).then(()=>{this.getList()})},onCloseDeleteModal(){this.showDeleteModal=!1},updateTotal({total:e}){this.total=e},updateCriteria(e){this.page=1,this.filterCriteria=e},openBankDataModal(e){this.bankDataModal=e},closeBankDataModal(){this.bankDataModal=!1},saveBankDataModal(){this.bankDataModal=!1,this.getList()}}}),a(300);let{Component:C,Mixin:A}=Shopware;C.register("bank-data-modal",{template:'{% block plc_return_reason__modal %}\n    <sw-modal\n            class="plc-return-reasons-modal"\n            :title="modalTitle"\n            variant="small"\n            @modal-close="$emit(\'modal-close\')"\n    >\n        {% block plc_return_reason__modal_body %}\n            <mt-loader v-if="isLoading && feature.isActive(\'v6.6.0.0\')"/>\n            <sw-loader v-if="isLoading && !feature.isActive(\'v6.6.0.0\')"/>\n            <template v-else>\n                <sw-text-field\n                        class="plc-bank-data-modal_displayName"\n                        size="small"\n                        v-model:value="bankDataObject.displayName"\n                        name="bank-data-displayName"\n                        :label="$tc(\'plc.bankData.label.displayName\')"\n                        :placeholder="$tc(\'plc.bankData.placeholder.displayName\')"\n                />\n\n                <sw-text-field\n                        class="plc-bank-data-modal_accountHolder"\n                        size="small"\n                        v-model:value="bankDataObject.accountHolder"\n                        name="bank-data-accountHolder"\n                        :label="$tc(\'plc.bankData.label.accountHolder\')"\n                        :placeholder="$tc(\'plc.bankData.placeholder.accountHolder\')"\n                />\n\n                <sw-text-field\n                        class="plc-bank-data-modal_bic"\n                        size="small"\n                        v-model:value="bankDataObject.bic"\n                        name="bank-data-bic"\n                        :label="$tc(\'plc.bankData.label.bic\')"\n                        :placeholder="$tc(\'plc.bankData.placeholder.bic\')"\n                />\n\n                <sw-text-field\n                        class="plc-bank-data-modal_iban"\n                        size="small"\n                        v-model:value="bankDataObject.iban"\n                        :isInvalid="!isValidIban(bankDataObject.iban)"\n                        name="bank-data-iban"\n                        :label="$tc(\'plc.bankData.label.iban\')"\n                        :placeholder="$tc(\'plc.bankData.placeholder.iban\')"\n                />\n            </template>\n        {% endblock %}\n\n        \n        {% block plc_return_reason__modal_footer %}\n            <template #modal-footer>\n                {% block plc_return_reason__modal_footer_close_button %}\n                    <sw-button\n                            size="small"\n                            @click="$emit(\'modal-close\')"\n                    >\n                        {{ $tc(\'global.sw-modal.labelClose\') }}\n                    </sw-button>\n                {% endblock %}\n\n                {% block plc_return_reason__modal_footer_save_button %}\n                    <sw-button\n                            variant="primary"\n                            size="small"\n                            :disabled="!isValidIban(bankDataObject.iban) || !bankDataObject.iban"\n                            @click="saveBankData"\n                    >\n                        {{ $tc(\'plc.modal.save\') }}\n                    </sw-button>\n                {% endblock %}\n            </template>\n        {% endblock %}\n    </sw-modal>\n{% endblock %}\n',snippets:{"de-DE":e,"en-GB":t},mixins:[A.getByName("notification"),A.getByName("plc-helper")],inject:["repositoryFactory","acl","feature"],data(){return{isLoading:!1,bankDataObject:{displayName:null,accountHolder:null,bic:null,iban:null}}},props:{bankDataEntity:{type:[Object,Boolean],required:!1,default:null}},created(){this.createdComponent()},computed:{modalTitle(){return"object"==typeof this.bankDataEntity?this.$tc("plc.bankData.editTitle"):this.$tc("plc.bankData.createTitle")}},methods:{createdComponent(){this.isLoading=!0,this.syncService=Shopware.Service("syncService"),this.httpClient=this.syncService.httpClient,"object"==typeof this.bankDataEntity&&(this.bankDataObject={displayName:this.bankDataEntity.displayName,accountHolder:this.bankDataEntity.accountHolder,bic:this.bankDataEntity.bic,iban:this.bankDataEntity.iban,id:this.bankDataEntity.id}),this.isLoading=!1},saveBankData(){return this.isLoading=!0,this.httpClient.post("/plc/bank-data/upsert",this.bankDataObject,{headers:this.syncService.getBasicHeaders()}).then(e=>{200===e.status?(!0===e.data.data?this.createNotificationSuccess({message:this.$tc(e.data.message)}):this.createNotificationError({message:this.$tc(e.data.message)}),this.isLoading=!1,this.$emit("modal-save"),this.$emit("modal-close")):this.createNotificationError({message:this.$tc("plc.modal.saveError")})})}}});let{Module:N}=Shopware;N.register("plc-bank-data",{type:"plugin",name:"plc-bank-data",title:"plc.menu.bankData",description:"plc.menu.descriptionTextModule",color:"#ff3d58",position:990,snippets:{"de-DE":e,"en-GB":t},routes:{list:{component:"bank-data-list",path:"list",meta:{parentPath:"sw.settings.index.plugins"}}},settingsItem:{group:"plugins",to:"plc.bank.data.list",iconComponent:"post-logo-icon",backgroundEnabled:!0}}),a(731);let{Component:$,Mixin:M}=Shopware,{Criteria:T}=Shopware.Data;$.register("shipping-services-list",{template:'{% block plc_shipping_services_list %}\n    <sw-page class="plc-shipping-services-list">\n\n        {% block plc_shipping_services_list_smart_bar_header %}\n            <template #smart-bar-header>\n                {% block plc_shipping_services_list_smart_bar_header_title %}\n                    <h2>\n                        {% block plc_shipping_services_list_smart_bar_header_title_text %}\n                            {{ $tc(\'sw-settings.index.title\') }}\n                            <mt-icon v-if="feature.isActive(\'v6.6.0.0\')"\n                                     name="regular-chevron-right-xs"\n                                     small\n                            />\n                            <sw-icon v-if="!feature.isActive(\'v6.6.0.0\')"\n                                     name="regular-chevron-right-xs"\n                                     small\n                            />\n                            {{ $tc(\'plc.shippingServices.list.title\') }}\n                        {% endblock %}\n                    </h2>\n                {% endblock %}\n\n                <sw-internal-link style="padding-right: 15px" :router-link="{ name: \'sw.settings.shipping.index\'}"\n                                  :inline="false" :disabled="false">\n                    {{ $tc(\'plc.shippingServices.shippingMethod.backLink\') }}\n                </sw-internal-link>\n            </template>\n        {% endblock %}\n\n        \n        {% block plc_shipping_services_language_switch %}\n            <template #language-switch>\n                <sw-language-switch @on-change="onChangeLanguage"/>\n            </template>\n        {% endblock %}\n\n        {% block plc_shipping_services_list_actions_save %}\n            <template #smart-bar-actions>\n                <sw-button\n                        @click="openShippingServicesModal(true)"\n                        variant="primary">\n                    {{ $tc(\'plc.shippingServices.list.create\') }}\n                </sw-button>\n\n                <shipping-service-modal\n                        class="plc-shipping-services-modal"\n                        :shipping-service-entity="shippingServicesModal"\n                        v-if="shippingServicesModal"\n                        @modal-save="saveShippingServicesModal"\n                        @modal-close="closeShippingServicesModal">\n                </shipping-service-modal>\n            </template>\n        {% endblock %}\n\n        {% block plc_shipping_services_list_content %}\n            <template #content>\n                {% block plc_shipping_services_list_content_listing %}\n                    <sw-entity-listing\n                            :columns="shippingServicesColumns"\n                            :full-page="true"\n                            :items="shippingServiceEntries"\n                            :show-settings="true"\n                            :show-selection="false"\n                            :show-actions="true"\n                            :sort-by="sortBy"\n                            :sort-direction="sortDirection"\n                            :is-loading="isLoading"\n                            :allow-column-edit="true"\n                            :disable-data-fetching="true"\n                            :repository="shippingServicesRepository"\n                            :page="page"\n                            @page-change="onPageChange"\n                            @update-records="updateTotal">\n\n                        {% block plc_shipping_services_list_column_name %}\n                            <template #column-displayName="{ item }">\n                                <sw-context-menu-item\n                                        @click="openShippingServicesModal(item)"\n                                        :shipping-service-entity="item"\n                                >\n                                    {{ item.translated ? item.translated.displayName : item.displayName }}\n                                </sw-context-menu-item>\n                            </template>\n                        {% endblock %}\n\n                        {% block plc_shipping_services_list_column_salesChannel %}\n                            <template #column-salesChannel="{ item }">\n                                {{ item.salesChannel.translated ? item.salesChannel.translated.name : item.salesChannel.name }}\n                            </template>\n                        {% endblock %}\n\n                        {% block plc_shipping_services_list_column_countries %}\n                            <template #column-countries="{ item }">\n                                <div v-if="item.countries">\n                                    <span v-for="country, index in item.countries.slice(0, 3)">\n                                        <span v-if="index > 0">, </span>\n                                            <span>{{ country.translated ? country.translated.name : country.name }}</span>\n                                        </span>\n                                    <span v-if="item.countries.length > 3">, ...</span>\n                                </div>\n                                <div v-else></div>\n                            </template>\n                        {% endblock %}\n\n                        {% block plc_shipping_services_list_column_countryCodes %}\n                            <template #column-countryCodes="{ item }">\n                                <div v-if="item.countries">\n                                    <span v-for="country, index in item.countries">\n                                        <span v-if="index > 0">, </span>\n                                        {{ country.iso }}\n                                    </span>\n                                </div>\n                                <div v-else></div>\n                            </template>\n                        {% endblock %}\n\n\n                        {% block plc_shipping_services_list_column_product %}\n                            <template #column-shippingProduct="{ item }">\n                                {{ jsonDecode(item.shippingProduct, \'name\') }}\n                            </template>\n                        {% endblock %}\n\n                        {% block plc_shipping_services_list_column_featureList %}\n                            <template #column-featureList="{ item }">\n                                {{ jsonDecode(item.featureList, \'name\') }}\n                            </template>\n                        {% endblock %}\n\n                        {% block plc_shipping_services_list_context_menu %}\n                            <template #actions="{ item }">\n                                <sw-context-menu-item\n                                        class="plc-shipping-services-list__context-menu-edit-action"\n                                        @click="openShippingServicesModal(item)"\n                                >\n                                    {{ $tc(\'plc.general.context-menu.edit\') }}\n                                </sw-context-menu-item>\n\n                                <sw-context-menu-item\n                                        variant="danger"\n                                        class="plc-shipping-services-list__context-menu-edit-delete"\n                                        @click="onDelete(item.id)"\n                                >\n                                    {{ $tc(\'plc.general.context-menu.delete\') }}\n                                </sw-context-menu-item>\n                            </template>\n                        {% endblock %}\n\n                        {% block plc_shipping_services_list_modal %}\n                            <template #action-modals="{ item }">\n                                <sw-modal\n                                        v-if="showDeleteModal === item.id"\n                                        :title="$tc(\'global.default.warning\')"\n                                        variant="small"\n                                        @modal-close="onCloseDeleteModal"\n                                >\n\n                                    \n                                    {% block sw_settings_number_range_list_delete_modal_confirm_delete_text %}\n                                        <p class="sw-settings-number-range-list__confirm-delete-text">\n                                            {{ $tc(\'plc.modal.shippingServices.textDeleteConfirm\', 0, { name: item.displayName }) }}\n                                        </p>\n                                    {% endblock %}\n\n                                    \n                                    {% block sw_settings_number_range_list_delete_modal_footer %}\n                                        <template #modal-footer>\n                                            \n                                            {% block sw_settings_number_range_list_delete_modal_cancel %}\n                                                <sw-button\n                                                        size="small"\n                                                        @click="onCloseDeleteModal"\n                                                >\n                                                    {{ $tc(\'plc.modal.buttonCancel\') }}\n                                                </sw-button>\n                                            {% endblock %}\n\n                                            \n                                            {% block sw_settings_number_range_list_delete_modal_confirm %}\n                                                <sw-button\n                                                        variant="danger"\n                                                        size="small"\n                                                        @click="onConfirmDelete(item.id)"\n                                                >\n                                                    {{ $tc(\'plc.modal.buttonDelete\') }}\n                                                </sw-button>\n                                            {% endblock %}\n                                        </template>\n                                    {% endblock %}\n                                </sw-modal>\n                            </template>\n                        {% endblock %}\n                    </sw-entity-listing>\n                {% endblock %}\n            </template>\n        {% endblock %}\n\n        {% block plc_shipping_services_list_sidebar %}\n            <template #sidebar>\n                <sw-sidebar class="plc-shipping-services-list__sidebar">\n                    {% block plc_shipping_services_list_sidebar_refresh %}\n                        <sw-sidebar-item\n                                icon="regular-undo"\n                                :title="$tc(\'plc.general.titleSidebarItemRefresh\')"\n                                @click="onRefresh"\n                        />\n                    {% endblock %}\n                </sw-sidebar>\n            </template>\n        {% endblock %}\n    </sw-page>\n{% endblock %}\n',snippets:{"de-DE":e,"en-GB":t},mixins:[M.getByName("notification"),M.getByName("listing"),M.getByName("plc-helper")],inject:["repositoryFactory","acl","numberRangeService"],data(){return{sortBy:"createdAt",sortDirection:"DESC",isLoading:!1,shippingServiceEntries:null,limit:25,shippingServicesModal:!1,total:0,showDeleteModal:!1,page:1}},metaInfo(){return{title:this.$tc("plc.menu.shippingService")}},computed:{shippingServicesRepository(){return this.repositoryFactory.create("plc_shipping_services")},shippingMethodRepository(){return this.repositoryFactory.create("shipping_method")},shippingServicesColumns(){return this.getColumns()},showShippingServicesModal(){return!!this.shippingServicesModal},showCreationModal(){return!!this.createModal}},beforeRouteLeave(e,t,a){this.shippingServicesModal&&this.closeShippingServicesModal(),this.$nextTick(()=>{a()})},methods:{async getList(){this.isLoading=!0;let e=new T(this.page,this.limit);e.setTerm(this.term),e.addAssociation("salesChannel"),e.addAssociation("countries");try{let t=(await Promise.all([this.shippingServicesRepository.search(e)]))[0];this.total=t.total,this.shippingServiceEntries=t,this.isLoading=!1}catch{this.isLoading=!1}},getColumns(){return[{property:"displayName",primary:!0,label:this.$tc("plc.shippingServices.list.displayName"),allowResize:!0},{property:"salesChannel",label:this.$tc("plc.shippingServices.list.salesChannel"),allowResize:!0},{property:"countries",label:this.$tc("plc.shippingServices.list.countries"),allowResize:!0},{property:"countryCodes",label:this.$tc("plc.shippingServices.list.countryCodes"),allowResize:!0},{property:"shippingProduct",label:this.$tc("plc.shippingServices.list.shippingProduct"),allowResize:!0},{property:"featureList",label:this.$tc("plc.shippingServices.list.featureList"),allowResize:!0}]},onDelete(e){this.showDeleteModal=e},onChangeLanguage(e){Shopware.State.commit("context/setApiLanguageId",e),this.getList()},onConfirmDelete(e){return this.showDeleteModal=!1,this.shippingServicesRepository.delete(e).then(()=>{let t=new T(this.page,this.limit);t.addFilter(T.equals("customFields.plc_shipping_service",e)),this.shippingMethodRepository.search(t).then(e=>{e.total>0&&e.forEach(e=>{e.customFields.plc_shipping_service=null})}),this.getList()})},onCloseDeleteModal(){this.showDeleteModal=!1},updateTotal({total:e}){this.total=e},updateCriteria(e){this.page=1,this.filterCriteria=e},openShippingServicesModal(e){this.shippingServicesModal=e},closeShippingServicesModal(){this.shippingServicesModal=!1},saveShippingServicesModal(){this.shippingServicesModal=!1,this.getList()}}}),a(713);let{Component:x,Mixin:I,Context:O}=Shopware,{Criteria:R,EntityCollection:E}=Shopware.Data;x.register("shipping-service-modal",{template:'\n\n{% block plc_shipping_service__modal %}\n    <sw-modal\n            class="plc-shipping-service-modal"\n            :title="modalTitle"\n            variant="large"\n            @modal-close="$emit(\'modal-close\')"\n    >\n        {% block plc_shipping_service__modal_body %}\n            <mt-loader v-if="isLoading && feature.isActive(\'v6.6.0.0\')"/>\n            <sw-loader v-if="isLoading && !feature.isActive(\'v6.6.0.0\')"/>\n            <template v-else>\n                <sw-text-field\n                        class="plc-shipping-service-modal_displayName"\n                        size="small"\n                        v-model:value="displayName"\n                        name="shipping-service-displayName"\n                        :label="$tc(\'plc.shippingServices.label.displayName\')"\n                        :placeholder="$tc(\'plc.shippingServices.placeholder.displayName\')"\n                        validation="required"\n                        required\n                />\n\n                <sw-entity-single-select\n                        v-model:value="salesChannelId"\n                        class="shipping-service__sales-channel-select"\n                        entity="sales_channel"\n                        name="shipping-service-salutation"\n                        :label="$tc(\'plc.shippingServices.label.salesChannel\')"\n                        :placeholder="$tc(\'plc.shippingServices.placeholder.salesChannel\')"\n                        :criteria="salesChannelCriteria"\n                        label-property="name"\n                        validation="required"\n                        size="small"\n                        required\n                />\n\n                <sw-entity-multi-select\n                        v-if="salesChannelId != null && feature.isActive(\'v6.6.0.0\')"\n                        :entity-collection="countries"\n                        class="shipping-service__country-select"\n                        :criteria="countryCriteria"\n                        name="shipping-service-country"\n                        :label="$tc(\'plc.shippingServices.label.country\')"\n                        :placeholder="$tc(\'plc.shippingServices.placeholder.country\')"\n                        @update:entity-collection="onChange"\n                        show-clearable-button\n                        validation="required"\n                        required\n                />\n\n                <sw-entity-multi-select\n                        v-if="salesChannelId != null && !feature.isActive(\'v6.6.0.0\')"\n                        v-model:value="countries"\n                        class="shipping-service__country-select"\n                        entity-name="country"\n                        name="shipping-service-country"\n                        :label="$tc(\'plc.shippingServices.label.country\')"\n                        :placeholder="$tc(\'plc.shippingServices.placeholder.country\')"\n                        :criteria="countryCriteria"\n                        @change="updateAvailableServices"\n                        show-clearable-button\n                        validation="required"\n                        required\n                />\n\n                <sw-single-select\n                        v-if="shippingServices && serviceOptions && countries.length > 0"\n                        v-model:value="selectedService"\n                        class="sw-bulk-edit-change-type__selection"\n                        :options="shippingServicesOptions"\n                        name="shipping-service-addressType"\n                        :label="$tc(\'plc.shippingServices.label.service\')"\n                        :placeholder="$tc(\'plc.shippingServices.placeholder.service\')"\n                        validation="required"\n                        @change="updateFeatureList"\n                        size="small"\n                        required\n                />\n\n                <sw-multi-select\n                        v-if="selectedService != null && shippingFeatures"\n                        :label="$tc(\'plc.shippingServices.label.features\')"\n                        :placeholder="$tc(\'plc.shippingServices.placeholder.features\')"\n                        v-model:value="selectedFeatures"\n                        :options="shippingFeaturesOptions"\n                        name="shipping-service-features"\n                        class="plc-shipping-features__select"\n                        value="">\n                </sw-multi-select>\n            </template>\n        {% endblock %}\n\n        \n        {% block plc_shipping_service__modal_footer %}\n            <template #modal-footer>\n                {% block plc_shipping_service__modal_footer_close_button %}\n                    <sw-button\n                            size="small"\n                            @click="$emit(\'modal-close\')"\n                    >\n                        {{ $tc(\'global.sw-modal.labelClose\') }}\n                    </sw-button>\n                {% endblock %}\n\n                {% block plc_shipping_service__modal_footer_save_button %}\n                    <sw-button\n                            variant="primary"\n                            size="small"\n                            @click="checkShippingFeatures"\n                            :disabled="isLoading"\n                    >\n                        {{ $tc(\'plc.modal.save\') }}\n                    </sw-button>\n                {% endblock %}\n            </template>\n        {% endblock %}\n    </sw-modal>\n{% endblock %}\n',snippets:{"de-DE":e,"en-GB":t},mixins:[I.getByName("notification")],inject:["repositoryFactory","acl","feature"],props:{shippingServiceEntity:{type:[Object,Boolean],required:!1,default:null}},data(){return{isLoading:!1,shippingServices:null,salesChannelId:null,selectedFeatures:[],selectedService:null,displayName:null,countries:null,syncService:null,httpClient:null,serviceOptions:[],shippingFeatures:[],newShippingService:null,responseMessage:null,entityId:null}},created(){this.createdComponent()},computed:{modalTitle(){return"object"==typeof this.shippingServiceEntity?this.$tc("plc.shippingServices.editTitle"):this.$tc("plc.shippingServices.createTitle")},countryRepository(){return this.repositoryFactory.create("country")},countryCriteria(){let e=new R(1,25);return e.addSorting(R.sort("name","ASC")),e.addFilter(R.equals("active",!0)),e},salesChannelCriteria(){let e=new R(1,25);return e.addFilter(R.equals("active",!0)),e.addFilter(R.equalsAny("type.iconName",["regular-storefront","regular-shopping-basket"])),e.addSorting(R.sort("shortName","ASC")),e},shippingServicesOptions(){return 0===this.shippingServices.length?[]:(this.serviceOptions=[],this.shippingServices.forEach(e=>{let t={value:e.thirdPartyID,label:e.name};this.serviceOptions.includes(t)||this.serviceOptions.push(t)}),this.serviceOptions)},shippingFeaturesOptions(){return null===this.shippingServices?[]:(this.shippingFeatures=[],this.shippingServices.forEach(e=>{e.thirdPartyID===this.selectedService&&e.featureList.length>0&&e.featureList.forEach(e=>{this.shippingFeatures.push({value:e.thirdPartyID,label:e.name})})}),this.shippingFeatures)}},methods:{createdComponent(){this.isLoading=!0,this.syncService=Shopware.Service("syncService"),this.httpClient=this.syncService.httpClient,this.countries=new E(this.countryRepository.route,this.countryRepository.entityName,O.api),"object"==typeof this.shippingServiceEntity?(this.displayName=this.shippingServiceEntity.displayName,this.salesChannelId=this.shippingServiceEntity.salesChannelId,this.countries=this.shippingServiceEntity.countries,this.entityId=this.shippingServiceEntity.id,this.countries&&this.salesChannelId&&this.updateAvailableServices().then(()=>{let e=JSON.parse(this.shippingServiceEntity.shippingProduct);if(e){this.selectedService=e.thirdPartyID;let t=JSON.parse(this.shippingServiceEntity.featureList);t&&t.length>0&&t.forEach(e=>{this.selectedFeatures.push(e.thirdPartyID)})}this.isLoading=!1})):this.isLoading=!1},updateFeatureList(){this.selectedFeatures=[]},async updateAvailableServices(){if(this.isLoading=!0,0===this.countries.length||null===this.salesChannelId){this.selectedFeatures=[],this.selectedService=null,this.isLoading=!1;return}return this.httpClient.post("/plc/shipping-services",{salesChannelId:this.salesChannelId,countries:JSON.stringify(this.countries.map(e=>e.iso))},{headers:this.syncService.getBasicHeaders()}).then(e=>{200===e.status&&!1!==e.data.data?this.shippingServices=e.data.data:this.createNotificationInfo({message:this.$tc(e.data.message)}),this.selectedFeatures=[],this.selectedService=null,this.isLoading=!1})},async checkShippingFeatures(){return this.httpClient.post("/plc/shipping-services/features",{featureList:JSON.stringify(this.selectedFeatures)},{headers:this.syncService.getBasicHeaders()}).then(e=>{200===e.status&&!0===e.data.data?(this.responseMessage=e.data.message,this.saveShippingService()):this.createNotificationError({message:this.$tc(e.data.message)})})},saveShippingService(){let e=(e,t)=>e.filter(e=>e.thirdPartyID===t),t=e(this.shippingServices,this.selectedService)[0],a=[];this.selectedFeatures.forEach(n=>{let s=e(t.featureList,n)[0];a.push(s)});let n={shippingProduct:JSON.stringify({orderID:t.orderID,thirdPartyID:t.thirdPartyID,name:t.name}),customsInformation:t.customsInformation,featureList:JSON.stringify(a),displayName:this.displayName,countries:JSON.stringify(this.countries),salesChannelId:this.salesChannelId};return null!==this.entityId&&(n.id=this.entityId),this.httpClient.post("/plc/shipping-service/upsert",n,{headers:this.syncService.getBasicHeaders()}).then(e=>{200===e.status?(!0===e.data.data?this.createNotificationSuccess({message:this.$tc(e.data.message)}):this.createNotificationError({message:this.$tc(e.data.message)}),this.isLoading=!1,this.$emit("modal-save"),this.$emit("modal-close")):this.createNotificationError({message:this.$tc("plc.modal.saveError")}),this.isLoading=!1})},onChange(e){this.isLoading=!0,this.countries=e,this.updateAvailableServices(),this.isLoading=!1}}});let{Module:z}=Shopware;z.register("plc-shipping-service",{type:"plugin",name:"plc-shipping-service",title:"plc.menu.shippingService",description:"plc.menu.descriptionTextModule",color:"#ff3d58",position:990,snippets:{"de-DE":e,"en-GB":t},routes:{list:{component:"shipping-services-list",path:"list",meta:{parentPath:"sw.settings.index.plugins"}}},settingsItem:{group:"plugins",to:"plc.shipping.service.list",iconComponent:"post-logo-icon",backgroundEnabled:!0}}),a(348);let{Component:B,Mixin:q}=Shopware,{Criteria:P}=Shopware.Data;B.register("bulk-label-modal",{template:'{% block plc_bulk_label__modal %}\n    <sw-modal\n            class="plc-bulk-label-modal"\n            :title="$tc(\'plc.bulkLabel.modalTitle\')"\n            variant="large"\n            @modal-close="$emit(\'modal-close\')"\n    >\n        {% block plc_bulk_label__modal_body %}\n            <mt-loader v-if="isLoading && feature.isActive(\'v6.6.0.0\')"/>\n            <sw-loader v-if="isLoading && !feature.isActive(\'v6.6.0.0\')"/>\n            <template v-else>\n                <shipping-label-create-modal\n                        class="plc-shipping-label-modal"\n                        v-if="createLabelModal"\n                        :is-bulk="true"\n                        :order-id="currentOrderId"\n                        :bulk-order-data="bulkOrderData"\n                        @modal-save="saveCreateModal"\n                        @modal-close="closeCreateModal">\n                </shipping-label-create-modal>\n\n                <sw-entity-single-select\n                        v-model:value="newDeliveryState"\n                        entity="state_machine_state"\n                        :criteria="deliveryStateCriteria"\n                        :label="$tc(\'plc.bulkLabel.label.deliveryState\')"\n                        :placeholder="$tc(\'plc.bulkLabel.placeholder.deliveryState\')">\n                </sw-entity-single-select>\n\n                <template v-if="activeOrderList && activeOrderList.length > 0">\n                    <h3 class="datagrid-headline">{{ $tc(\'plc.bulkLabel.label.notCreatedLabels\') }}</h3>\n\n                    <sw-data-grid\n                            :dataSource="activeOrderList"\n                            :columns="orderColumns"\n                            :showSelection="false"\n                            :compactMode="true"\n                            :show-actions="true"\n                    >\n                        <template #column-targetCountry="{ item }">\n                            <span>{{ item.deliveries.first().shippingOrderAddress.country.translated.name ?? item.deliveries.first().shippingOrderAddress.country.name }}</span>\n                        </template>\n\n                        <template #column-deliveryState="{ item }">\n                            <span>{{ item.deliveries.first().stateMachineState.translated.name ?? item.deliveries.first().stateMachineState.name }}</span>\n                        </template>\n\n                        <template #column-savedLabel="{ item }">\n                            <div v-if="feature.isActive(\'v6.6.0.0\')">\n                                <mt-icon v-if="bulkOrderData && findBulkOrder(item.id)"\n                                         @modal-save="checkExistingLabelData(item.id)"\n                                         name="regular-checkmark-xs" small/>\n                                <mt-icon v-else name="regular-times-xs" small/>\n                            </div>\n                            <div v-else>\n                                <sw-icon v-if="bulkOrderData && findBulkOrder(item.id)"\n                                         @modal-save="checkExistingLabelData(item.id)"\n                                         name="regular-checkmark-xs" small/>\n                                <sw-icon v-else name="regular-times-xs" small/>\n                            </div>\n\n                        </template>\n\n                        <template #column-customsInformation="{ item }">\n                            <div v-if="feature.isActive(\'v6.6.0.0\')">\n                                <mt-icon v-if="bulkOrderData && checkCustomsData(item.id)"\n                                         @modal-save="checkCustomsData(item.id)"\n                                         name="regular-checkmark-xs" small/>\n                                <mt-icon v-else name="regular-times-xs" small/>\n                            </div>\n                            <div v-else>\n                                <sw-icon v-if="bulkOrderData && checkCustomsData(item.id)"\n                                         @modal-save="checkCustomsData(item.id)"\n                                         name="regular-checkmark-xs" small/>\n                                <sw-icon v-else name="regular-times-xs" small/>\n                            </div>\n\n                        </template>\n\n                        <template #actions="{ item }">\n                            <sw-context-menu-item\n                                    class="plc-bank-data-list__context-menu-edit-action"\n                                    @click="openCreateModal(item.id)"\n                            >\n                                {{ $tc(\'plc.bulkLabel.context-menu.createLabel\') }}\n                            </sw-context-menu-item>\n                        </template>\n                    </sw-data-grid>\n                </template>\n\n                <template v-if="successOrderList.length > 0">\n                    <h3 class="datagrid-headline">{{ $tc(\'plc.bulkLabel.label.createdLabels\') }}</h3>\n\n                    <sw-data-grid\n                            :dataSource="successOrderList"\n                            :columns="orderColumns"\n                            :showSelection="false"\n                            :compactMode="false"\n                            :show-actions="false"\n                    >\n                        <template #column-targetCountry="{ item }">\n                            <span>{{ item.deliveries[0].shippingOrderAddress.country.translated.name ?? item.deliveries.first().shippingOrderAddress.country.name }}</span>\n                        </template>\n\n                        <template #column-deliveryState="{ item }">\n                            <span>{{ item.deliveries[0].stateMachineState.translated.name ?? item.deliveries[0].stateMachineState.name }}</span>\n                        </template>\n\n                        <template #column-customsInformation="{ item }">\n                            <div v-if="feature.isActive(\'v6.6.0.0\')">\n                                <mt-icon\n                                        v-if="bulkOrderData && bulkOrderData[item.id] != null && bulkOrderData[item.id].customsData.packages != null"\n                                        name="regular-checkmark-xs" small/>\n                                <mt-icon v-else name="regular-times-xs" small/>\n                            </div>\n                            <div v-else>\n                                <sw-icon\n                                        v-if="bulkOrderData && bulkOrderData[item.id] != null && bulkOrderData[item.id].customsData.packages != null"\n                                        name="regular-checkmark-xs" small/>\n                                <sw-icon v-else name="regular-times-xs" small/>\n                            </div>\n\n                        </template>\n                    </sw-data-grid>\n                </template>\n\n            </template>\n\n        {% endblock %}\n\n        \n        {% block plc_bulk_label__modal_footer %}\n            <template #modal-footer>\n                {% block plc_shipping_label__modal_footer_select_labeltype %}\n                    <sw-single-select\n                            v-if="!isLoading"\n                            class="shipping-label__select-labelType"\n                            :options="getLabelTypeOptions"\n                            v-model:value="selectedLabelType"\n                            size="small"\n                            :disabled="successOrders.length > 0"\n                            name="shipping-label-labelType"\n                            :label="$tc(\'plc.order.postLabels.label.labelType\')"\n                            :placeholder="$tc(\'plc.order.postLabels.placeholder.labelType\')"\n                            validation="required"\n                            required\n                    />\n                {% endblock %}\n\n                {% block plc_bulk_label__modal_footer_save_button %}\n                    <sw-button v-if="activeOrderList.length > 0"\n                               variant="primary"\n                               size="small"\n                               :disabled="isLoading"\n                               @click="createBulkData"\n                    >\n                        {{ $tc(\'plc.modal.generate\') }}\n                    </sw-button>\n                    <sw-button v-if="successOrders.length > 0"\n                               variant="primary"\n                               size="small"\n                               :disabled="isLoading || !pdfDownload"\n                               @click="downloadZip"\n                    >\n                        {{ $tc(\'plc.modal.download\') }}\n                    </sw-button>\n                {% endblock %}\n            </template>\n        {% endblock %}\n    </sw-modal>\n{% endblock %}\n',snippets:{"de-DE":e,"en-GB":t},mixins:[q.getByName("notification")],inject:["systemConfigApiService","repositoryFactory","acl","feature"],data(){return{isLoading:!1,bulkOrderData:[],activeOrderList:[],newDeliveryState:null,createLabelModal:null,currentOrderId:null,selectedLabelType:"both",pdfDownload:!0,customsEntries:null,failedOrders:[],successOrders:[],successOrderList:[]}},props:{orderList:{type:Array,required:!0,default:null}},computed:{orderRepository(){return this.repositoryFactory.create("order")},orderColumns(){return[{property:"orderNumber",primary:!0,label:this.$tc("plc.bulkLabel.columns.orderNumber"),allowResize:!0},{property:"targetCountry",label:this.$tc("plc.bulkLabel.columns.targetCountry"),allowResize:!0},{property:"deliveryState",label:this.$tc("plc.bulkLabel.columns.deliveryState"),allowResize:!0},{property:"customsInformation",label:this.$tc("plc.bulkLabel.columns.customsInformation"),allowResize:!0},{property:"savedLabel",label:this.$tc("plc.bulkLabel.columns.savedLabel"),allowResize:!0}]},deliveryStateCriteria(){let e=new P(1,25);return e.addFilter(P.equals("stateMachine.technicalName","order_delivery.state")),e.addSorting(P.sort("name","ASC")),e},getLabelTypeOptions(){return[{value:"shipping_label",label:"Versandlabel"},{value:"return_label",label:"Retourenlabel"},{value:"both",label:"Versand- und Retourenlabel"}]}},created(){this.createdComponent()},methods:{createdComponent(){this.isLoading=!0,this.activeOrderList=this.orderList,this.syncService=Shopware.Service("syncService"),this.httpClient=this.syncService.httpClient,this.getPluginConfig(),this.isLoading=!1},async getPluginConfig(){this.pluginConfig=await this.systemConfigApiService.getValues("PostLabelCenter.config",this.salesChannelId),this.selectedLabelType=this.pluginConfig["PostLabelCenter.config.defaultLabelType"],this.pdfDownload=!this.pluginConfig["PostLabelCenter.config.onlyDataimport"]??!0},async getOrderList(e,t){let a=new P;a.setTerm(this.term),a.addFilter(P.equalsAny("id",e)),a.addAssociation("addresses.country"),a.addAssociation("billingAddress"),a.addAssociation("currency"),a.addAssociation("deliveries.shippingOrderAddress"),a.addAssociation("deliveries.stateMachineState");let n=await Promise.all([this.orderRepository.search(a)]);this[t]=n[0]},createBulkData(){if(null===this.selectedLabelType){this.createNotificationError({message:this.$tc("plc.bulkLabel.messages.missingFields")});return}this.isLoading=!0,this.createNotificationInfo({message:this.$tc("plc.bulkLabel.messages.creatingLabel")}),this.httpClient.post("/plc/bulk-shipment",{orders:JSON.stringify(this.activeOrderList),bulkOrderData:JSON.stringify(this.bulkOrderData),selectedLabelType:this.selectedLabelType,successOrders:JSON.stringify(this.successOrders),newDeliveryState:this.newDeliveryState},{headers:this.syncService.getBasicHeaders()}).then(e=>{if(200===e.status&&e.data){this.failedOrders=e.data.failedOrders,this.successOrders=e.data.successOrders;let t=this.successOrders.filter(function(e){return e.id}).map(function(e){return e.id});this.activeOrderList=this.activeOrderList.filter(e=>!t.includes(e.id)),this.failedOrders.length>0&&this.failedOrders.forEach(e=>{this.createNotificationError({message:this.$tc("plc.bulkLabel.messages.failedOrders",1,{orderNumber:e.orderNumber,message:e.errorMessage})})}),null!==this.newDeliveryState&&null!==e.data.failedTransitions&&this.createNotificationError({message:this.$tc("plc.bulkLabel.messages.failedTransitions",1,{orderNumbers:e.data.failedTransitions})}),t.length>0&&this.getOrderList(t,"successOrderList")}else this.createErrorNotification({message:this.$tc(e.data.message)});this.isLoading=!1})},openCreateModal(e){this.currentOrderId=e,this.createLabelModal=!0},saveCreateModal(e){if(this.isLoading=!0,e){let t=this.bulkOrderData.findIndex(t=>t.id===e.id);t>=0?this.bulkOrderData[t]=e:this.bulkOrderData.push(e)}if(this.activeOrderList.length>0){let e=this.activeOrderList.filter(function(e){return e.id}).map(function(e){return e.id});this.getOrderList(e,"activeOrderList")}if(this.successOrders.length>0){let e=this.successOrders.filter(function(e){return e.id}).map(function(e){return e.id});this.getOrderList(e,"successOrderList")}this.currentOrderId=null,this.createLabelModal=!1,this.isLoading=!1},closeCreateModal(){this.currentOrderId=null,this.createLabelModal=!1},checkCustomsData(e){let t=this.findBulkOrder(e);return!!t&&!!t.customsData&&0!==t.customsData.packages.length},findBulkOrder(e){if(0===this.bulkOrderData.length)return!1;let t=this.bulkOrderData.findIndex(t=>t.id===e);return t>=0&&!!this.bulkOrderData[t].data&&this.bulkOrderData[t].data},downloadZip(){this.isLoading=!0,this.createNotificationInfo({message:this.$tc("plc.bulkLabel.messages.downloadStartingSoon")}),this.httpClient.post("/plc/bulk-shipment/download",{successOrders:JSON.stringify(this.successOrders)},{headers:this.syncService.getBasicHeaders()}).then(e=>{if(200===e.status&&e.data&&e.data.download){let t=`data:application/zip;base64,${e.data.download}`,a=document.createElement("a");a.href=t,a.download=e.data.fileName,a.click()}else this.createNotificationInfo({message:this.$tc("plc.bulkLabel.messages.errorDownloading")})}),this.isLoading=!1}}}),a(290),a(197),a(494);let{Component:F,Mixin:j}=Shopware;F.register("merged-label-modal",{template:'{% block plc_merged_label__modal %}\n    <sw-modal\n            class="plc-merged-label-modal"\n            :title="$tc(\'plc.mergedLabel.modalTitle\')"\n            variant="large"\n            @modal-close="$emit(\'modal-close\')"\n    >\n        {% block plc_merged_label__modal_body %}\n            <mt-loader v-if="isLoading && feature.isActive(\'v6.6.0.0\')"/>\n            <sw-loader v-if="isLoading && !feature.isActive(\'v6.6.0.0\')"/>\n            <template v-else-if="!isLoading && initialOrderList && initialOrderList.length > 0">\n                <h3 class="datagrid-headline">{{ $tc(\'plc.mergedLabel.label.chosenOrders\') }}</h3>\n\n                <sw-data-grid\n                        :dataSource="initialOrderList"\n                        :columns="orderColumns"\n                        :showSelection="false"\n                        :compactMode="true"\n                        :show-actions="false">\n\n                    <template #column-orderDateTime="{ item }">\n                        <span>{{ formatDate(item.orderDateTime) }}</span>\n                    </template>\n                </sw-data-grid>\n            </template>\n\n            <template v-if="generatedOrderLabels && generatedOrderLabels.length > 0">\n                <h3 class="datagrid-headline">{{ $tc(\'plc.mergedLabel.label.generatedLabels\') }}</h3>\n\n                <sw-data-grid\n                        :dataSource="generatedOrderLabels"\n                        :columns="labelColumns"\n                        :showSelection="false"\n                        :compactMode="true"\n                        :show-actions="false">\n                </sw-data-grid>\n            </template>\n        {% endblock %}\n\n        \n        {% block plc_merged_label__modal_footer %}\n            <template #modal-footer>\n                {% block plc_merged_label__modal_footer_save_button %}\n                    <sw-button v-if="initialOrderList.length > 0"\n                               variant="primary"\n                               size="small"\n                               :disabled="isLoading"\n                               @click="downloadZip"\n                    >\n                        {{ $tc(\'plc.modal.generateAndDownload\') }}\n                    </sw-button>\n                {% endblock %}\n            </template>\n        {% endblock %}\n    </sw-modal>\n{% endblock %}',snippets:{"de-DE":e,"en-GB":t},mixins:[j.getByName("notification"),j.getByName("plc-helper")],inject:["repositoryFactory","acl","feature"],data(){return{isLoading:!0,initialOrderList:[],generatedOrderLabels:[]}},props:{orderList:{type:[Array,Object],required:!0,default:null}},computed:{orderRepository(){return this.repositoryFactory.create("order")},orderColumns(){return[{property:"orderNumber",primary:!0,label:this.$tc("plc.mergedLabel.list.orderNumber"),allowResize:!0},{property:"orderDateTime",label:this.$tc("plc.mergedLabel.list.orderDateTime"),allowResize:!0},{property:"deliveries[0].shippingOrderAddress.country.name",label:this.$tc("plc.mergedLabel.list.targetCountry"),allowResize:!0}]},labelColumns(){return[{property:"orderNumber",primary:!0,label:this.$tc("plc.mergedLabel.list.orderNumber"),allowResize:!0},{property:"labelTypes",label:this.$tc("plc.mergedLabel.list.labelTypes"),allowResize:!0}]}},created(){this.createdComponent()},methods:{createdComponent(){this.initialOrderList=this.orderList,this.syncService=Shopware.Service("syncService"),this.httpClient=this.syncService.httpClient,this.isLoading=!1},downloadZip(){this.createNotificationInfo({message:this.$tc("plc.mergedLabel.messages.downloadStartingSoon")}),this.isLoading=!0,this.httpClient.post("/plc/merged-label/download",{orders:JSON.stringify(this.initialOrderList)},{headers:this.syncService.getBasicHeaders()}).then(e=>{if(200===e.status&&e.data){if(null!==e.data.allOrders&&null!==e.data.download){this.generatedOrderLabels=e.data.allOrders;let t=`data:application/zip;base64,${e.data.download}`,a=document.createElement("a");a.href=t,a.download=e.data.filename,a.click()}else this.createNotificationInfo({message:this.$tc("plc.mergedLabel.messages.noLabelsFound")})}this.isLoading=!1})}}}),a(994);let{Mixin:V}=Shopware,{Criteria:H}=Shopware.Data;Shopware.Component.register("shipping-label-create-modal",{template:'\n\n{% block plc_shipping_label__modal %}\n    <sw-modal\n            class="plc-shipping-label-modal"\n            :title="modalTitle"\n            variant="large"\n            @modal-close="$emit(\'modal-close\')"\n    >\n        {% block plc_shipping_label__modal_body %}\n            <mt-loader v-if="isLoading && feature.isActive(\'v6.6.0.0\')"/>\n            <sw-loader v-if="isLoading && !feature.isActive(\'v6.6.0.0\')"/>\n            <div v-else>\n                <template>\n                    <sw-tabs position-identifier="shipping-label-create-modal">\n                        <sw-tabs-item\n                                name="shippingData"\n                                :active="activeTab === \'shippingData\'"\n                                @click="activeTab = \'shippingData\'">\n                            {{ $tc(\'plc.order.postLabels.label.shippingData\') }}\n                        </sw-tabs-item>\n                        <sw-tabs-item\n                                name="senderData"\n                                @click="activeTab = \'senderData\'"\n                                :active="activeTab === \'senderData\'">\n                            {{ $tc(\'plc.order.postLabels.label.senderData\') }}\n                        </sw-tabs-item>\n                        <sw-tabs-item\n                                name="customsData"\n                                @click="activeTab = \'customsData\'"\n                                :active="activeTab === \'customsData\'">\n                            {{ $tc(\'plc.order.postLabels.label.customsData\') }}\n                        </sw-tabs-item>\n                    </sw-tabs>\n                </template>\n\n                <template>\n                    <div v-if="activeTab === \'shippingData\' && deliveryAddress">\n                        <template>\n                            <div class="shipping-data-container">\n                                <div class="grid-wrapper">\n                                    <div class="grid-headline">\n                                        {{ $tc(\'plc.order.postLabels.label.recipientData\') }}\n                                    </div>\n                                    <div class="grid-row">\n                                        <sw-text-field\n                                                class="plc-shipping-label-modal_email"\n                                                size="small"\n                                                v-model:value="orderData.orderCustomer.email"\n                                                name="post-label-email"\n                                                :label="$tc(\'plc.order.postLabels.label.email\')"\n                                                :placeholder="$tc(\'plc.order.postLabels.placeholder.email\')"\n                                                validation="required"\n                                                required\n                                        />\n                                        <sw-entity-single-select\n                                                v-model:value="deliveryAddress.shippingOrderAddress.salutationId"\n                                                class="post-label__salutation-select"\n                                                entity="salutation"\n                                                name="post-label-salutation"\n                                                :label="$tc(\'plc.order.postLabels.label.salutation\')"\n                                                :placeholder="$tc(\'plc.order.postLabels.placeholder.salutation\')"\n                                                :criteria="salutationCriteria"\n                                                label-property="displayName"\n                                                show-clearable-button\n                                                validation="required"\n                                                size="small"\n                                                required\n                                        />\n                                    </div>\n                                    <div class="grid-row">\n                                        <sw-text-field\n                                                class="plc-shipping-label-modal_firstName"\n                                                size="small"\n                                                v-model:value="deliveryAddress.shippingOrderAddress.firstName"\n                                                name="post-label-firstName"\n                                                :label="$tc(\'plc.order.postLabels.label.firstName\')"\n                                                :placeholder="$tc(\'plc.order.postLabels.placeholder.firstName\')"\n                                                validation="required"\n                                                required\n                                        />\n\n                                        <sw-text-field\n                                                class="plc-shipping-label-modal_lastName"\n                                                size="small"\n                                                v-model:value="deliveryAddress.shippingOrderAddress.lastName"\n                                                name="post-label-lastName"\n                                                :label="$tc(\'plc.order.postLabels.label.lastName\')"\n                                                :placeholder="$tc(\'plc.order.postLabels.placeholder.lastName\')"\n                                                validation="required"\n                                                required\n                                        />\n                                    </div>\n\n                                    <div class="grid-row">\n                                        <sw-text-field\n                                                class="plc-shipping-label-modal_company"\n                                                size="small"\n                                                v-model:value="deliveryAddress.shippingOrderAddress.company"\n                                                name="post-label-company"\n                                                :label="$tc(\'plc.order.postLabels.label.company\')"\n                                                :placeholder="$tc(\'plc.order.postLabels.placeholder.company\')"\n                                        />\n\n                                        <sw-text-field\n                                                class="plc-shipping-label-modal_department"\n                                                size="small"\n                                                v-model:value="deliveryAddress.shippingOrderAddress.department"\n                                                name="post-label-department"\n                                                :label="$tc(\'plc.order.postLabels.label.department\')"\n                                                :placeholder="$tc(\'plc.order.postLabels.placeholder.department\')"\n                                        />\n                                    </div>\n                                    <div class="grid-row">\n                                        <sw-text-field\n                                                class="plc-shipping-label-modal_street"\n                                                size="small"\n                                                v-model:value="deliveryAddress.shippingOrderAddress.street"\n                                                name="post-label-street"\n                                                :label="$tc(\'plc.order.postLabels.label.street\')"\n                                                :placeholder="$tc(\'plc.order.postLabels.placeholder.street\')"\n                                                validation="required"\n                                                maxlength="50"\n                                                required\n                                        />\n\n                                        <sw-text-field\n                                                class="plc-shipping-label-modal_city"\n                                                size="small"\n                                                v-model:value="deliveryAddress.shippingOrderAddress.city"\n                                                name="post-label-city"\n                                                :label="$tc(\'plc.order.postLabels.label.city\')"\n                                                :placeholder="$tc(\'plc.order.postLabels.placeholder.city\')"\n                                                validation="required"\n                                                required\n                                        />\n                                    </div>\n                                    <div class="grid-row">\n                                        <sw-text-field\n                                                class="plc-shipping-label-modal_zipcode"\n                                                size="small"\n                                                v-model:value="deliveryAddress.shippingOrderAddress.zipcode"\n                                                name="post-label-zipcode"\n                                                :label="$tc(\'plc.order.postLabels.label.zipcode\')"\n                                                :placeholder="$tc(\'plc.order.postLabels.placeholder.zipcode\')"\n                                                validation="required"\n                                                required\n                                        />\n\n                                        <sw-entity-single-select\n                                                v-model:value="deliveryAddress.shippingOrderAddress.countryId"\n                                                class="post-label__country-select"\n                                                size="small"\n                                                entity="country"\n                                                name="post-label-country"\n                                                :label="$tc(\'plc.order.postLabels.label.country\')"\n                                                :placeholder="$tc(\'plc.order.postLabels.placeholder.country\')"\n                                                :criteria="countryCriteria"\n                                                label-property="name"\n                                                show-clearable-button\n                                                validation="required"\n                                                required\n                                        />\n                                    </div>\n                                    <div class="grid-row">\n                                        <sw-text-field\n                                                class="plc-shipping-label-modal_additionalAddressLine1"\n                                                size="small"\n                                                v-model:value="deliveryAddress.shippingOrderAddress.additionalAddressLine1"\n                                                name="post-label-additionalAddressLine1"\n                                                :label="$tc(\'plc.order.postLabels.label.additionalAddressLine1\')"\n                                                :placeholder="$tc(\'plc.order.postLabels.placeholder.additionalAddressLine1\')"\n                                        />\n\n                                        <sw-text-field\n                                                class="plc-shipping-label-modal_additionalAddressLine2"\n                                                size="small"\n                                                v-model:value="deliveryAddress.shippingOrderAddress.additionalAddressLine2"\n                                                name="post-label-additionalAddressLine2"\n                                                :label="$tc(\'plc.order.postLabels.label.additionalAddressLine2\')"\n                                                :placeholder="$tc(\'plc.order.postLabels.placeholder.additionalAddressLine2\')"\n                                        />\n                                    </div>\n                                    <div class="grid-row">\n                                        <sw-text-field\n                                                class="plc-shipping-label-modal_phone"\n                                                size="small"\n                                                v-model:value="deliveryAddress.shippingOrderAddress.phone"\n                                                name="post-label-phone"\n                                                :helpText="$tc(\'plc.order.postLabels.helpText.phone\')"\n                                                :label="$tc(\'plc.order.postLabels.label.phone\')"\n                                                :placeholder="$tc(\'plc.order.postLabels.placeholder.phone\')"\n                                                :required="getThirdPartyId()"\n                                        />\n                                    </div>\n                                    <hr>\n                                    <div class="grid-headline">\n                                        {{ $tc(\'plc.order.postLabels.label.orderData\') }}\n                                    </div>\n                                    <div class="grid-row">\n                                        <sw-number-field\n                                                class="plc-shipping-label-modal_amountTotal"\n                                                size="small"\n                                                v-model:value="orderData.amountTotal"\n                                                name="post-label-amountTotal"\n                                                :label="$tc(\'plc.order.postLabels.label.amountTotal\')"\n                                                :placeholder="$tc(\'plc.order.postLabels.placeholder.amountTotal\')"\n                                                validation="required"\n                                                required\n                                                numberType="float"\n                                        />\n\n                                        <sw-entity-single-select\n                                                v-model:value="orderData.currencyId"\n                                                class="post-label__currency-select"\n                                                size="small"\n                                                entity="currency"\n                                                name="post-label-currencyId"\n                                                :label="$tc(\'plc.order.postLabels.label.currency\')"\n                                                :placeholder="$tc(\'plc.order.postLabels.placeholder.currency\')"\n                                                :criteria="currencyCriteria"\n                                                label-property="name"\n                                                show-clearable-button\n                                                validation="required"\n                                                required\n                                        />\n                                    </div>\n                                    <hr>\n                                    <div class="grid-headline">\n                                        {{ $tc(\'plc.order.postLabels.label.packageData\') }}\n                                    </div>\n                                    <div class="grid-row full-width">\n                                        <sw-entity-single-select\n                                                v-if="feature.isActive(\'v6.6.0.0\') && enableShippingProductChange"\n                                                v-model:value="shippingProductId"\n                                                class="plc-shipping-label-modal_shippingService"\n                                                entity="plc_shipping_services"\n                                                name="shippingService"\n                                                :helpText="$tc(\'plc.order.postLabels.helpText.shippingServicesInfo\')"\n                                                :label="$tc(\'plc.order.postLabels.label.shippingService\')"\n                                                :placeholder="$tc(\'plc.order.postLabels.placeholder.shippingService\')"\n                                                :criteria="shippingServiceCriteria"\n                                                label-property="displayName"\n                                                validation="required"\n                                                size="small"\n                                                required\n                                                @update:value="getPlcShippingServiceData"\n                                                show-clearable-button\n                                        />\n\n                                        <sw-entity-single-select\n                                                v-if="!feature.isActive(\'v6.6.0.0\') && enableShippingProductChange"\n                                                v-model:value="shippingProductId"\n                                                class="plc-shipping-label-modal_shippingService"\n                                                entity="plc_shipping_services"\n                                                name="shippingService"\n                                                :helpText="$tc(\'plc.order.postLabels.helpText.shippingServicesInfo\')"\n                                                :label="$tc(\'plc.order.postLabels.label.shippingService\')"\n                                                :placeholder="$tc(\'plc.order.postLabels.placeholder.shippingService\')"\n                                                :criteria="shippingServiceCriteria"\n                                                label-property="displayName"\n                                                validation="required"\n                                                size="small"\n                                                required\n                                                @change="getPlcShippingServiceData"\n                                                show-clearable-button\n                                        />\n\n                                        <sw-text-field\n                                                v-if="shipperAddress && shippingService && !enableShippingProductChange"\n                                                class="plc-shipping-label-modal_shippingService"\n                                                size="small"\n                                                :label="$tc(\'plc.order.postLabels.label.shippingService\')"\n                                                :placeholder="$tc(\'plc.order.postLabels.placeholder.shippingService\')"\n                                                validation="required"\n                                                :helpText="$tc(\'plc.order.postLabels.helpText.shippingServicesInfo\')"\n                                                disabled="disabled"\n                                                v-model:value="shippingService.displayName"\n                                                required\n                                        />\n                                    </div>\n                                    <div class="grid-row full-width">\n                                        <sw-data-grid\n                                                identifier="data-grid-items"\n                                                class="line-item-data-grid"\n                                                :showSelection="false"\n                                                :compactMode="true"\n                                                :allowInlineEdit="true"\n                                                :allowColumnEdit="true"\n                                                :dataSource="lineItems"\n                                                :show-actions="true"\n                                                :columns="lineItemColumns">\n\n                                            <template #column-packageNumber="{ item, currentValue, isInlineEdit }">\n                                                <sw-number-field\n                                                        v-if="isInlineEdit"\n                                                        numberType="int"\n                                                        :min="1" :max="null" :digits="0"\n                                                        v-model:value="item.packageNumber"\n                                                />\n                                                <span v-else>{{ item.packageNumber }}</span>\n                                            </template>\n\n                                            <template #column-hsTariffNumber="{ item, isInlineEdit }">\n                                                <sw-text-field\n                                                        v-if="isInlineEdit"\n                                                        v-model:value="item.hsTariffNumber"\n                                                        key="string"\n                                                        minlength="6"\n                                                        maxlength="10"\n                                                />\n                                                <span v-else>{{ item.hsTariffNumber }}</span>\n                                            </template>\n\n                                            <template #column-customsOptions="{ item, isInlineEdit }">\n                                                <sw-single-select\n                                                        v-if="isInlineEdit"\n                                                        v-model:value="item.customsOptions"\n                                                        :options="getCustomsOptions"\n                                                ></sw-single-select>\n                                                <span v-else>{{ item.customsOptions != null ? displayOptionValue(item.customsOptions, customsOptions) : "" }}</span>\n                                            </template>\n\n                                            <template #column-units="{ item, isInlineEdit }">\n                                                <sw-single-select\n                                                        v-if="isInlineEdit"\n                                                        v-model:value="item.units"\n                                                        :options="getUnitOptions"\n                                                ></sw-single-select>\n                                                <span v-else>{{ item.units != null ? displayOptionValue(item.units, unitOptions) : "" }}</span>\n                                            </template>\n\n                                            <template #column-countryOfOrigin="{ item, isInlineEdit }">\n                                                <sw-entity-single-select\n                                                        v-model:value="item.countryOfOrigin"\n                                                        class="post-label__country-select"\n                                                        size="small"\n                                                        entity="country"\n                                                        name="post-label-country"\n                                                        :placeholder="$tc(\'plc.order.postLabels.placeholder.countryId\')"\n                                                        :criteria="countryCriteria"\n                                                        label-property="name"\n                                                        show-clearable-button\n                                                        validation="required"\n                                                        required\n                                                />\n                                            </template>\n\n                                            <template #column-unitPrice="{ item }">\n                                                <span>{{ item.unitPrice }}</span>\n                                            </template>\n\n                                            <template #actions="{ item }">\n                                                \n                                                <sw-context-menu-item @click="duplicateEntry(item)"\n                                                                      v-if="item.quantity > 1">\n                                                    {{ $tc(\'plc.order.postLabels.label.duplicate\') }}\n                                                </sw-context-menu-item>\n\n                                                <sw-context-menu-item\n                                                        variant="danger"\n                                                        @click="onEntryDelete(item)">\n                                                    {{ $tc(\'sw-product.variations.generatedListContextMenuDelete\') }}\n                                                </sw-context-menu-item>\n                                            </template>\n\n                                            <template #customSettings>\n                                                <sw-help-text\n                                                        :text="$tc(\'plc.order.postLabels.helpText.customsDataLineItems\')"\n                                                        :width="200" tooltipPosition="left" :showDelay="100"\n                                                        :hideDelay="100">\n                                                </sw-help-text>\n                                            </template>\n                                        </sw-data-grid>\n                                    </div>\n                                </div>\n                            </div>\n                        </template>\n                    </div>\n                    <div v-if="activeTab === \'senderData\'">\n                        <template>\n                            <div class="sender-data-container">\n                                <div class="grid-wrapper">\n                                    <div class="grid-headline">\n                                        {{ $tc(\'plc.order.postLabels.label.senderAddress\') }}\n                                    </div>\n                                    <div class="grid-row">\n                                        <sw-entity-single-select\n                                                v-model:value="shipperAddressId"\n                                                class="shipper_address-select"\n                                                entity="plc_address_data"\n                                                name="shipperAddress"\n                                                :label="$tc(\'plc.order.postLabels.label.shipperAddress\')"\n                                                :placeholder="$tc(\'plc.order.postLabels.placeholder.shipperAddress\')"\n                                                :criteria="shipperAddressesCriteria"\n                                                label-property="displayName"\n                                                validation="required"\n                                                size="small"\n                                                required\n                                                show-clearable-button\n                                                @update:value="getShippingAddress"\n                                        />\n                                        <sw-entity-single-select\n                                                v-if="shipperAddress"\n                                                v-model:value="shipperAddress.salutationId"\n                                                class="plc-shipping-label-modal_shippingService"\n                                                entity="salutation"\n                                                name="post-label-salutation"\n                                                :label="$tc(\'plc.order.postLabels.label.salutation\')"\n                                                :placeholder="$tc(\'plc.order.postLabels.placeholder.salutation\')"\n                                                :criteria="salutationCriteria"\n                                                label-property="displayName"\n                                                show-clearable-button\n                                                validation="required"\n                                                size="small"\n                                                required\n                                        />\n                                    </div>\n                                    <div v-if="shipperAddress">\n                                        <div class="grid-row">\n                                            <sw-text-field\n                                                    v-if="shipperAddress"\n                                                    class="plc-shipping-label-modal_shippingService"\n                                                    size="small"\n                                                    v-model:value="shipperAddress.eoriNumber"\n                                                    :label="$tc(\'plc.order.postLabels.label.eoriNumber\')"\n                                                    :placeholder="$tc(\'plc.order.postLabels.placeholder.eoriNumber\')"\n                                            />\n                                            <sw-text-field\n                                                    v-if="shipperAddress"\n                                                    class="plc-shipping-label-modal_shippingService"\n                                                    size="small"\n                                                    v-model:value="shipperAddress.phoneNumber"\n                                                    :label="$tc(\'plc.order.postLabels.label.phoneNumber\')"\n                                                    :placeholder="$tc(\'plc.order.postLabels.placeholder.phoneNumber\')"\n                                                    validation="required"\n                                                    required\n                                            />\n                                        </div>\n                                        <div class="grid-row">\n                                            <sw-text-field\n                                                    v-if="shipperAddress"\n                                                    class="plc-shipping-label-modal_shippingService"\n                                                    size="small"\n                                                    v-model:value="shipperAddress.company"\n                                                    :label="$tc(\'plc.order.postLabels.label.company\')"\n                                                    :placeholder="$tc(\'plc.order.postLabels.placeholder.company\')"\n                                            />\n                                            <sw-text-field\n                                                    v-if="shipperAddress"\n                                                    class="plc-shipping-label-modal_shippingService"\n                                                    size="small"\n                                                    v-model:value="shipperAddress.department"\n                                                    :label="$tc(\'plc.order.postLabels.label.department\')"\n                                                    :placeholder="$tc(\'plc.order.postLabels.placeholder.department\')"\n                                            />\n                                        </div>\n                                        <div class="grid-row">\n                                            <sw-text-field\n                                                    v-if="shipperAddress"\n                                                    class="plc-shipping-label-modal_shippingService"\n                                                    size="small"\n                                                    v-model:value="shipperAddress.firstName"\n                                                    :label="$tc(\'plc.order.postLabels.label.firstName\')"\n                                                    :placeholder="$tc(\'plc.order.postLabels.placeholder.firstName\')"\n                                                    validation="required"\n                                                    required\n                                            />\n                                            <sw-text-field\n                                                    v-if="shipperAddress"\n                                                    class="plc-shipping-label-modal_shippingService"\n                                                    size="small"\n                                                    v-model:value="shipperAddress.lastName"\n                                                    :label="$tc(\'plc.order.postLabels.label.lastName\')"\n                                                    :placeholder="$tc(\'plc.order.postLabels.placeholder.lastName\')"\n                                                    validation="required"\n                                                    required\n                                            />\n                                        </div>\n                                        <div class="grid-row">\n                                            <sw-text-field\n                                                    v-if="shipperAddress"\n                                                    class="plc-shipping-label-modal_shippingService"\n                                                    size="small"\n                                                    v-model:value="shipperAddress.street"\n                                                    :label="$tc(\'plc.order.postLabels.label.street\')"\n                                                    :placeholder="$tc(\'plc.order.postLabels.placeholder.street\')"\n                                                    validation="required"\n                                                    required\n                                            />\n                                            <sw-text-field\n                                                    v-if="shipperAddress"\n                                                    class="plc-shipping-label-modal_shippingService"\n                                                    size="small"\n                                                    v-model:value="shipperAddress.city"\n                                                    :label="$tc(\'plc.order.postLabels.label.city\')"\n                                                    :placeholder="$tc(\'plc.order.postLabels.placeholder.city\')"\n                                                    validation="required"\n                                                    required\n                                            />\n                                        </div>\n                                        <div class="grid-row">\n                                            <sw-text-field\n                                                    v-if="shipperAddress"\n                                                    class="plc-shipping-label-modal_shippingService"\n                                                    size="small"\n                                                    v-model:value="shipperAddress.zipcode"\n                                                    :label="$tc(\'plc.order.postLabels.label.zipcode\')"\n                                                    :placeholder="$tc(\'plc.order.postLabels.placeholder.zipcode\')"\n                                                    validation="required"\n                                                    required\n                                            />\n                                            <sw-entity-single-select\n                                                    v-if="shipperAddress"\n                                                    v-model:value="shipperAddress.countryId"\n                                                    class="plc-shipping-label-modal_shippingService"\n                                                    size="small"\n                                                    entity="country"\n                                                    name="post-label-country"\n                                                    :label="$tc(\'plc.order.postLabels.label.countryId\')"\n                                                    :placeholder="$tc(\'plc.order.postLabels.placeholder.countryId\')"\n                                                    :criteria="countryCriteria"\n                                                    label-property="name"\n                                                    show-clearable-button\n                                                    validation="required"\n                                                    @update:value="getCountryData(shipperAddress)"\n                                                    required\n                                            />\n                                        </div>\n                                    </div>\n                                    <div class="grid-headline">\n                                        {{ $tc(\'plc.order.postLabels.label.bankData\') }}\n                                    </div>\n                                    <div class="grid-row">\n                                        <sw-entity-single-select\n                                                v-model:value="bankDataId"\n                                                class="shipping-service__sales--select"\n                                                entity="plc_bank_data"\n                                                :label="$tc(\'plc.order.postLabels.label.bankData\')"\n                                                :placeholder="$tc(\'plc.order.postLabels.placeholder.bankData\')"\n                                                :criteria="bankDataCriteria"\n                                                label-property="displayName"\n                                                validation="required"\n                                                size="small"\n                                                @update:value="getBankData"\n                                        />\n                                        <sw-text-field\n                                                v-if="bankData"\n                                                class="plc-shipping-label-modal_shippingService"\n                                                size="small"\n                                                v-model:value="bankData.accountHolder"\n                                                :label="$tc(\'plc.order.postLabels.label.accountHolder\')"\n                                                :placeholder="$tc(\'plc.order.postLabels.placeholder.accountHolder\')"\n                                        />\n                                    </div>\n                                    <div v-if="bankData">\n                                        <div class="grid-row">\n                                            <sw-text-field\n                                                    v-if="bankData"\n                                                    class="plc-shipping-label-modal_shippingService"\n                                                    size="small"\n                                                    :isInvalid="!isValidIban(bankData.iban)"\n                                                    v-model:value="bankData.iban"\n                                                    :label="$tc(\'plc.order.postLabels.label.iban\')"\n                                                    :placeholder="$tc(\'plc.order.postLabels.placeholder.iban\')"\n                                                    @keyup="isValidIban"\n                                                    validation="required"\n                                                    required\n                                            />\n                                            <sw-text-field\n                                                    v-if="bankData"\n                                                    class="plc-shipping-label-modal_shippingService"\n                                                    size="small"\n                                                    v-model:value="bankData.bic"\n                                                    :label="$tc(\'plc.order.postLabels.label.bic\')"\n                                                    :placeholder="$tc(\'plc.order.postLabels.placeholder.bic\')"\n                                            />\n                                        </div>\n                                    </div>\n                                    <div class="grid-headline">\n                                        {{ $tc(\'plc.order.postLabels.label.returnAddress\') }}\n                                    </div>\n                                    <div class="grid-row">\n                                        <sw-entity-single-select\n                                                v-model:value="returnAddressId"\n                                                class="shipping-service__sales-channel-select"\n                                                entity="plc_address_data"\n                                                :label="$tc(\'plc.order.postLabels.label.returnAddress\')"\n                                                :placeholder="$tc(\'plc.order.postLabels.placeholder.returnAddress\')"\n                                                :criteria="returnAddressesCriteria"\n                                                label-property="displayName"\n                                                validation="required"\n                                                @update:value="getReturnAddress"\n                                                size="small"\n                                                required\n                                        />\n                                        <sw-text-field\n                                                v-if="returnAddress"\n                                                class="plc-shipping-label-modal_shippingService"\n                                                size="small"\n                                                v-model:value="returnAddress.street"\n                                                name="post-label-shippingService"\n                                                :label="$tc(\'plc.order.postLabels.label.street\')"\n                                                :placeholder="$tc(\'plc.order.postLabels.placeholder.street\')"\n                                                validation="required"\n                                                required\n                                        />\n                                    </div>\n                                    <div v-if="returnAddress">\n                                        <div class="grid-row">\n                                            <sw-text-field\n                                                    v-if="returnAddress"\n                                                    class="plc-shipping-label-modal_shippingService"\n                                                    size="small"\n                                                    v-model:value="returnAddress.eoriNumber"\n                                                    :label="$tc(\'plc.order.postLabels.label.eoriNumber\')"\n                                                    :placeholder="$tc(\'plc.order.postLabels.placeholder.eoriNumber\')"\n                                            />\n                                            <sw-text-field\n                                                    v-if="returnAddress"\n                                                    class="plc-shipping-label-modal_shippingService"\n                                                    size="small"\n                                                    v-model:value="returnAddress.phoneNumber"\n                                                    :label="$tc(\'plc.order.postLabels.label.phoneNumber\')"\n                                                    :placeholder="$tc(\'plc.order.postLabels.placeholder.phoneNumber\')"\n                                                    validation="required"\n                                                    required\n                                            />\n                                        </div>\n                                        <div class="grid-row">\n                                            <sw-text-field\n                                                    v-if="returnAddress"\n                                                    class="plc-shipping-label-modal_shippingService"\n                                                    size="small"\n                                                    v-model:value="returnAddress.company"\n                                                    :label="$tc(\'plc.order.postLabels.label.company\')"\n                                                    :placeholder="$tc(\'plc.order.postLabels.placeholder.company\')"\n                                            />\n                                            <sw-text-field\n                                                    v-if="returnAddress"\n                                                    class="plc-shipping-label-modal_shippingService"\n                                                    size="small"\n                                                    v-model:value="returnAddress.department"\n                                                    :label="$tc(\'plc.order.postLabels.label.department\')"\n                                                    :placeholder="$tc(\'plc.order.postLabels.placeholder.department\')"\n                                            />\n                                        </div>\n                                        <div class="grid-row">\n                                            <sw-text-field\n                                                    v-if="returnAddress"\n                                                    class="plc-shipping-label-modal_shippingService"\n                                                    size="small"\n                                                    v-model:value="returnAddress.firstName"\n                                                    :label="$tc(\'plc.order.postLabels.label.firstName\')"\n                                                    :placeholder="$tc(\'plc.order.postLabels.placeholder.firstName\')"\n                                                    validation="required"\n                                                    required\n                                            />\n                                            <sw-text-field\n                                                    v-if="returnAddress"\n                                                    class="plc-shipping-label-modal_shippingService"\n                                                    size="small"\n                                                    v-model:value="returnAddress.lastName"\n                                                    :label="$tc(\'plc.order.postLabels.label.lastName\')"\n                                                    :placeholder="$tc(\'plc.order.postLabels.placeholder.lastName\')"\n                                                    validation="required"\n                                                    required\n                                            />\n                                        </div>\n                                        <div class="grid-row">\n                                            <sw-text-field\n                                                    v-if="returnAddress"\n                                                    class="plc-shipping-label-modal_shippingService"\n                                                    size="small"\n                                                    v-model:value="returnAddress.street"\n                                                    :label="$tc(\'plc.order.postLabels.label.street\')"\n                                                    :placeholder="$tc(\'plc.order.postLabels.placeholder.street\')"\n                                                    validation="required"\n                                                    required\n                                            />\n                                            <sw-text-field\n                                                    v-if="returnAddress"\n                                                    class="plc-shipping-label-modal_shippingService"\n                                                    size="small"\n                                                    v-model:value="returnAddress.city"\n                                                    :label="$tc(\'plc.order.postLabels.label.city\')"\n                                                    :placeholder="$tc(\'plc.order.postLabels.placeholder.city\')"\n                                                    validation="required"\n                                                    required\n                                            />\n                                        </div>\n                                        <div class="grid-row">\n                                            <sw-text-field\n                                                    v-if="returnAddress"\n                                                    class="plc-shipping-label-modal_shippingService"\n                                                    size="small"\n                                                    v-model:value="returnAddress.zipcode"\n                                                    :label="$tc(\'plc.order.postLabels.label.zipcode\')"\n                                                    :placeholder="$tc(\'plc.order.postLabels.placeholder.zipcode\')"\n                                                    validation="required"\n                                                    required\n                                            />\n                                            <sw-entity-single-select\n                                                    v-if="returnAddress"\n                                                    v-model:value="returnAddress.countryId"\n                                                    class="plc-shipping-label-modal_shippingService"\n                                                    size="small"\n                                                    entity="country"\n                                                    name="post-label-country"\n                                                    :label="$tc(\'plc.order.postLabels.label.countryId\')"\n                                                    :placeholder="$tc(\'plc.order.postLabels.placeholder.countryId\')"\n                                                    :criteria="countryCriteria"\n                                                    label-property="name"\n                                                    show-clearable-button\n                                                    validation="required"\n                                                    @update:value="getCountryData(returnAddress)"\n                                                    required\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n\n                        </template>\n                    </div>\n\n                    <div v-if="activeTab === \'customsData\'">\n                        <template>\n                            <div class="customs-container">\n                                <div class="grid-wrapper">\n                                    <div class="grid-row full-width">\n                                        <sw-textarea-field\n                                                type="textarea"\n                                                v-model:value="customsData.description"\n                                                :label="$tc(\'plc.order.postLabels.label.customsDescription\')"\n                                                :placeholder="$tc(\'plc.order.postLabels.placeholder.customsDescription\')"\n                                        />\n                                    </div>\n                                    <div class="grid-row">\n                                        <sw-single-select\n                                                :options="getReturnOptions"\n                                                size="small"\n                                                v-model:value="customsData.returnOption"\n                                                :label="$tc(\'plc.order.postLabels.label.returnOptions\')"\n                                                :placeholder="$tc(\'plc.order.postLabels.placeholder.returnOptions\')"\n                                                validation="required"\n                                        />\n                                        <sw-single-select\n                                                :options="getReturnWays"\n                                                size="small"\n                                                v-model:value="customsData.shippingType"\n                                                :label="$tc(\'plc.order.postLabels.label.returnWays\')"\n                                                :placeholder="$tc(\'plc.order.postLabels.placeholder.returnWays\')"\n                                                validation="required"\n                                        />\n                                    </div>\n                                    <div class="grid-row full-width">\n                                        <sw-data-grid\n                                                :columns="customsColumns"\n                                                :showSelection="false"\n                                                :dataSource="customsData.packages"\n                                                :compactMode="true"\n                                                :allowInlineEdit="true"\n                                                :allowColumnEdit="true"\n                                                :show-actions="true"\n                                        >\n                                            <template #column-documentType="{ item, isInlineEdit }">\n                                                <sw-single-select\n                                                        v-if="isInlineEdit"\n                                                        v-model:value="item.documentType"\n                                                        :options="getShipmentDocumentEntries"\n                                                ></sw-single-select>\n                                                <span v-else>{{ item.documentType != null ? displayOptionValue(item.documentType, shipmentDocumentEntries) : "" }}</span>\n                                            </template>\n\n                                            <template #customSettings>\n                                                <sw-button @click="addCustomsColumn" variant="primary" :square="true"\n                                                           :isLoading="false">\n                                                    <mt-icon v-if="feature.isActive(\'v6.6.0.0\')"\n                                                             name="regular-plus-circle-s" small/>\n                                                    <sw-icon v-else name="regular-plus-circle-s" small/>\n                                                </sw-button>\n                                            </template>\n\n                                            <template #actions="{ item }">\n                                                <sw-context-menu-item\n                                                        variant="danger"\n                                                        @click="onDeletePackage(item)">\n                                                    {{ $tc(\'sw-product.variations.generatedListContextMenuDelete\') }}\n                                                </sw-context-menu-item>\n                                            </template>\n                                        </sw-data-grid>\n                                    </div>\n                                </div>\n                            </div>\n\n                        </template>\n                    </div>\n                </template>\n            </div>\n        {% endblock %}\n\n        \n        {% block plc_shipping_label__modal_footer %}\n            <template #modal-footer>\n                {% block plc_shipping_label__modal_footer_select_labeltype %}\n                    <sw-single-select\n                            v-if="!isLoading && !isBulk"\n                            class="shipping-label__select-labelType"\n                            :options="getLabelTypeOptions"\n                            v-model:value="selectedLabelType"\n                            size="small"\n                            name="shipping-label-labelType"\n                            :label="$tc(\'plc.order.postLabels.label.labelType\')"\n                            :placeholder="$tc(\'plc.order.postLabels.placeholder.labelType\')"\n                            validation="required"\n                    />\n                {% endblock %}\n\n                {% block plc_shipping_label__modal_footer_save_button %}\n                    <sw-button\n                            v-if="isBulk"\n                            variant="primary"\n                            size="small"\n                            @click="saveShippingLabelData"\n                            :disabled="!deliveryAddress || !returnAddress || !shipperAddress || !shippingService || !lineItems || !orderData || !bankData || isLoading"\n                    >\n                        {{ $tc(\'plc.bulkLabel.label.saveLabel\') }}\n                    </sw-button>\n                    <sw-button\n                            v-else\n                            variant="primary"\n                            size="small"\n                            @click="createShippingLabel"\n                            :disabled="!deliveryAddress || !selectedLabelType || !returnAddress || !shipperAddress || !shippingService || !lineItems || !orderData || isLoading || !isValidIban()"\n                    >\n                        {{ $tc(\'plc.modal.createLabel\') }}\n                    </sw-button>\n                {% endblock %}\n            </template>\n        {% endblock %}\n    </sw-modal>\n{% endblock %}\n',snippets:{"de-DE":e,"en-GB":t},mixins:[V.getByName("notification"),V.getByName("plc-helper")],inject:["systemConfigApiService","repositoryFactory","acl","feature"],data(){return{isLoading:!0,deliveryAddress:null,returnAddress:null,shipperAddress:null,shippingService:null,lineItems:[],customsData:{description:null,returnOption:null,shippingType:null,packages:[]},orderData:[],selectedLabelType:"both",bankData:null,shipperAddressId:null,returnAddressId:null,customsOptions:[],countryOptions:[],documentTypes:[],countryList:null,unitOptions:[],returnOptions:[],returnWays:[],shipmentDocumentEntries:[],defaultAddress:null,bankDataId:null,salesChannelId:null,syncService:null,httpClient:null,shippingProductId:null,activeTab:"shippingData",enableShippingProductChange:!0,pluginConfig:null}},props:{orderId:{type:String,required:!1,default:null},isBulk:{type:Boolean,required:!0,default:!1},bulkOrderData:{type:Object,required:!1,default:{}}},watch:{shippingProductId(e){e||(this.shippingProductId=null,this.shippingService=null)}},computed:{addressDataRepository(){return this.repositoryFactory.create("plc_address_data",null)},productRepository(){return this.repositoryFactory.create("product",null)},bankDataRepository(){return this.repositoryFactory.create("plc_bank_data",null)},orderRepository(){return this.repositoryFactory.create("order",null)},countryRepository(){return this.repositoryFactory.create("country",null)},shippingServiceRepository(){return this.repositoryFactory.create("plc_shipping_services",null)},getUnitOptions(){return this.unitOptions},getReturnWays(){return this.returnWays},getReturnOptions(){return this.returnOptions},getShipmentDocumentEntries(){return this.shipmentDocumentEntries},getCustomsOptions(){return this.customsOptions},getDocumentTypes(){return this.documentTypes},getCountryOptions(){return this.countryOptions},modalTitle(){return this.$tc("plc.order.page.documentListTitle")},lineItemColumns(){return this.getLineItemColumns()},customsColumns(){return this.getCustomsColumns()},countryCriteria(){let e=new H(1,25);return e.addSorting(H.sort("name","ASC")),e.addFilter(H.equals("active",!0)),e},salesChannelCriteria(){let e=new H(1,25);return e.addFilter(H.equals("active",!0)),e.addFilter(H.equalsAny("type.iconName",["regular-storefront","regular-shopping-basket"])),e.addSorting(H.sort("shortName","ASC")),e},shippingServiceCriteria(){let e=new H(1,25);return e.addFilter(H.not("OR",[H.contains("featureList","052"),H.contains("featureList","053")])),e},shipperAddressesCriteria(){let e=new H(1,25);return e.addFilter(H.equals("salesChannelId",this.orderData.salesChannelId)),e.addFilter(H.equalsAny("addressType",["returnAndShipping","shipping"])),e.addAssociation("bankData"),e.addAssociation("country"),e.addAssociation("salesChannel"),e},returnAddressesCriteria(){let e=new H(1,25);return e.addFilter(H.equals("salesChannelId",this.orderData.salesChannelId)),e.addFilter(H.equalsAny("addressType",["returnAndShipping","return"])),e.addAssociation("bankData"),e.addAssociation("country"),e.addAssociation("salesChannel"),e},salutationCriteria(){let e=new H(1,25);return e.addSorting(H.sort("displayName","ASC")),e},currencyCriteria(){let e=new H(1,25);return e.addSorting(H.sort("name","ASC")),e},bankDataCriteria(){let e=new H(1,25);return e.addSorting(H.sort("displayName","ASC")),e},getLabelTypeOptions(){return[{value:"shipping_label",label:"Versandlabel"},{value:"return_label",label:"Retourenlabel"},{value:"both",label:"Versand- und Retourenlabel"}]},createOptions(){return[{value:"shipping",label:this.$tc("plc.addressData.options.shipping")},{value:"return",label:this.$tc("plc.addressData.options.return")},{value:"returnAndShipping",label:this.$tc("plc.addressData.options.returnAndShipping")}]}},created(){this.createdComponent()},methods:{async getPluginConfig(){this.pluginConfig=await this.systemConfigApiService.getValues("PostLabelCenter.config",this.salesChannelId),this.selectedLabelType=this.pluginConfig["PostLabelCenter.config.defaultLabelType"]},async createdComponent(){if(this.isLoading=!0,await this.getPluginConfig(),this.isBulk&&void 0!==this.bulkOrderData&&this.bulkOrderData[this.orderId]){let e=this.bulkOrderData[this.orderId];this.orderData=e.orderData,this.lineItems=e.lineItems,this.customsData.description=e.customsData.description,this.customsData.packages=e.customsData.packages,this.customsData.returnOption=e.customsData.returnOption,this.customsData.shippingType=e.customsData.shippingType,this.shippingService=e.shippingService,this.salesChannelId=e.salesChannelId,this.bankData=e.bankData,e.bankData&&(this.bankDataId=e.bankData.id),this.shipperAddress=e.shipperAddress,e.shipperAddress&&(this.shipperAddressId=e.shipperAddress.id),this.returnAddress=e.returnAddress,e.returnAddress&&(this.returnAddressId=e.returnAddress.id),this.deliveryAddress=e.deliveryAddress}this.syncService=Shopware.Service("syncService"),this.httpClient=this.syncService.httpClient,await this.getOrderDeliveryAddress(),this.isLoading=!1},setActiveItem(e){this.activeTab=e},createShippingLabel(){this.isLoading=!0,this.createNotificationInfo({message:this.$tc("plc.order.postLabels.messages.creatingLabel")}),this.httpClient.post("/plc/create-manual-shipment",{deliveryAddress:this.deliveryAddress,returnAddress:this.returnAddress,shipperAddress:this.shipperAddress,shippingService:this.shippingService,lineItems:this.lineItems,customsData:this.customsData,orderData:this.orderData,selectedLabelType:this.selectedLabelType,bankData:this.bankData,salesChannelId:this.orderData.salesChannelId,shippingProductId:this.shippingProductId},{headers:this.syncService.getBasicHeaders()}).then(e=>{200===e.status&&e.data.data?(this.createNotificationSuccess({message:this.$tc("plc.order.postLabels.messages.successCreatingLabel")}),this.isLoading=!1,this.$emit("modal-save")):(this.createNotificationError({message:this.$tc("plc.order.postLabels.messages.errorCreatingLabel")}),null!==e.data.message&&this.createNotificationError({message:this.orderData.orderNumber+": "+e.data.message}),this.isLoading=!1,this.$emit("modal-close"))})},async getOrderDeliveryAddress(){this.getCountryList();let e=new H;e.addFilter(H.equals("id",this.orderId)),e.addAssociation("deliveries"),e.addAssociation("deliveries.shippingOrderAddress"),e.addAssociation("deliveries.shippingMethod"),e.addAssociation("lineItems.product");try{let t=await Promise.all([this.orderRepository.search(e)]);t[0].total>0&&(this.orderData=t[0].first(),(!this.isBulk||this.isBulk&&void 0===this.bulkOrderData[this.orderId])&&(this.deliveryAddress=this.orderData.deliveries[0],this.orderData.lineItems.forEach(e=>{let t=e.product??null;if(null===t){let a=new H;a.addFilter(H.equals("productNumber",e.payload.productNumber)),this.productRepository.search(a,Shopware.Context.api).then(e=>{t=e.length>0?e[0]:null})}this.lineItems.push({id:e.id,packageNumber:1,customsOptions:"1",units:"PCE",countryOfOrigin:e.customFields?.countryOfOrigin,hsTariffNumber:e.customFields?.plc_customsTariffNumber,productId:e.productId,productNumber:t?.productNumber??e.payload.productNumber,name:e.label,weight:t?.weight,quantity:e.quantity,unitPrice:e.unitPrice,defaultQuantity:e.quantity})})),this.searchCurrentActiveAddress(),this.shippingProductId=this.deliveryAddress.shippingMethod.translated?.customFields?.plc_shipping_service??null,null===this.shippingProductId&&(this.shippingProductId=this.deliveryAddress.shippingMethod.customFields?.plc_shipping_service??null),await this.getPlcShippingServiceData())}catch(e){this.createErrorNotification({message:e})}},getPlcShippingServiceData(){if(this.shippingProductId){let e=new H;e.addFilter(H.equals("id",this.shippingProductId)),this.shippingServiceRepository.search(e).then(e=>{e.total>0&&(this.shippingService=e.first(),this.createCustomsOptions())})}},getThirdPartyId(){if(null===this.shippingService)return!1;let e=this.jsonDecode(this.shippingService.shippingProduct,"thirdPartyID");return"65"===e||"46"===e},displayOptionValue(e,t){let a=t.filter(t=>t.value===e);return a.length>0?a[0].label:""},duplicateEntry(e){let t=0;this.lineItems.forEach(a=>{e.productId===a.productId&&t++}),this.lineItems.push({id:e.id.replace(/_.*$/,"")+"_"+t,packageNumber:t+1,customsOptions:e.customsOptions,units:e.units,countryOfOrigin:e.countryOfOrigin,hsTariffNumber:e.hsTariffNumber,productNumber:e.productNumber,productId:e.productId,name:e.name,weight:e.weight,quantity:e.quantity,unitPrice:e.unitPrice})},onEntryDelete(e){this.lineItems=this.lineItems.filter(t=>t.id!==e.id)},onDeletePackage(e){this.customsData.packages=this.customsData.packages.filter(t=>t!==e)},createCustomsOptions(){if(null!==this.shippingService){JSON.parse(this.shippingService.featureList).filter(e=>"052"===e.thirdPartyID||"053"===e.thirdPartyID).length>0&&(this.enableShippingProductChange=!1);let e=JSON.parse(this.shippingService.customsInformation);this.customsOptions=[],this.unitOptions=[],this.returnWays=[],this.shipmentDocumentEntries=[],this.returnOptions=[],this.createOptionArray(e.customsOption,this.customsOptions),this.createOptionArray(e.units,this.unitOptions),this.createOptionArray(e.returnway,this.returnWays),this.createOptionArray(e.shipmentDocumentEntry,this.shipmentDocumentEntries),this.createOptionArray(e.returnoptions,this.returnOptions)}},createOptionArray(e,t){if(null!==e)for(let a in e){let n={value:a,label:e[a]};t.includes(n)||t.push(n)}},getCountryList(){return this.httpClient.post("/plc/get-country-list",{},{headers:this.syncService.getBasicHeaders()}).then(e=>{200===e.status&&(this.countryList=e.data.data,this.createOptionArray(this.countryList,this.countryOptions))})},async getReturnAddress(e){let t=new H;t.addFilter(H.equals("id",e));try{let e=await Promise.all([this.addressDataRepository.search(t)]);e[0].total>0&&(this.returnAddress=e[0].first())}catch(e){this.createErrorNotification({message:e})}},async getShippingAddress(e){let t=new H;t.addFilter(H.equals("id",e)),t.addAssociation("bankData");try{let e=await Promise.all([this.addressDataRepository.search(t)]);e[0].total>0&&(this.shipperAddress=e[0].first(),null!==this.shipperAddress.bankDataId&&(this.bankDataId=this.shipperAddress.bankDataId,this.bankData=this.shipperAddress.bankData))}catch(e){this.createErrorNotification({message:e})}},async getBankData(e){let t=new H;t.addFilter(H.equals("id",e));try{let e=await Promise.all([this.bankDataRepository.search(t)]);e[0].total>0&&(this.bankData=e[0].first())}catch(e){this.createNotificationError({message:e})}},async getCountryData(e){let t=new H;t.addFilter(H.equals("id",e.countryId));try{let a=await Promise.all([this.countryRepository.search(t)]);a[0].total>0&&(e.country=a[0].first())}catch(e){this.createNotificationError({message:e})}},addCustomsColumn(){this.customsData.packages.push({packageNumber:1,documentType:null,documentNumber:null,quantity:1})},buildCriteriaAddress(e){let t=new H;return t.addAssociation("country"),t.addFilter(H.equals("defaultAddress",!0)),t.addFilter(H.equals("addressType",e)),t},applyFilters(e,t){return this.criteria=new H,this.criteria.filters=[],this.criteria.filters.push({field:"salesChannelId",operator:"equals",value:this.orderData.salesChannelId}),this.criteria.filters.push({connection:"OR",filters:[{field:"addressType",operator:"equals",value:e},{field:"addressType",operator:"equals",value:t}]})},async searchCurrentActiveAddress(){let e=this.buildCriteriaAddress("returnAndShipping"),t=await Promise.all([this.addressDataRepository.search(e)]);if(t[0].total>0)this.shipperAddressId=t[0].first().id,this.returnAddressId=t[0].first().id;else{let e,t;let a=this.buildCriteriaAddress("return"),n=await Promise.all([this.addressDataRepository.search(a)]);n[0].total>0&&(this.returnAddressId=n[0].first().id);let s=this.buildCriteriaAddress("shipping"),l=await Promise.all([this.addressDataRepository.search(s)]);if(l[0].total>0&&(this.shipperAddressId=l[0].first().id),null===this.shipperAddressId){let t=this.applyFilters("shipping","returnAndShipping");e=await Promise.all([this.addressDataRepository.search(t)])}if(e[0].total>0&&(this.shipperAddressId=e[0].first().id),null===this.returnAddressId){let e=this.applyFilters("return","returnAndShipping");t=await Promise.all([this.addressDataRepository.search(e)])}t[0].total>0&&(this.shipperAddressId=t[0].first().id)}this.returnAddressId&&this.getReturnAddress(this.returnAddressId),this.shipperAddressId&&this.getShippingAddress(this.shipperAddressId)},getCustomsColumns(){return[{property:"packageNumber",label:this.$tc("plc.order.postLabels.label.packageNumber"),allowResize:!0,inlineEdit:"number"},{property:"documentType",label:this.$tc("plc.order.postLabels.label.documentType"),dataIndex:"label",inlineEdit:"string"},{property:"documentNumber",label:this.$tc("plc.order.postLabels.label.documentNumber"),dataIndex:"label",inlineEdit:"string"},{property:"quantity",label:this.$tc("plc.order.postLabels.label.quantity"),dataIndex:"label",inlineEdit:"number"}]},getLineItemColumns(){return[{property:"packageNumber",label:"Paketnummer",allowResize:!0,inlineEdit:"number"},{property:"productNumber",label:"ProductNumber",disabled:!0,allowResize:!0},{property:"name",label:"Name",disabled:!0,allowResize:!0},{property:"quantity",label:"Menge",allowResize:!0,inlineEdit:"number"},{property:"customsOptions",label:"Zolloptionen",inlineEdit:"string"},{property:"units",label:"Einheit",inlineEdit:"string"},{property:"countryOfOrigin",label:"Ursprungsland",inlineEdit:"string"},{property:"hsTariffNumber",label:"HS Tariffnummer",allowResize:!0,inlineEdit:"string"},{property:"weight",label:"Gewicht",allowResize:!0},{property:"unitPrice",label:"Einzelpreis",allowResize:!0}]},saveShippingLabelData(){this.$emit("modal-save",{id:this.orderId,data:{deliveryAddress:this.deliveryAddress,returnAddress:this.returnAddress,shipperAddress:this.shipperAddress,shippingService:this.shippingService,lineItems:this.lineItems,customsData:this.customsData,orderData:this.orderData,selectedLabelType:this.selectedLabelType,bankData:this.bankData,salesChannelId:this.orderData.salesChannelId,shippingProductId:this.shippingProductId}})}}});let{Component:Z,Mixin:X}=Shopware;Z.register("post-logo-icon",{template:'{% block post_logo_icon %}\n    <img style="width:30px;height:30px" :src="assetFilter(\'postlabelcenter/static/img/post-logo.png\')">\n{% endblock %}\n',mixins:[X.getByName("plc-helper")]});let{Component:G}=Shopware;async function U(e){let t=(await Shopware.Service("systemConfigApiService").getValues("PostLabelCenter"))["PostLabelCenter.config.disableAutomaticLabel"];if(void 0!==t&&!0===t)return;e.createNotificationInfo({message:e.$tc("plc.order.postLabels.modal.creatingLabel")});let a=Shopware.Service("syncService");a.httpClient.post("/plc/create-shipment",{orderId:e.order.id,salesChannelId:e.order.salesChannelId},{headers:a.getBasicHeaders()}).then(t=>{200===t.status&&!0===t.data.data?e.createNotificationSuccess({message:e.$tc("plc.order.postLabels.modal.createLabelSuccess")}):(e.createNotificationError({message:e.$tc("plc.order.postLabels.modal.errorCreatingLabel")}),null!==t.data.message&&e.createNotificationError({message:t.data.message}))})}G.override("sw-order-detail",{template:"{% block sw_order_detail_content_tabs_extension %}\n    {% parent %}\n\n    {% block plc_detail_tab %}\n        <sw-tabs-item :route=\"{name: 'plc.order.documents', params: { id: $route.params.id } }\"\n                      :title=\"$tc('plc.order.tab.documentsTitle')\">\n            {{ $tc('plc.order.tab.documentsTitle') }}\n        </sw-tabs-item>\n\n        <sw-tabs-item :route=\"{name: 'plc.order.returnData', params: { id: $route.params.id } }\"\n                      :title=\"$tc('plc.order.tab.returnData')\">\n            {{ $tc('plc.order.tab.returnData') }}\n        </sw-tabs-item>\n    {% endblock %}\n{% endblock %}\n"});let{Component:W}=Shopware;W.override("sw-order-details-state-card",{methods:{onLeaveModalConfirm(e,t=!0){return"ship"===this.currentActionName&&U(this),this.$super("onLeaveModalConfirm",e,t)}}}),a(329);let{Component:J}=Shopware;J.override("sw-order-list",{template:'{% block sw_order_list_bulk_selected_actions_content_bulk_edit %}\n    {% parent %}\n\n    <a class="link link-primary" @click="openBulkLabelModal">\n        {{ $tc(\'plc.order.labels.bulkLabel\') }}\n    </a>\n    <bulk-label-modal\n            v-if="showBulkLabelModal"\n            @modal-save="saveBulkLabelModal"\n            @modal-close="closeBulkLabelModal"\n            :order-list="showBulkLabelModal">\n    </bulk-label-modal>\n\n    <a class="link link-primary" @click="openMergedLabelModal">\n        {{ $tc(\'plc.order.labels.mergedLabel\') }}\n    </a>\n    <merged-label-modal\n            v-if="showMergedLabelModal"\n            @modal-save="saveMergedLabelModal"\n            @modal-close="closeMergedLabelModal"\n            :order-list="showMergedLabelModal">\n    </merged-label-modal>\n{% endblock %}\n',data(){return{showBulkLabelModal:!1,showMergedLabelModal:!1}},computed:{displayBulkLabelModal(){return!!this.showBulkLabelModal},displayMergedFileModal(){return!!this.showMergedLabelModal},orderCriteria(){let e=this.$super("orderCriteria");return e.addAssociation("addresses.country"),e}},beforeRouteLeave(e,t,a){this.showBulkLabelModal&&this.closeBulkLabelModal(),this.showMergedLabelModal&&this.closeMergedFileModal(),this.$nextTick(()=>{a()})},methods:{openBulkLabelModal(){this.showBulkLabelModal=this.selectionArray},closeBulkLabelModal(){this.showBulkLabelModal=!1},saveBulkLabelModal(){this.showBulkLabelModal=!1},openMergedLabelModal(){this.showMergedLabelModal=this.selectionArray},closeMergedLabelModal(){this.showMergedLabelModal=!1},saveMergedLabelModal(){this.showMergedLabelModal=!1}}});let{Component:K}=Shopware;K.override("sw-order-general-info",{methods:{onLeaveModalConfirm(e,t=!0){return"ship"===this.currentActionName&&U(this),this.$super("onLeaveModalConfirm",e,t)}}});let{Component:Y}=Shopware;Y.override("sw-order-state-history-card",{methods:{onLeaveModalConfirm(e,t=!0){return"ship"===this.currentActionName&&U(this),this.$super("onLeaveModalConfirm",e,t)}}}),a(446);let{Component:Q,Mixin:ee,Context:et}=Shopware,{Criteria:ea}=Shopware.Data;Q.register("shipping-document-tab",{template:'{% block plc_shipping_document_details %}\n    <sw-card :title="$tc(\'plc.order.page.documentListTitle\')" class="shipping-document-list"\n             position-identifier="shipping-document-tab">\n        <sw-loader\n                v-if="isLoading"\n        />\n        <template #default v-if="total > 0 && !isLoading">\n            {% block post_label_entries %}\n                <sw-entity-listing\n                        :columns="orderLabelsColumns"\n                        :items="postLabelEntries"\n                        :show-actions="true"\n                        :sort-by="sortBy"\n                        :full-page="false"\n                        :show-selection="false"\n                        :sort-direction="sortDirection"\n                        :is-loading="isLoading"\n                        :allow-column-edit="false"\n                        :allow-inline-edit="false"\n                        :disable-data-fetching="true"\n                        :repository="orderLabelsRepository"\n                        :page="page"\n                        :limit="limit"\n                        @page-change="onPageChange"\n                        @update-records="updateTotal">\n\n                    <template #column-createdAt="{ item }">\n                        {{ formatDate(item.createdAt) }}\n                    </template>\n\n                    <template #column-name="{ item }">\n                        <a @click="getLabelPdf(item)" target="_blank">\n                                <span v-if="item.name != \'RETURN_LABEL\'">\n                                      {{ $tc(\'plc.order.postLabels.shippingLabel\') }}\n                                </span>\n                            <span v-else>{{ $tc(\'plc.order.postLabels.returnLabel\') }}</span>\n                        </a>\n                    </template>\n\n                    <template #column-shippingDocuments="{ item }">\n                        <a v-if="item.shippingDocuments" @click="getLabelPdf(item, true)" target="_blank">\n                            {{ $tc(\'plc.order.postLabels.shippingDocuments\') }}\n                        </a>\n                        <span v-else></span>\n                    </template>\n\n                    <template #column-atTrackingNumber="{ item }">\n                            <span v-if="item.atTrackingNumber && jsonDecode(item.atTrackingNumber).length > 0">\n                                <a v-for="trackingNumber in jsonDecode(item.atTrackingNumber)"\n                                   @click="openTrackingUrl(trackingNumber)" class="" target="_blank">\n                                    {{ trackingNumber }}\n                                </a>\n                            </span>\n                        <span v-else></span>\n                    </template>\n\n                    <template #column-intTrackingNumber="{ item }">\n                            <span v-if="item.intTrackingNumber && jsonDecode(item.intTrackingNumber).length > 0">\n                                <a v-for="trackingNumber in jsonDecode(item.intTrackingNumber)"\n                                   @click="openTrackingUrl(trackingNumber)" class="" target="_blank">\n                                    {{ trackingNumber }}\n                                </a>\n                            </span>\n                        <span v-else></span>\n                    </template>\n\n                    <template #column-downloaded="{ item }">\n                        <div v-if="feature.isActive(\'v6.6.0.0\')">\n                            <mt-icon v-if="item.downloaded == true" name="regular-checkmark-xs" small/>\n                            <mt-icon v-else name="regular-times-xs" small/>\n                        </div>\n                        <div v-else>\n                            <sw-icon v-if="item.downloaded == true" name="regular-checkmark-xs" small/>\n                            <sw-icon v-else name="regular-times-xs" small/>\n                        </div>\n\n                    </template>\n\n                    <template #actions="{ item }">\n                        <sw-context-menu-item\n                                variant="danger"\n                                class="plc-address-data-list__context-menu-edit-delete"\n                                @click="cancelShipment(item.id)"\n                        >\n                            {{ $tc(\'plc.general.context-menu.delete\') }}\n                        </sw-context-menu-item>\n                    </template>\n                </sw-entity-listing>\n            {% endblock %}\n        </template>\n\n        <template #footer>\n            <div class="create-button-row">\n                <a class="btn btn-primary" target="_blank">\n                    <sw-button variant="primary" :disabled="isLoading"\n                               @click="openCreateModal()">\n                        {{ $tc(\'plc.order.postLabels.generateAdditionalDocuments\') }}\n                    </sw-button>\n                </a>\n\n                <shipping-label-create-modal\n                        class="plc-shipping-label-modal"\n                        v-if="showCreationModal"\n                        :order-id="orderId"\n                        :is-bulk="false"\n                        @modal-save="saveCreateModal"\n                        @modal-close="closeCreateModal">\n                </shipping-label-create-modal>\n            </div>\n        </template>\n    </sw-card>\n{% endblock %}\n',inject:["repositoryFactory","systemConfigApiService","loginService","numberRangeService"],mixins:[ee.getByName("notification"),ee.getByName("listing"),ee.getByName("plc-helper")],props:{orderId:{type:String,required:!1,default:null}},data(){return{sortBy:"createdAt",sortDirection:"DESC",isLoading:!1,syncService:null,limit:25,page:1,postLabelEntries:null,createLabelModal:!1,httpClient:null,trackingUrl:null,total:0}},created(){this.createdComponent()},mounted(){this.createdComponent()},computed:{orderLabelsRepository(){return this.repositoryFactory.create("plc_order_labels")},orderLabelsColumns(){return this.getColumns()},showCreationModal(){return!!this.createLabelModal}},beforeRouteLeave(e,t,a){this.createLabelModal&&this.closeCreateModal(),this.$nextTick(()=>{a()})},methods:{createdComponent(){this.syncService=Shopware.Service("syncService"),this.httpClient=this.syncService.httpClient},async getList(){this.isLoading=!0;let e=new ea(this.page,this.limit);e.addSorting(ea.sort("createdAt","DESC")),e.addFilter(ea.equals("orderId",this.orderId));try{let t=await Promise.all([this.orderLabelsRepository.search(e)]);this.total=t[0].total,this.postLabelEntries=t[0],this.isLoading=!1}catch{this.isLoading=!1}},getColumns(){return[{property:"createdAt",primary:!0,label:this.$tc("plc.order.labels.createdAt"),allowResize:!0},{property:"name",label:this.$tc("plc.order.labels.fileName"),allowResize:!0},{property:"shippingDocuments",label:this.$tc("plc.order.labels.shippingDocuments"),allowResize:!0},{property:"atTrackingNumber",label:this.$tc("plc.order.labels.trackingAT"),allowResize:!0},{property:"intTrackingNumber",label:this.$tc("plc.order.labels.trackingINT"),allowResize:!0},{property:"downloaded",label:this.$tc("plc.order.labels.downloaded"),allowResize:!0}]},openCreateModal(){this.createLabelModal=!0},saveCreateModal(){this.createLabelModal=!1,this.getList()},closeCreateModal(){this.createLabelModal=!1},async getLabelPdf(e,t=!1){if(null===this.orderId||null===e.documentId)return;this.createNotificationInfo({message:this.$tc("plc.modal.pdfLabelStartingSoon")});let a={orderId:this.orderId,documentId:e.documentId,pdfLabelId:e.id};return t&&(a={orderId:this.orderId,documentId:e.documentId,pdfLabelId:e.id,shippingContent:!0}),this.isLoading=!0,this.httpClient.post("/plc/shipping-data",a,{headers:this.syncService.getBasicHeaders()}).then(a=>{if(200===a.status){let n=`data:application/pdf;base64,${a.data.data}`,s=document.createElement("a"),l="RETURN_LABEL"===e.name?this.$tc("plc.order.download.returnLabel")+this.formatDate(e.createdAt,!0)+".pdf":this.$tc("plc.order.download.shippingLabel")+this.formatDate(e.createdAt,!0)+".pdf";t&&(l=this.$tc("plc.order.download.shippingDocuments")+this.formatDate(e.createdAt,!0)+".pdf"),s.href=n,s.download=l,s.click(),this.getList()}this.isLoading=!1})},async cancelShipment(e){if(null!==e)return this.isLoading=!0,this.httpClient.post("/plc/cancel-shipment",{orderId:this.orderId,labelId:e},{headers:this.syncService.getBasicHeaders()}).then(e=>{200===e.status&&!0===e.data.data?this.createNotificationSuccess({message:this.$tc("plc.modal.cancelLabelSuccessful")}):this.createNotificationError({message:this.$tc("plc.modal.errorDeletingLabel")}),this.getList(),this.isLoading=!1})},openTrackingUrl(e){if(null===this.trackingUrl)this.getTrackingUrl().then(t=>{if(this.trackingUrl=t,null!==this.trackingUrl){let t=this.trackingUrl+e;window.open(t,"_blank")}});else{let t=this.trackingUrl+e;window.open(t,"_blank")}},getTrackingUrl(){return new Promise(e=>{this.systemConfigApiService.getValues("PostLabelCenter").then(t=>{e(t["PostLabelCenter.config.postTrackingUrl"])})})},jsonDecode(e){return JSON.parse(e)},updateTotal({total:e}){this.total=e},updateCriteria(e){this.page=1,this.filterCriteria=e}}});let{Component:en}=Shopware;en.override("sw-settings-shipping-detail",{template:'{% block sw_settings_shipping_detail_custom_field_sets %}\n    <sw-card :title="$tc(\'plc.shippingServices.shippingMethod.headline\')">\n        <sw-internal-link :router-link="{ name: \'plc.shipping.service.list\'}"\n                          icon="regular-long-arrow-right" :inline="false" :disabled="false" :hideIcon="false">\n            {{ $tc(\'plc.shippingServices.shippingMethod.link\') }}\n        </sw-internal-link>\n    </sw-card>\n\n    {% parent %}\n{% endblock %}\n'}),a(226),a(265);let{Component:es,Mixin:el,Context:ei}=Shopware,{Criteria:er}=Shopware.Data;es.register("order-return-tab",{template:'{% block plc_order_return_tab %}\n    <div class="plc-order-return">\n        <mt-loader v-if="isLoading && feature.isActive(\'v6.6.0.0\')"></mt-loader>\n        <sw-loader v-if="isLoading && !feature.isActive(\'v6.6.0.0\')"/>\n\n        <sw-card position-identifier="order-return-tab" :title="$tc(\'plc.order.page.returnDataTitle\')"\n                 class="order-return-card" v-else>\n            <template v-if="orderReturnData && orderId && lineItems.length > 0">\n                <div class="info-fields">\n                    <div class="return-note">\n                        <h4>{{ $tc(\'plc.order.returnData.returnNote\') }}</h4>\n                        <span>{{ orderReturnData.returnNote }}</span>\n                    </div>\n                    <div class="return-reason">\n                        <h4>{{ $tc(\'plc.order.returnData.returnReason\') }}</h4>\n                        <span>{{ orderReturnData.returnReason.translated ? orderReturnData.returnReason.translated.name : orderReturnData.returnReason.name }}</span>\n                    </div>\n                </div>\n                <div class="line-items-grid">\n                    <sw-data-grid\n                            :dataSource="lineItems"\n                            :columns="lineItemColumns"\n                            :showSelection="false"\n                            :showActions="false">\n                        <template #column-productNumber="{ item }">\n                            <sw-context-menu-item\n                                    class="sw-order-list__order-view-action"\n                                    :router-link="{ name: \'sw.product.detail\', params: { id: item.product.id } }"\n                            >\n                                {{ item.product.productNumber }}\n                            </sw-context-menu-item>\n                        </template>\n\n                        <template #column-name="{ item }">\n                            <span>{{ item.label ?? item.product.translated.name }}</span>\n                        </template>\n\n                        <template #column-unitPrice="{ item }">\n                            <span>{{ item.unitPrice | currency("EUR") }}</span>\n                        </template>\n                    </sw-data-grid>\n                </div>\n            </template>\n            <template v-else>\n                <sw-empty-state\n                        :title="$tc(\'plc.order.returnData.noReturnsFound\')"\n                        :absolute="false"\n                        :subline="\'\'"\n                >\n                    <template #icon>\n                        <img :src="assetFilter(\'/administration/static/img/empty-states/order-empty-state.svg\')">\n                    </template>\n                </sw-empty-state>\n            </template>\n        </sw-card>\n    </div>\n{% endblock %}\n',inject:["repositoryFactory","systemConfigApiService","loginService","feature"],mixins:[el.getByName("notification"),el.getByName("plc-helper")],props:{orderId:{type:String,required:!1,default:null}},data(){return{isLoading:!1,limit:25,orderReturnData:null,lineItems:[]}},created(){this.createdComponent()},computed:{orderReturnDataRepository(){return this.repositoryFactory.create("plc_order_return_data")},lineItemColumns(){return this.getLineItemColumns()}},methods:{createdComponent(){this.isLoading=!0;let e=new er(this.page,this.limit);e.setTerm(this.term),e.addFilter(er.equals("orderId",this.orderId)),e.addAssociation("returnReason"),this.orderReturnDataRepository.search(e).then(e=>{this.orderReturnData=e.first(),this.total=e.total,null!==this.orderReturnData&&(this.lineItems=JSON.parse(this.orderReturnData.lineItems))}),this.isLoading=!1},getLineItemColumns(){return[{property:"productNumber",label:this.$tc("plc.order.returnData.columns.productNumber"),disabled:!0},{property:"name",label:this.$tc("plc.order.returnData.columns.name"),disabled:!0,allowResize:!0},{property:"quantity",label:this.$tc("plc.order.returnData.columns.quantity")},{property:"unitPrice",label:this.$tc("plc.order.returnData.columns.unitPrice")}]}}});let{Module:eo}=Shopware;eo.register("post-label-center",{type:"plugin",name:"plc",title:"plc.menu.mainMenuItemmenu",description:"plc.menu.descriptionTextModule",color:"#ff3d58",snippets:{"de-DE":e,"en-GB":t},routeMiddleware(e,t){let a="plc.order.documents",n="plc.order.returnData";"sw.order.detail"===t.name&&t.children.every(e=>e.name!==a&&e.name!==n)&&t.children.push({component:"shipping-document-tab",name:a,meta:{parentPath:"sw.order.index"},path:"/sw/order/detail/:id/shipping-document"},{component:"order-return-tab",name:n,meta:{parentPath:"sw.order.index"},path:"/sw/order/detail/:id/order-return"}),e(t)}})}()})();